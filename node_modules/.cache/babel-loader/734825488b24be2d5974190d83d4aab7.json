{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp, _initialiseProps;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport ConfigProvider from '../config-provider';\nimport nextLocale from '../locale/zh-cn';\nimport { func, obj } from '../util';\nimport CardHeader from './head/card-header';\nimport DatePanelHeader from './head/date-panel-header';\nimport MonthPanelHeader from './head/month-panel-header';\nimport YearPanelHeader from './head/year-panel-header';\nimport DateTable from './table/date-table';\nimport MonthTable from './table/month-table';\nimport YearTable from './table/year-table';\nimport { checkMomentObj, formatDateValue, getVisibleMonth, isSameYearMonth, CALENDAR_MODES, CALENDAR_MODE_DATE, CALENDAR_MODE_MONTH, CALENDAR_MODE_YEAR, getLocaleData } from './utils';\n\nvar isValueChanged = function isValueChanged(value, oldVlaue) {\n  if (value && oldVlaue) {\n    if (!moment.isMoment(value)) {\n      value = moment(value);\n    }\n\n    if (!moment.isMoment(oldVlaue)) {\n      oldVlaue = moment(oldVlaue);\n    }\n\n    return value.valueOf() !== oldVlaue.valueOf();\n  } else {\n    return value !== oldVlaue;\n  }\n};\n/** Calendar */\n\n\nvar Calendar = (_temp = _class = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props, context) {\n    _classCallCheck(this, Calendar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var value = formatDateValue(props.value || props.defaultValue);\n    var visibleMonth = getVisibleMonth(props.defaultVisibleMonth, value);\n    _this.MODES = props.modes;\n    _this.today = moment();\n    _this.state = {\n      value: value,\n      mode: props.mode || _this.MODES[0],\n      MODES: _this.MODES,\n      visibleMonth: visibleMonth\n    };\n    return _this;\n  }\n\n  Calendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    var st = {};\n\n    if ('value' in props) {\n      var value = formatDateValue(props.value);\n\n      if (value && isValueChanged(props.value, state.value)) {\n        st.visibleMonth = value;\n      }\n\n      st.value = value;\n    }\n\n    if (props.mode && state.MODES.indexOf(props.mode) > -1) {\n      st.mode = props.mode;\n    }\n\n    return st;\n  };\n  /**\n   * 根据日期偏移量设置当前展示的月份\n   * @param {Number} offset 日期偏移的数量\n   * @param {String} type 日期偏移的类型 days, months, years\n   */\n\n\n  Calendar.prototype.changeVisibleMonthByOffset = function changeVisibleMonthByOffset(offset, type) {\n    var cloneValue = this.state.visibleMonth.clone();\n    cloneValue.add(offset, type);\n    this.changeVisibleMonth(cloneValue, 'buttonClick');\n  };\n\n  Calendar.prototype.render = function render() {\n    var _classnames, _tables, _panelHeaders;\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        rtl = _props.rtl,\n        className = _props.className,\n        shape = _props.shape,\n        showOtherMonth = _props.showOtherMonth,\n        format = _props.format,\n        locale = _props.locale,\n        dateCellRender = _props.dateCellRender,\n        monthCellRender = _props.monthCellRender,\n        yearCellRender = _props.yearCellRender,\n        disabledDate = _props.disabledDate,\n        yearRange = _props.yearRange,\n        disableChangeMode = _props.disableChangeMode,\n        others = _objectWithoutProperties(_props, ['prefix', 'rtl', 'className', 'shape', 'showOtherMonth', 'format', 'locale', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'disabledDate', 'yearRange', 'disableChangeMode']);\n\n    var state = this.state;\n    var classNames = classnames((_classnames = {}, _classnames[prefix + 'calendar'] = true, _classnames[prefix + 'calendar-' + shape] = shape, _classnames), className);\n\n    if (rtl) {\n      others.dir = 'rtl';\n    }\n\n    var visibleMonth = state.visibleMonth; // reset moment locale\n\n    if (locale.momentLocale) {\n      state.value && state.value.locale(locale.momentLocale);\n      visibleMonth.locale(locale.momentLocale);\n    }\n\n    var localeData = getLocaleData(locale.format || {}, visibleMonth.localeData());\n    var headerProps = {\n      prefix: prefix,\n      value: state.value,\n      mode: state.mode,\n      disableChangeMode: disableChangeMode,\n      yearRange: yearRange,\n      locale: locale,\n      rtl: rtl,\n      visibleMonth: visibleMonth,\n      momentLocale: localeData,\n      changeMode: this.changeMode,\n      changeVisibleMonth: this.changeVisibleMonth,\n      goNextDecade: this.goNextDecade,\n      goNextYear: this.goNextYear,\n      goNextMonth: this.goNextMonth,\n      goPrevDecade: this.goPrevDecade,\n      goPrevYear: this.goPrevYear,\n      goPrevMonth: this.goPrevMonth\n    };\n    var tableProps = {\n      prefix: prefix,\n      visibleMonth: visibleMonth,\n      showOtherMonth: showOtherMonth,\n      value: state.value,\n      mode: state.mode,\n      locale: locale,\n      dateCellRender: dateCellRender,\n      monthCellRender: monthCellRender,\n      yearCellRender: yearCellRender,\n      disabledDate: disabledDate,\n      momentLocale: localeData,\n      today: this.today,\n      goPrevDecade: this.goPrevDecade,\n      goNextDecade: this.goNextDecade\n    };\n    var tables = (_tables = {}, _tables[CALENDAR_MODE_DATE] = React.createElement(DateTable, _extends({\n      format: format\n    }, tableProps, {\n      onSelectDate: this.onSelectCell\n    })), _tables[CALENDAR_MODE_MONTH] = React.createElement(MonthTable, _extends({}, tableProps, {\n      onSelectMonth: this.onSelectCell\n    })), _tables[CALENDAR_MODE_YEAR] = React.createElement(YearTable, _extends({}, tableProps, {\n      rtl: rtl,\n      onSelectYear: this.onSelectCell\n    })), _tables);\n    var panelHeaders = (_panelHeaders = {}, _panelHeaders[CALENDAR_MODE_DATE] = React.createElement(DatePanelHeader, headerProps), _panelHeaders[CALENDAR_MODE_MONTH] = React.createElement(MonthPanelHeader, headerProps), _panelHeaders[CALENDAR_MODE_YEAR] = React.createElement(YearPanelHeader, headerProps), _panelHeaders);\n    return React.createElement('div', _extends({}, obj.pickOthers(Calendar.propTypes, others), {\n      className: classNames\n    }), shape === 'panel' ? panelHeaders[state.mode] : React.createElement(CardHeader, headerProps), tables[state.mode]);\n  };\n\n  return Calendar;\n}(Component), _class.propTypes = _extends({}, ConfigProvider.propTypes, {\n  prefix: PropTypes.string,\n  rtl: PropTypes.bool,\n\n  /**\n   * 默认选中的日期（moment 对象）\n   */\n  defaultValue: checkMomentObj,\n\n  /**\n   * 选中的日期值 (moment 对象)\n   */\n  value: checkMomentObj,\n\n  /**\n   * 面板模式\n   */\n  mode: PropTypes.oneOf(CALENDAR_MODES),\n  // 生成 API 文档需要手动改回 ['date', 'month', 'year']\n  // 面板可变化的模式列表，仅初始化时接收一次\n  modes: PropTypes.array,\n  // 禁用更改面板模式，采用 dropdown 的方式切换显示日期 (暂不正式对外透出)\n  disableChangeMode: PropTypes.bool,\n  // 日期值的格式（用于日期title显示的格式）\n  format: PropTypes.string,\n\n  /**\n   * 是否展示非本月的日期\n   */\n  showOtherMonth: PropTypes.bool,\n\n  /**\n   * 默认展示的月份\n   */\n  defaultVisibleMonth: PropTypes.func,\n\n  /**\n   * 展现形态\n   */\n  shape: PropTypes.oneOf(['card', 'fullscreen', 'panel']),\n\n  /**\n   * 选择日期单元格时的回调\n   * @param {Object} value 对应的日期值 (moment 对象)\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * 面板模式变化时的回调\n   * @param {String} mode 对应面板模式 date month year\n   */\n  onModeChange: PropTypes.func,\n\n  /**\n   * 展现的月份变化时的回调\n   * @param {Object} value 显示的月份 (moment 对象)\n   * @param {String} reason 触发月份改变原因\n   */\n  onVisibleMonthChange: PropTypes.func,\n\n  /**\n   * 自定义样式类\n   */\n  className: PropTypes.string,\n\n  /**\n   * 自定义日期渲染函数\n   * @param {Object} value 日期值（moment对象）\n   * @returns {ReactNode}\n   */\n  dateCellRender: PropTypes.func,\n\n  /**\n   * 自定义月份渲染函数\n   * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n   * @returns {ReactNode}\n   */\n  monthCellRender: PropTypes.func,\n  yearCellRender: PropTypes.func,\n  // 兼容 0.x yearCellRender\n\n  /**\n   * 年份范围，[START_YEAR, END_YEAR] (只在shape 为 ‘card’, 'fullscreen' 下生效)\n   */\n  yearRange: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * 不可选择的日期\n   * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n   * @param {String} view 当前视图类型，year: 年， month: 月, date: 日\n   * @returns {Boolean}\n   */\n  disabledDate: PropTypes.func,\n\n  /**\n   * 国际化配置\n   */\n  locale: PropTypes.object\n}), _class.defaultProps = {\n  prefix: 'next-',\n  rtl: false,\n  shape: 'fullscreen',\n  modes: CALENDAR_MODES,\n  disableChangeMode: false,\n  format: 'YYYY-MM-DD',\n  onSelect: func.noop,\n  onVisibleMonthChange: func.noop,\n  onModeChange: func.noop,\n  dateCellRender: function dateCellRender(value) {\n    return value.date();\n  },\n  locale: nextLocale.Calendar,\n  showOtherMonth: true\n}, _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onSelectCell = function (date, nextMode) {\n    var shape = _this2.props.shape;\n\n    _this2.changeVisibleMonth(date, 'cellClick'); // 当用户所在的面板为初始化面板时，则选择动作为触发 onSelect 回调\n\n\n    if (_this2.state.mode === _this2.MODES[0]) {\n      _this2.props.onSelect(date);\n    }\n\n    if (shape === 'panel') {\n      _this2.changeMode(nextMode);\n    }\n  };\n\n  this.changeMode = function (nextMode) {\n    if (nextMode && _this2.MODES.indexOf(nextMode) > -1 && nextMode !== _this2.state.mode) {\n      _this2.setState({\n        mode: nextMode\n      });\n\n      _this2.props.onModeChange(nextMode);\n    }\n  };\n\n  this.changeVisibleMonth = function (date, reason) {\n    if (!isSameYearMonth(date, _this2.state.visibleMonth)) {\n      _this2.setState({\n        visibleMonth: date\n      });\n\n      _this2.props.onVisibleMonthChange(date, reason);\n    }\n  };\n\n  this.goPrevDecade = function () {\n    _this2.changeVisibleMonthByOffset(-10, 'years');\n  };\n\n  this.goNextDecade = function () {\n    _this2.changeVisibleMonthByOffset(10, 'years');\n  };\n\n  this.goPrevYear = function () {\n    _this2.changeVisibleMonthByOffset(-1, 'years');\n  };\n\n  this.goNextYear = function () {\n    _this2.changeVisibleMonthByOffset(1, 'years');\n  };\n\n  this.goPrevMonth = function () {\n    _this2.changeVisibleMonthByOffset(-1, 'months');\n  };\n\n  this.goNextMonth = function () {\n    _this2.changeVisibleMonthByOffset(1, 'months');\n  };\n}, _temp);\nCalendar.displayName = 'Calendar';\nexport default polyfill(Calendar);","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/calendar/calendar.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","_class","_temp","_initialiseProps","React","Component","PropTypes","polyfill","moment","classnames","ConfigProvider","nextLocale","func","obj","CardHeader","DatePanelHeader","MonthPanelHeader","YearPanelHeader","DateTable","MonthTable","YearTable","checkMomentObj","formatDateValue","getVisibleMonth","isSameYearMonth","CALENDAR_MODES","CALENDAR_MODE_DATE","CALENDAR_MODE_MONTH","CALENDAR_MODE_YEAR","getLocaleData","isValueChanged","value","oldVlaue","isMoment","valueOf","Calendar","_Component","props","context","_this","call","defaultValue","visibleMonth","defaultVisibleMonth","MODES","modes","today","state","mode","getDerivedStateFromProps","st","indexOf","prototype","changeVisibleMonthByOffset","offset","type","cloneValue","clone","add","changeVisibleMonth","render","_classnames","_tables","_panelHeaders","_props","prefix","rtl","className","shape","showOtherMonth","format","locale","dateCellRender","monthCellRender","yearCellRender","disabledDate","yearRange","disableChangeMode","others","classNames","dir","momentLocale","localeData","headerProps","changeMode","goNextDecade","goNextYear","goNextMonth","goPrevDecade","goPrevYear","goPrevMonth","tableProps","tables","createElement","onSelectDate","onSelectCell","onSelectMonth","onSelectYear","panelHeaders","pickOthers","propTypes","string","bool","oneOf","array","onSelect","onModeChange","onVisibleMonthChange","arrayOf","number","object","defaultProps","noop","date","_this2","nextMode","setState","reason","displayName"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp, _initialiseProps;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport ConfigProvider from '../config-provider';\nimport nextLocale from '../locale/zh-cn';\nimport { func, obj } from '../util';\nimport CardHeader from './head/card-header';\nimport DatePanelHeader from './head/date-panel-header';\nimport MonthPanelHeader from './head/month-panel-header';\nimport YearPanelHeader from './head/year-panel-header';\nimport DateTable from './table/date-table';\nimport MonthTable from './table/month-table';\nimport YearTable from './table/year-table';\nimport { checkMomentObj, formatDateValue, getVisibleMonth, isSameYearMonth, CALENDAR_MODES, CALENDAR_MODE_DATE, CALENDAR_MODE_MONTH, CALENDAR_MODE_YEAR, getLocaleData } from './utils';\n\nvar isValueChanged = function isValueChanged(value, oldVlaue) {\n    if (value && oldVlaue) {\n        if (!moment.isMoment(value)) {\n            value = moment(value);\n        }\n        if (!moment.isMoment(oldVlaue)) {\n            oldVlaue = moment(oldVlaue);\n        }\n        return value.valueOf() !== oldVlaue.valueOf();\n    } else {\n        return value !== oldVlaue;\n    }\n};\n\n/** Calendar */\nvar Calendar = (_temp = _class = function (_Component) {\n    _inherits(Calendar, _Component);\n\n    function Calendar(props, context) {\n        _classCallCheck(this, Calendar);\n\n        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n        _initialiseProps.call(_this);\n\n        var value = formatDateValue(props.value || props.defaultValue);\n        var visibleMonth = getVisibleMonth(props.defaultVisibleMonth, value);\n\n        _this.MODES = props.modes;\n        _this.today = moment();\n        _this.state = {\n            value: value,\n            mode: props.mode || _this.MODES[0],\n            MODES: _this.MODES,\n            visibleMonth: visibleMonth\n        };\n        return _this;\n    }\n\n    Calendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n        var st = {};\n        if ('value' in props) {\n            var value = formatDateValue(props.value);\n            if (value && isValueChanged(props.value, state.value)) {\n                st.visibleMonth = value;\n            }\n            st.value = value;\n        }\n\n        if (props.mode && state.MODES.indexOf(props.mode) > -1) {\n            st.mode = props.mode;\n        }\n\n        return st;\n    };\n\n    /**\n     * 根据日期偏移量设置当前展示的月份\n     * @param {Number} offset 日期偏移的数量\n     * @param {String} type 日期偏移的类型 days, months, years\n     */\n    Calendar.prototype.changeVisibleMonthByOffset = function changeVisibleMonthByOffset(offset, type) {\n        var cloneValue = this.state.visibleMonth.clone();\n        cloneValue.add(offset, type);\n        this.changeVisibleMonth(cloneValue, 'buttonClick');\n    };\n\n    Calendar.prototype.render = function render() {\n        var _classnames, _tables, _panelHeaders;\n\n        var _props = this.props,\n            prefix = _props.prefix,\n            rtl = _props.rtl,\n            className = _props.className,\n            shape = _props.shape,\n            showOtherMonth = _props.showOtherMonth,\n            format = _props.format,\n            locale = _props.locale,\n            dateCellRender = _props.dateCellRender,\n            monthCellRender = _props.monthCellRender,\n            yearCellRender = _props.yearCellRender,\n            disabledDate = _props.disabledDate,\n            yearRange = _props.yearRange,\n            disableChangeMode = _props.disableChangeMode,\n            others = _objectWithoutProperties(_props, ['prefix', 'rtl', 'className', 'shape', 'showOtherMonth', 'format', 'locale', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'disabledDate', 'yearRange', 'disableChangeMode']);\n\n        var state = this.state;\n\n        var classNames = classnames((_classnames = {}, _classnames[prefix + 'calendar'] = true, _classnames[prefix + 'calendar-' + shape] = shape, _classnames), className);\n\n        if (rtl) {\n            others.dir = 'rtl';\n        }\n\n        var visibleMonth = state.visibleMonth;\n\n        // reset moment locale\n        if (locale.momentLocale) {\n            state.value && state.value.locale(locale.momentLocale);\n            visibleMonth.locale(locale.momentLocale);\n        }\n\n        var localeData = getLocaleData(locale.format || {}, visibleMonth.localeData());\n\n        var headerProps = {\n            prefix: prefix,\n            value: state.value,\n            mode: state.mode,\n            disableChangeMode: disableChangeMode,\n            yearRange: yearRange,\n            locale: locale,\n            rtl: rtl,\n            visibleMonth: visibleMonth,\n            momentLocale: localeData,\n            changeMode: this.changeMode,\n            changeVisibleMonth: this.changeVisibleMonth,\n            goNextDecade: this.goNextDecade,\n            goNextYear: this.goNextYear,\n            goNextMonth: this.goNextMonth,\n            goPrevDecade: this.goPrevDecade,\n            goPrevYear: this.goPrevYear,\n            goPrevMonth: this.goPrevMonth\n        };\n\n        var tableProps = {\n            prefix: prefix,\n            visibleMonth: visibleMonth,\n            showOtherMonth: showOtherMonth,\n            value: state.value,\n            mode: state.mode,\n            locale: locale,\n            dateCellRender: dateCellRender,\n            monthCellRender: monthCellRender,\n            yearCellRender: yearCellRender,\n            disabledDate: disabledDate,\n            momentLocale: localeData,\n            today: this.today,\n            goPrevDecade: this.goPrevDecade,\n            goNextDecade: this.goNextDecade\n        };\n\n        var tables = (_tables = {}, _tables[CALENDAR_MODE_DATE] = React.createElement(DateTable, _extends({\n            format: format\n        }, tableProps, {\n            onSelectDate: this.onSelectCell\n        })), _tables[CALENDAR_MODE_MONTH] = React.createElement(MonthTable, _extends({}, tableProps, { onSelectMonth: this.onSelectCell })), _tables[CALENDAR_MODE_YEAR] = React.createElement(YearTable, _extends({}, tableProps, {\n            rtl: rtl,\n            onSelectYear: this.onSelectCell\n        })), _tables);\n\n        var panelHeaders = (_panelHeaders = {}, _panelHeaders[CALENDAR_MODE_DATE] = React.createElement(DatePanelHeader, headerProps), _panelHeaders[CALENDAR_MODE_MONTH] = React.createElement(MonthPanelHeader, headerProps), _panelHeaders[CALENDAR_MODE_YEAR] = React.createElement(YearPanelHeader, headerProps), _panelHeaders);\n\n        return React.createElement(\n            'div',\n            _extends({}, obj.pickOthers(Calendar.propTypes, others), {\n                className: classNames\n            }),\n            shape === 'panel' ? panelHeaders[state.mode] : React.createElement(CardHeader, headerProps),\n            tables[state.mode]\n        );\n    };\n\n    return Calendar;\n}(Component), _class.propTypes = _extends({}, ConfigProvider.propTypes, {\n    prefix: PropTypes.string,\n    rtl: PropTypes.bool,\n    /**\n     * 默认选中的日期（moment 对象）\n     */\n    defaultValue: checkMomentObj,\n    /**\n     * 选中的日期值 (moment 对象)\n     */\n    value: checkMomentObj,\n    /**\n     * 面板模式\n     */\n    mode: PropTypes.oneOf(CALENDAR_MODES), // 生成 API 文档需要手动改回 ['date', 'month', 'year']\n    // 面板可变化的模式列表，仅初始化时接收一次\n    modes: PropTypes.array,\n    // 禁用更改面板模式，采用 dropdown 的方式切换显示日期 (暂不正式对外透出)\n    disableChangeMode: PropTypes.bool,\n    // 日期值的格式（用于日期title显示的格式）\n    format: PropTypes.string,\n    /**\n     * 是否展示非本月的日期\n     */\n    showOtherMonth: PropTypes.bool,\n    /**\n     * 默认展示的月份\n     */\n    defaultVisibleMonth: PropTypes.func,\n    /**\n     * 展现形态\n     */\n    shape: PropTypes.oneOf(['card', 'fullscreen', 'panel']),\n    /**\n     * 选择日期单元格时的回调\n     * @param {Object} value 对应的日期值 (moment 对象)\n     */\n    onSelect: PropTypes.func,\n    /**\n     * 面板模式变化时的回调\n     * @param {String} mode 对应面板模式 date month year\n     */\n    onModeChange: PropTypes.func,\n    /**\n     * 展现的月份变化时的回调\n     * @param {Object} value 显示的月份 (moment 对象)\n     * @param {String} reason 触发月份改变原因\n     */\n    onVisibleMonthChange: PropTypes.func,\n    /**\n     * 自定义样式类\n     */\n    className: PropTypes.string,\n    /**\n     * 自定义日期渲染函数\n     * @param {Object} value 日期值（moment对象）\n     * @returns {ReactNode}\n     */\n    dateCellRender: PropTypes.func,\n    /**\n     * 自定义月份渲染函数\n     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n     * @returns {ReactNode}\n     */\n    monthCellRender: PropTypes.func,\n    yearCellRender: PropTypes.func, // 兼容 0.x yearCellRender\n    /**\n     * 年份范围，[START_YEAR, END_YEAR] (只在shape 为 ‘card’, 'fullscreen' 下生效)\n     */\n    yearRange: PropTypes.arrayOf(PropTypes.number),\n    /**\n     * 不可选择的日期\n     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日\n     * @returns {Boolean}\n     */\n    disabledDate: PropTypes.func,\n    /**\n     * 国际化配置\n     */\n    locale: PropTypes.object\n}), _class.defaultProps = {\n    prefix: 'next-',\n    rtl: false,\n    shape: 'fullscreen',\n    modes: CALENDAR_MODES,\n    disableChangeMode: false,\n    format: 'YYYY-MM-DD',\n    onSelect: func.noop,\n    onVisibleMonthChange: func.noop,\n    onModeChange: func.noop,\n    dateCellRender: function dateCellRender(value) {\n        return value.date();\n    },\n    locale: nextLocale.Calendar,\n    showOtherMonth: true\n}, _initialiseProps = function _initialiseProps() {\n    var _this2 = this;\n\n    this.onSelectCell = function (date, nextMode) {\n        var shape = _this2.props.shape;\n\n\n        _this2.changeVisibleMonth(date, 'cellClick');\n\n        // 当用户所在的面板为初始化面板时，则选择动作为触发 onSelect 回调\n        if (_this2.state.mode === _this2.MODES[0]) {\n            _this2.props.onSelect(date);\n        }\n\n        if (shape === 'panel') {\n            _this2.changeMode(nextMode);\n        }\n    };\n\n    this.changeMode = function (nextMode) {\n        if (nextMode && _this2.MODES.indexOf(nextMode) > -1 && nextMode !== _this2.state.mode) {\n            _this2.setState({ mode: nextMode });\n            _this2.props.onModeChange(nextMode);\n        }\n    };\n\n    this.changeVisibleMonth = function (date, reason) {\n        if (!isSameYearMonth(date, _this2.state.visibleMonth)) {\n            _this2.setState({ visibleMonth: date });\n            _this2.props.onVisibleMonthChange(date, reason);\n        }\n    };\n\n    this.goPrevDecade = function () {\n        _this2.changeVisibleMonthByOffset(-10, 'years');\n    };\n\n    this.goNextDecade = function () {\n        _this2.changeVisibleMonthByOffset(10, 'years');\n    };\n\n    this.goPrevYear = function () {\n        _this2.changeVisibleMonthByOffset(-1, 'years');\n    };\n\n    this.goNextYear = function () {\n        _this2.changeVisibleMonthByOffset(1, 'years');\n    };\n\n    this.goPrevMonth = function () {\n        _this2.changeVisibleMonthByOffset(-1, 'months');\n    };\n\n    this.goNextMonth = function () {\n        _this2.changeVisibleMonthByOffset(1, 'months');\n    };\n}, _temp);\nCalendar.displayName = 'Calendar';\n\n\nexport default polyfill(Calendar);"]},"metadata":{},"sourceType":"module"}