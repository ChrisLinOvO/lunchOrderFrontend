{"ast":null,"code":"import PropTypes from 'prop-types';\n/**\n * Creates an object with the same values as object and keys\n * generated by running each own enumerable string keyed property\n * of object thru iteratee.\n * @param {Object} obj\n * @param {Function} fn\n * @return {Object}\n */\n\nvar mapKeys = function mapKeys(obj, fn) {\n  var result = {};\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var value = obj[key];\n      var newKey = fn(key, value);\n      result[newKey] = value;\n    }\n  }\n\n  return result;\n};\n/**\n * Replace specific key with prefix `next`\n * and lowercase first character of the result.\n * @param {String} key\n * @return {String}\n */\n\n\nvar replaceKey = function replaceKey(key) {\n  return key.replace(/^(next)([A-Z])/, function (match, p1, p2) {\n    return p2.toLowerCase();\n  });\n};\n/**\n * @param {Object} source\n * @return {Object}\n */\n\n\nvar transformContext = function transformContext(source) {\n  return mapKeys(source, replaceKey);\n};\n/**\n * Consumer\n * @param {Object} prop\n * @param {Object} context\n */\n\n\nvar Consumer = function Consumer(_ref, context) {\n  var children = _ref.children;\n  return typeof children === 'function' ? children(transformContext(context)) : null;\n};\n/**\n * PropTypes\n * @type {Object}\n * @static\n */\n\n\nConsumer.propTypes = {\n  // Render context as function\n  // Function(context: object): ReactElement\n  children: PropTypes.func\n};\n/**\n * ContextTypes (legacy context)\n * @type {Object}\n * @static\n */\n\nConsumer.contextTypes = {\n  nextPrefix: PropTypes.string,\n  nextLocale: PropTypes.object,\n  nextPure: PropTypes.bool,\n  newRtl: PropTypes.bool,\n  nextWarning: PropTypes.bool,\n  nextDevice: PropTypes.oneOf(['tablet', 'desktop', 'phone']),\n  nextPopupContainer: PropTypes.any\n};\nexport default Consumer;","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/config-provider/consumer.js"],"names":["PropTypes","mapKeys","obj","fn","result","key","Object","prototype","hasOwnProperty","call","value","newKey","replaceKey","replace","match","p1","p2","toLowerCase","transformContext","source","Consumer","_ref","context","children","propTypes","func","contextTypes","nextPrefix","string","nextLocale","object","nextPure","bool","newRtl","nextWarning","nextDevice","oneOf","nextPopupContainer","any"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,EAAtB,EAA0B;AACpC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,GAAT,IAAgBH,GAAhB,EAAqB;AACjB,QAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,GAArC,EAA0CG,GAA1C,CAAJ,EAAoD;AAChD,UAAIK,KAAK,GAAGR,GAAG,CAACG,GAAD,CAAf;AACA,UAAIM,MAAM,GAAGR,EAAE,CAACE,GAAD,EAAMK,KAAN,CAAf;AACAN,MAAAA,MAAM,CAACO,MAAD,CAAN,GAAiBD,KAAjB;AACH;AACJ;;AAED,SAAON,MAAP;AACH,CAXD;AAaA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,UAAU,GAAG,SAASA,UAAT,CAAoBP,GAApB,EAAyB;AACtC,SAAOA,GAAG,CAACQ,OAAJ,CAAY,gBAAZ,EAA8B,UAAUC,KAAV,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyB;AAC1D,WAAOA,EAAE,CAACC,WAAH,EAAP;AACH,GAFM,CAAP;AAGH,CAJD;AAMA;AACA;AACA;AACA;;;AACA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;AACrD,SAAOlB,OAAO,CAACkB,MAAD,EAASP,UAAT,CAAd;AACH,CAFD;AAIA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,OAAxB,EAAiC;AAC5C,MAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;AACA,SAAO,OAAOA,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACL,gBAAgB,CAACI,OAAD,CAAjB,CAAzC,GAAuE,IAA9E;AACH,CAHD;AAKA;AACA;AACA;AACA;AACA;;;AACAF,QAAQ,CAACI,SAAT,GAAqB;AACjB;AACA;AACAD,EAAAA,QAAQ,EAAEvB,SAAS,CAACyB;AAHH,CAArB;AAMA;AACA;AACA;AACA;AACA;;AACAL,QAAQ,CAACM,YAAT,GAAwB;AACpBC,EAAAA,UAAU,EAAE3B,SAAS,CAAC4B,MADF;AAEpBC,EAAAA,UAAU,EAAE7B,SAAS,CAAC8B,MAFF;AAGpBC,EAAAA,QAAQ,EAAE/B,SAAS,CAACgC,IAHA;AAIpBC,EAAAA,MAAM,EAAEjC,SAAS,CAACgC,IAJE;AAKpBE,EAAAA,WAAW,EAAElC,SAAS,CAACgC,IALH;AAMpBG,EAAAA,UAAU,EAAEnC,SAAS,CAACoC,KAAV,CAAgB,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,CAAhB,CANQ;AAOpBC,EAAAA,kBAAkB,EAAErC,SAAS,CAACsC;AAPV,CAAxB;AAUA,eAAelB,QAAf","sourcesContent":["import PropTypes from 'prop-types';\n\n/**\n * Creates an object with the same values as object and keys\n * generated by running each own enumerable string keyed property\n * of object thru iteratee.\n * @param {Object} obj\n * @param {Function} fn\n * @return {Object}\n */\nvar mapKeys = function mapKeys(obj, fn) {\n    var result = {};\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            var value = obj[key];\n            var newKey = fn(key, value);\n            result[newKey] = value;\n        }\n    }\n\n    return result;\n};\n\n/**\n * Replace specific key with prefix `next`\n * and lowercase first character of the result.\n * @param {String} key\n * @return {String}\n */\nvar replaceKey = function replaceKey(key) {\n    return key.replace(/^(next)([A-Z])/, function (match, p1, p2) {\n        return p2.toLowerCase();\n    });\n};\n\n/**\n * @param {Object} source\n * @return {Object}\n */\nvar transformContext = function transformContext(source) {\n    return mapKeys(source, replaceKey);\n};\n\n/**\n * Consumer\n * @param {Object} prop\n * @param {Object} context\n */\nvar Consumer = function Consumer(_ref, context) {\n    var children = _ref.children;\n    return typeof children === 'function' ? children(transformContext(context)) : null;\n};\n\n/**\n * PropTypes\n * @type {Object}\n * @static\n */\nConsumer.propTypes = {\n    // Render context as function\n    // Function(context: object): ReactElement\n    children: PropTypes.func\n};\n\n/**\n * ContextTypes (legacy context)\n * @type {Object}\n * @static\n */\nConsumer.contextTypes = {\n    nextPrefix: PropTypes.string,\n    nextLocale: PropTypes.object,\n    nextPure: PropTypes.bool,\n    newRtl: PropTypes.bool,\n    nextWarning: PropTypes.bool,\n    nextDevice: PropTypes.oneOf(['tablet', 'desktop', 'phone']),\n    nextPopupContainer: PropTypes.any\n};\n\nexport default Consumer;"]},"metadata":{},"sourceType":"module"}