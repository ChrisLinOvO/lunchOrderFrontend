{"ast":null,"code":"import ConfigProvider from '../config-provider';\nimport { log } from '../util';\nimport Tag from './tag';\nimport Group from './tag-group';\nimport Selectable from './selectable';\nimport Closable from './closeable';\nvar ConfigTag = ConfigProvider.config(Tag, {\n  transfrom:\n  /* istanbul ignore next */\n  function transfrom(props, deprecated) {\n    var shape = props.shape,\n        type = props.type;\n\n    if (shape === 'selectable') {\n      deprecated('shape=selectable', 'Tag.Selectable', 'Tag');\n    }\n\n    if (shape === 'deletable') {\n      deprecated('shape=deletable', 'Tag.Closeable', 'Tag');\n    }\n\n    if (shape === 'link') {\n      deprecated('shape=link', '<Tag><a href=\"x\">x</a></Tag>', 'Tag');\n    }\n\n    if (shape === 'readonly' || shape === 'interactive') {\n      log.warning('Warning: [ shape=' + shape + ' ] is deprecated at [ Tag ]');\n    }\n\n    if (type === 'secondary') {\n      log.warning('Warning: [ type=secondary ] is deprecated at [ Tag ]');\n    }\n\n    ['count', 'marked', 'value', 'onChange'].forEach(function (key) {\n      if (key in props) {\n        log.warning('Warning: [ ' + key + ' ] is deprecated at [ Tag ]');\n      }\n    });\n\n    if ('selected' in props || 'defaultSelected' in props) {\n      log.warning('Warning: [ selected|defaultSelected  ] is deprecated at [ Tag ], use [ checked|defaultChecked ] at [ Tag.Selectable ] instead of it');\n    }\n\n    if ('closed' in props) {\n      log.warning('Warning: [ closed  ] is deprecated at [ Tag ], use [ onClose ] at [ Tag.Closeable ] instead of it');\n    }\n\n    if ('onSelect' in props) {\n      deprecated('onSelect', '<Tag.Selectable onChange/>', 'Tag');\n    }\n\n    if ('afterClose' in props) {\n      log.warning('Warning: [ afterClose  ] is deprecated at [ Tag ], use [ afterClose ] at [ Tag.Closeable ] instead of it');\n    }\n\n    return props;\n  }\n});\nConfigTag.Group = ConfigProvider.config(Group);\nConfigTag.Selectable = ConfigProvider.config(Selectable); // 有的地方叫做 Closeable 有的地方用Closeable, 为了保持兼容 文档类出现 Closeable, Closeable可以继续用\n\nConfigTag.Closable = ConfigProvider.config(Closable);\nConfigTag.Closeable = ConfigTag.Closable;\nexport default ConfigTag;","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/tag/index.js"],"names":["ConfigProvider","log","Tag","Group","Selectable","Closable","ConfigTag","config","transfrom","props","deprecated","shape","type","warning","forEach","key","Closeable"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,oBAA3B;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,IAAIC,SAAS,GAAGN,cAAc,CAACO,MAAf,CAAsBL,GAAtB,EAA2B;AACvCM,EAAAA,SAAS;AAAE;AAA0B,WAASA,SAAT,CAAmBC,KAAnB,EAA0BC,UAA1B,EAAsC;AACvE,QAAIC,KAAK,GAAGF,KAAK,CAACE,KAAlB;AAAA,QACIC,IAAI,GAAGH,KAAK,CAACG,IADjB;;AAGA,QAAID,KAAK,KAAK,YAAd,EAA4B;AACxBD,MAAAA,UAAU,CAAC,kBAAD,EAAqB,gBAArB,EAAuC,KAAvC,CAAV;AACH;;AAED,QAAIC,KAAK,KAAK,WAAd,EAA2B;AACvBD,MAAAA,UAAU,CAAC,iBAAD,EAAoB,eAApB,EAAqC,KAArC,CAAV;AACH;;AAED,QAAIC,KAAK,KAAK,MAAd,EAAsB;AAClBD,MAAAA,UAAU,CAAC,YAAD,EAAe,8BAAf,EAA+C,KAA/C,CAAV;AACH;;AAED,QAAIC,KAAK,KAAK,UAAV,IAAwBA,KAAK,KAAK,aAAtC,EAAqD;AACjDV,MAAAA,GAAG,CAACY,OAAJ,CAAY,sBAAsBF,KAAtB,GAA8B,6BAA1C;AACH;;AAED,QAAIC,IAAI,KAAK,WAAb,EAA0B;AACtBX,MAAAA,GAAG,CAACY,OAAJ,CAAY,sDAAZ;AACH;;AAED,KAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,UAA7B,EAAyCC,OAAzC,CAAiD,UAAUC,GAAV,EAAe;AAC5D,UAAIA,GAAG,IAAIN,KAAX,EAAkB;AACdR,QAAAA,GAAG,CAACY,OAAJ,CAAY,gBAAgBE,GAAhB,GAAsB,6BAAlC;AACH;AACJ,KAJD;;AAMA,QAAI,cAAcN,KAAd,IAAuB,qBAAqBA,KAAhD,EAAuD;AACnDR,MAAAA,GAAG,CAACY,OAAJ,CAAY,qIAAZ;AACH;;AAED,QAAI,YAAYJ,KAAhB,EAAuB;AACnBR,MAAAA,GAAG,CAACY,OAAJ,CAAY,mGAAZ;AACH;;AAED,QAAI,cAAcJ,KAAlB,EAAyB;AACrBC,MAAAA,UAAU,CAAC,UAAD,EAAa,4BAAb,EAA2C,KAA3C,CAAV;AACH;;AAED,QAAI,gBAAgBD,KAApB,EAA2B;AACvBR,MAAAA,GAAG,CAACY,OAAJ,CAAY,0GAAZ;AACH;;AAED,WAAOJ,KAAP;AACH;AAhDsC,CAA3B,CAAhB;AAmDAH,SAAS,CAACH,KAAV,GAAkBH,cAAc,CAACO,MAAf,CAAsBJ,KAAtB,CAAlB;AAEAG,SAAS,CAACF,UAAV,GAAuBJ,cAAc,CAACO,MAAf,CAAsBH,UAAtB,CAAvB,C,CAEA;;AACAE,SAAS,CAACD,QAAV,GAAqBL,cAAc,CAACO,MAAf,CAAsBF,QAAtB,CAArB;AACAC,SAAS,CAACU,SAAV,GAAsBV,SAAS,CAACD,QAAhC;AAEA,eAAeC,SAAf","sourcesContent":["import ConfigProvider from '../config-provider';\nimport { log } from '../util';\nimport Tag from './tag';\nimport Group from './tag-group';\nimport Selectable from './selectable';\nimport Closable from './closeable';\n\nvar ConfigTag = ConfigProvider.config(Tag, {\n    transfrom: /* istanbul ignore next */function transfrom(props, deprecated) {\n        var shape = props.shape,\n            type = props.type;\n\n        if (shape === 'selectable') {\n            deprecated('shape=selectable', 'Tag.Selectable', 'Tag');\n        }\n\n        if (shape === 'deletable') {\n            deprecated('shape=deletable', 'Tag.Closeable', 'Tag');\n        }\n\n        if (shape === 'link') {\n            deprecated('shape=link', '<Tag><a href=\"x\">x</a></Tag>', 'Tag');\n        }\n\n        if (shape === 'readonly' || shape === 'interactive') {\n            log.warning('Warning: [ shape=' + shape + ' ] is deprecated at [ Tag ]');\n        }\n\n        if (type === 'secondary') {\n            log.warning('Warning: [ type=secondary ] is deprecated at [ Tag ]');\n        }\n\n        ['count', 'marked', 'value', 'onChange'].forEach(function (key) {\n            if (key in props) {\n                log.warning('Warning: [ ' + key + ' ] is deprecated at [ Tag ]');\n            }\n        });\n\n        if ('selected' in props || 'defaultSelected' in props) {\n            log.warning('Warning: [ selected|defaultSelected  ] is deprecated at [ Tag ], use [ checked|defaultChecked ] at [ Tag.Selectable ] instead of it');\n        }\n\n        if ('closed' in props) {\n            log.warning('Warning: [ closed  ] is deprecated at [ Tag ], use [ onClose ] at [ Tag.Closeable ] instead of it');\n        }\n\n        if ('onSelect' in props) {\n            deprecated('onSelect', '<Tag.Selectable onChange/>', 'Tag');\n        }\n\n        if ('afterClose' in props) {\n            log.warning('Warning: [ afterClose  ] is deprecated at [ Tag ], use [ afterClose ] at [ Tag.Closeable ] instead of it');\n        }\n\n        return props;\n    }\n});\n\nConfigTag.Group = ConfigProvider.config(Group);\n\nConfigTag.Selectable = ConfigProvider.config(Selectable);\n\n// 有的地方叫做 Closeable 有的地方用Closeable, 为了保持兼容 文档类出现 Closeable, Closeable可以继续用\nConfigTag.Closable = ConfigProvider.config(Closable);\nConfigTag.Closeable = ConfigTag.Closable;\n\nexport default ConfigTag;"]},"metadata":{},"sourceType":"module"}