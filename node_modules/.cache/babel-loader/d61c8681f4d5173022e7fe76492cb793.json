{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Children } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport shallowElementEquals from 'shallow-element-equals';\nimport { dom, log, obj, events, env } from '../util';\nimport LockRow from './lock/row';\nimport LockBody from './lock/body';\nimport LockHeader from './lock/header';\nimport LockWrapper from './fixed/wrapper';\nimport { statics } from './util';\nvar ieVersion = env.ieVersion;\nexport default function lock(BaseComponent) {\n  var _class, _temp;\n  /** Table */\n\n\n  var LockTable = (_temp = _class = function (_React$Component) {\n    _inherits(LockTable, _React$Component);\n\n    function LockTable(props, context) {\n      _classCallCheck(this, LockTable);\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n      _this.state = {};\n\n      _this.getTableInstance = function (type, instance) {\n        type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n        _this['table' + type + 'Inc'] = instance;\n      };\n\n      _this.getNode = function (type, node, lockType) {\n        lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';\n        _this['' + type + lockType + 'Node'] = node;\n\n        if (type === 'header' && !_this.innerHeaderNode && !lockType) {\n          _this.innerHeaderNode = _this.headerNode.querySelector('div');\n        }\n      };\n\n      _this.onRowMouseEnter = function (record, index) {\n        if (_this.isLock()) {\n          var row = _this.getRowNode(index);\n\n          var leftRow = _this.getRowNode(index, 'left');\n\n          var rightRow = _this.getRowNode(index, 'right');\n\n          [row, leftRow, rightRow].forEach(function (row) {\n            row && dom.addClass(row, 'hovered');\n          });\n        }\n      };\n\n      _this.onRowMouseLeave = function (record, index) {\n        if (_this.isLock()) {\n          var row = _this.getRowNode(index);\n\n          var leftRow = _this.getRowNode(index, 'left');\n\n          var rightRow = _this.getRowNode(index, 'right');\n\n          [row, leftRow, rightRow].forEach(function (row) {\n            row && dom.removeClass(row, 'hovered');\n          });\n        }\n      };\n\n      _this.onLockBodyScrollTop = function (event) {\n        // set scroll top for lock columns & main body\n        var target = event.target;\n\n        if (event.currentTarget !== target) {\n          return;\n        }\n\n        var distScrollTop = target.scrollTop;\n\n        if (_this.isLock() && distScrollTop !== _this.lastScrollTop) {\n          var lockRightBody = _this.bodyRightNode,\n              lockLeftBody = _this.bodyLeftNode,\n              bodyNode = _this.bodyNode;\n          var arr = [lockLeftBody, lockRightBody, bodyNode];\n          arr.forEach(function (node) {\n            if (node && node.scrollTop !== distScrollTop) {\n              node.scrollTop = distScrollTop;\n            }\n          });\n          _this.lastScrollTop = distScrollTop;\n        }\n      };\n\n      _this.onLockBodyScrollLeft = function () {\n        // add shadow class for lock columns\n        if (_this.isLock()) {\n          var rtl = _this.props.rtl;\n          var lockRightTable = rtl ? _this.getWrapperNode('left') : _this.getWrapperNode('right'),\n              lockLeftTable = rtl ? _this.getWrapperNode('right') : _this.getWrapperNode('left'),\n              shadowClassName = 'shadow';\n          var x = _this.bodyNode.scrollLeft;\n\n          if (x === 0) {\n            lockLeftTable && dom.removeClass(lockLeftTable, shadowClassName);\n            lockRightTable && dom.addClass(lockRightTable, shadowClassName);\n          } else if (x === _this.bodyNode.scrollWidth - _this.bodyNode.clientWidth) {\n            lockLeftTable && dom.addClass(lockLeftTable, shadowClassName);\n            lockRightTable && dom.removeClass(lockRightTable, shadowClassName);\n          } else {\n            lockLeftTable && dom.addClass(lockLeftTable, shadowClassName);\n            lockRightTable && dom.addClass(lockRightTable, shadowClassName);\n          }\n        }\n      };\n\n      _this.onLockBodyScroll = function (event) {\n        _this.onLockBodyScrollTop(event);\n\n        _this.onLockBodyScrollLeft();\n      };\n\n      _this.adjustSize = function () {\n        if (!_this.adjustIfTableNotNeedLock()) {\n          _this.adjustHeaderSize();\n\n          _this.adjustBodySize();\n\n          _this.adjustRowHeight();\n\n          _this.onLockBodyScrollLeft();\n        }\n      };\n\n      _this.getFlatenChildrenLength = function () {\n        var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        var loop = function loop(arr) {\n          var newArray = [];\n          arr.forEach(function (child) {\n            if (child && child.children) {\n              newArray.push.apply(newArray, loop(child.children));\n            } else {\n              newArray.push(child);\n            }\n          });\n          return newArray;\n        };\n\n        return loop(children).length;\n      };\n\n      _this.saveLockLeftRef = function (ref) {\n        _this.lockLeftEl = ref;\n      };\n\n      _this.saveLockRightRef = function (ref) {\n        _this.lockRightEl = ref;\n      };\n\n      _this.lockLeftChildren = [];\n      _this.lockRightChildren = [];\n      return _this;\n    }\n\n    LockTable.prototype.getChildContext = function getChildContext() {\n      return {\n        getTableInstance: this.getTableInstance,\n        getLockNode: this.getNode,\n        onLockBodyScroll: this.onLockBodyScroll,\n        onRowMouseEnter: this.onRowMouseEnter,\n        onRowMouseLeave: this.onRowMouseLeave\n      };\n    };\n\n    LockTable.prototype.componentDidMount = function componentDidMount() {\n      events.on(window, 'resize', this.adjustSize);\n      this.scroll();\n      this.adjustSize();\n      this.forceUpdate();\n    };\n\n    LockTable.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      if (nextProps.pure) {\n        var isEqual = shallowElementEquals(nextProps, this.props);\n        return !(isEqual && obj.shallowEqual(nextContext, this.context));\n      }\n\n      return true;\n    };\n\n    LockTable.prototype.componentDidUpdate = function componentDidUpdate() {\n      this.adjustSize();\n      this._isLock = false;\n    };\n\n    LockTable.prototype.componentWillUnmount = function componentWillUnmount() {\n      events.off(window, 'resize', this.adjustSize);\n    };\n\n    LockTable.prototype.normalizeChildrenState = function normalizeChildrenState(props) {\n      var columns = this.normalizeChildren(props);\n      var splitChildren = this.splitFromNormalizeChildren(columns);\n      var lockLeftChildren = splitChildren.lockLeftChildren,\n          lockRightChildren = splitChildren.lockRightChildren;\n      return {\n        lockLeftChildren: lockLeftChildren,\n        lockRightChildren: lockRightChildren,\n        children: this.mergeFromSplitLockChildren(splitChildren)\n      };\n    }; // 将React结构化数据提取props转换成数组\n\n\n    LockTable.prototype.normalizeChildren = function normalizeChildren(props) {\n      var children = props.children,\n          columns = props.columns;\n      var isLock = false,\n          ret = void 0;\n\n      var checkLock = function checkLock(col) {\n        if ([true, 'left', 'right'].indexOf(col.lock) > -1) {\n          if (!('width' in col)) {\n            log.warning('Should config width for lock column named [ ' + col.dataIndex + ' ].');\n          }\n\n          isLock = true;\n        }\n      };\n\n      if (columns && !children) {\n        ret = columns;\n\n        var getColumns = function getColumns(cols) {\n          cols.forEach(function () {\n            var col = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            checkLock(col);\n\n            if (col.children) {\n              getColumns(col.children);\n            }\n          });\n        };\n\n        getColumns(columns);\n      } else {\n        var getChildren = function getChildren(children) {\n          var ret = [];\n          Children.forEach(children, function (child) {\n            if (child) {\n              var _props = _extends({}, child.props);\n\n              checkLock(_props);\n              ret.push(_props);\n\n              if (child.props.children) {\n                _props.children = getChildren(child.props.children);\n              }\n            }\n          });\n          return ret;\n        };\n\n        ret = getChildren(children);\n      }\n\n      ret.forEach(function (child) {\n        // 为自定义的列特殊处理\n        if (child.__normalized && isLock) {\n          // users can set lock type for column selection now, so its origin lock type comes first\n          child.lock = child.lock || 'left';\n          delete child.__normalized;\n        }\n      });\n      this._isLock = isLock;\n      return ret;\n    }; //从数组中分离出lock的列和正常的列\n\n\n    LockTable.prototype.splitFromNormalizeChildren = function splitFromNormalizeChildren(children) {\n      var originChildren = deepCopy(children);\n      var lockLeftChildren = deepCopy(children);\n      var lockRightChildren = deepCopy(children);\n\n      var loop = function loop(lockChildren, condition) {\n        var ret = [];\n        lockChildren.forEach(function (child) {\n          if (child.children) {\n            var res = loop(child.children, condition);\n\n            if (!res.length) {\n              ret.push(child);\n            }\n          } else {\n            var order = condition(child);\n\n            if (!order) {\n              ret.push(child);\n            }\n          }\n        });\n        ret.forEach(function (res) {\n          var index = lockChildren.indexOf(res);\n          lockChildren.splice(index, 1);\n        });\n        return lockChildren;\n      };\n\n      loop(lockLeftChildren, function (child) {\n        if (child.lock === true || child.lock === 'left') {\n          return 'left';\n        }\n      });\n      loop(lockRightChildren, function (child) {\n        if (child.lock === 'right') {\n          return 'right';\n        }\n      });\n      loop(originChildren, function (child) {\n        return child.lock !== true && child.lock !== 'left' && child.lock !== 'right';\n      });\n      return {\n        lockLeftChildren: lockLeftChildren,\n        lockRightChildren: lockRightChildren,\n        originChildren: originChildren\n      };\n    }; //将左侧的锁列树和中间的普通树及右侧的锁列树进行合并\n\n\n    LockTable.prototype.mergeFromSplitLockChildren = function mergeFromSplitLockChildren(splitChildren) {\n      var lockLeftChildren = splitChildren.lockLeftChildren,\n          lockRightChildren = splitChildren.lockRightChildren;\n      var originChildren = splitChildren.originChildren;\n      Array.prototype.unshift.apply(originChildren, lockLeftChildren);\n      originChildren = originChildren.concat(lockRightChildren);\n      return originChildren;\n    };\n\n    LockTable.prototype.scroll = function scroll() {\n      var _props2 = this.props,\n          _props2$scrollToCol = _props2.scrollToCol,\n          scrollToCol = _props2$scrollToCol === undefined ? 0 : _props2$scrollToCol,\n          _props2$scrollToRow = _props2.scrollToRow,\n          scrollToRow = _props2$scrollToRow === undefined ? 0 : _props2$scrollToRow;\n\n      if (!scrollToCol && !scrollToRow || !this.bodyNode) {\n        return;\n      }\n\n      var colCellNode = this.getCellNode(0, scrollToCol);\n      var rowCellNode = this.getCellNode(scrollToRow, 0);\n      var bodyNodeOffset = this.bodyNode.getBoundingClientRect() || {};\n\n      if (colCellNode) {\n        var cellNodeoffset = colCellNode.getBoundingClientRect();\n        var scrollLeft = cellNodeoffset.left - bodyNodeOffset.left;\n        this.bodyNode.scrollLeft = scrollLeft;\n      }\n\n      if (rowCellNode) {\n        var _cellNodeoffset = rowCellNode.getBoundingClientRect();\n\n        var scrollTop = _cellNodeoffset.top - bodyNodeOffset.top;\n        this.bodyNode.scrollTop = scrollTop;\n      }\n    }; // Table处理过后真实的lock状态\n\n\n    LockTable.prototype.isLock = function isLock() {\n      return this.lockLeftChildren.length || this.lockRightChildren.length;\n    }; // 用户设置的lock状态\n\n\n    LockTable.prototype.isOriginLock = function isOriginLock() {\n      return this._isLock;\n    };\n\n    LockTable.prototype.removeLockTable = function removeLockTable() {\n      var lockLeftLen = this.lockLeftChildren.length;\n      var lockRightLen = this.lockRightChildren.length;\n\n      if (lockLeftLen) {\n        this._notNeedAdjustLockLeft = true;\n      }\n\n      if (lockRightLen) {\n        this._notNeedAdjustLockRight = true;\n      }\n\n      if (lockRightLen || lockLeftLen) {\n        this.forceUpdate();\n        return true;\n      }\n    };\n\n    LockTable.prototype.adjustIfTableNotNeedLock = function adjustIfTableNotNeedLock() {\n      var _this2 = this;\n\n      if (this.isOriginLock()) {\n        var widthObj = this.tableInc.flatChildren.map(function (item, index) {\n          var cell = _this2.getCellNode(0, index) || {};\n          var headerCell = _this2.getHeaderCellNode(0, index) || {}; // fix https://codesandbox.io/s/fusion-next-template-d9bu8\n          // close #1832\n\n          try {\n            return {\n              cellWidths: parseFloat(getComputedStyle(cell).width) || 0,\n              headerWidths: parseFloat(getComputedStyle(headerCell).width) || 0\n            };\n          } catch (error) {\n            return {\n              cellWidths: cell.clientWidth || 0,\n              headerWidths: headerCell.clientWidth || 0\n            };\n          }\n        }).reduce(function (a, b) {\n          return {\n            cellWidths: a.cellWidths + b.cellWidths,\n            headerWidths: a.headerWidths + b.headerWidths\n          };\n        }, {\n          cellWidths: 0,\n          headerWidths: 0\n        });\n        var node = void 0,\n            width = void 0;\n\n        try {\n          node = findDOMNode(this);\n          width = node.clientWidth;\n        } catch (err) {\n          node = null;\n          width = 0;\n        } // if the table doesn't exist, there is no need to adjust\n\n\n        if (width === 0) {\n          return true;\n        }\n\n        var configWidths = parseInt(widthObj.cellWidths) || parseInt(widthObj.headerWidths);\n\n        if (configWidths <= width && configWidths > 0) {\n          this.removeLockTable();\n        } else if (this._notNeedAdjustLockLeft || this._notNeedAdjustLockRight) {\n          this._notNeedAdjustLockLeft = this._notNeedAdjustLockRight = false;\n          this.forceUpdate();\n        } else {\n          this._notNeedAdjustLockLeft = this._notNeedAdjustLockRight = false;\n          return false;\n        }\n      }\n\n      return false;\n    };\n\n    LockTable.prototype.adjustBodySize = function adjustBodySize() {\n      var _style;\n\n      var _props3 = this.props,\n          rtl = _props3.rtl,\n          hasHeader = _props3.hasHeader;\n      var header = this.headerNode;\n      var paddingName = rtl ? 'paddingLeft' : 'paddingRight';\n      var marginName = rtl ? 'marginLeft' : 'marginRight';\n      var scrollBarSize = +dom.scrollbar().width || 0;\n      var style = (_style = {}, _style[paddingName] = scrollBarSize, _style[marginName] = scrollBarSize, _style);\n      var body = this.bodyNode,\n          hasVerScroll = body && body.scrollHeight > body.clientHeight;\n\n      if (this.isLock()) {\n        var lockLeftBody = this.bodyLeftNode,\n            lockRightBody = this.bodyRightNode,\n            lockRightBodyWrapper = this.getWrapperNode('right'),\n            bodyHeight = body.offsetHeight,\n            width = hasVerScroll ? scrollBarSize : 0,\n            lockBodyHeight = bodyHeight - scrollBarSize;\n\n        if (!hasVerScroll) {\n          style[paddingName] = 0;\n          style[marginName] = 0;\n        }\n\n        if (+scrollBarSize) {\n          style.marginBottom = -scrollBarSize;\n          style.paddingBottom = scrollBarSize;\n        } else {\n          style.marginBottom = -20;\n          style.paddingBottom = 20;\n        }\n\n        var lockStyle = {\n          'max-height': lockBodyHeight\n        };\n\n        if (!hasHeader && !+scrollBarSize) {\n          lockStyle[marginName] = 0;\n        }\n\n        if (+scrollBarSize) {\n          lockStyle[marginName] = -scrollBarSize;\n        }\n\n        lockLeftBody && dom.setStyle(lockLeftBody, lockStyle);\n        lockRightBody && dom.setStyle(lockRightBody, lockStyle);\n        lockRightBodyWrapper && +scrollBarSize && dom.setStyle(lockRightBodyWrapper, rtl ? 'left' : 'right', width + 'px');\n      } else {\n        style.marginBottom = -scrollBarSize;\n        style.paddingBottom = scrollBarSize;\n        style[marginName] = 0;\n\n        if (!hasVerScroll) {\n          style[paddingName] = 0;\n        }\n      }\n\n      header && dom.setStyle(header, style);\n    };\n\n    LockTable.prototype.adjustHeaderSize = function adjustHeaderSize() {\n      var _this3 = this;\n\n      if (this.isLock()) {\n        this.tableInc.groupChildren.forEach(function (child, index) {\n          var lastIndex = _this3.tableInc.groupChildren[index].length - 1;\n\n          var headerRightRow = _this3.getHeaderCellNode(index, lastIndex),\n              headerLeftRow = _this3.getHeaderCellNode(index, 0),\n              headerRightLockRow = _this3.getHeaderCellNode(index, 0, 'right'),\n              headerLeftLockRow = _this3.getHeaderCellNode(index, 0, 'left');\n\n          if (headerRightRow && headerRightLockRow) {\n            var maxRightRowHeight = headerRightRow.offsetHeight;\n            dom.setStyle(headerRightLockRow, 'height', maxRightRowHeight);\n            setTimeout(function () {\n              var affixRef = _this3.tableRightInc.affixRef; // if rendered then update postion of affix\n\n              return affixRef && affixRef.getInstance() && affixRef.getInstance().updatePosition();\n            });\n          }\n\n          if (headerLeftRow && headerLeftLockRow) {\n            var maxLeftRowHeight = headerLeftRow.offsetHeight;\n            dom.setStyle(headerLeftLockRow, 'height', maxLeftRowHeight);\n            setTimeout(function () {\n              var affixRef = _this3.tableLeftInc.affixRef; // if rendered then update postion of affix\n\n              return affixRef && affixRef.getInstance() && affixRef.getInstance().updatePosition();\n            });\n          }\n        });\n      }\n    };\n\n    LockTable.prototype.adjustRowHeight = function adjustRowHeight() {\n      var _this4 = this;\n\n      if (this.isLock()) {\n        this.tableInc.props.dataSource.forEach(function (item, index) {\n          // record may be a string\n          var rowIndex = '' + ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && '__rowIndex' in item ? item.__rowIndex : index) + (item.__expanded ? '_expanded' : ''); // 同步左侧的锁列\n\n          _this4.setRowHeight(rowIndex, 'left'); // 同步右侧的锁列\n\n\n          _this4.setRowHeight(rowIndex, 'right');\n        });\n      }\n    };\n\n    LockTable.prototype.setRowHeight = function setRowHeight(rowIndex, dir) {\n      var lockRow = this.getRowNode(rowIndex, dir),\n          row = this.getRowNode(rowIndex),\n          rowHeight = (ieVersion ? row && row.offsetHeight : row && parseFloat(getComputedStyle(row).height)) || 'auto',\n          lockHeight = (ieVersion ? lockRow && lockRow.offsetHeight : lockRow && parseFloat(getComputedStyle(lockRow).height)) || 'auto';\n\n      if (lockRow && rowHeight !== lockHeight) {\n        dom.setStyle(lockRow, 'height', rowHeight);\n      }\n    };\n\n    LockTable.prototype.getWrapperNode = function getWrapperNode(type) {\n      type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n\n      try {\n        // in case of finding an unmounted component due to cached data\n        // need to clear refs of table when dataSource Changed\n        // use try catch for temporary\n        return findDOMNode(this['lock' + type + 'El']);\n      } catch (error) {\n        return null;\n      }\n    }; // remove this in next major version, keep this for temperary incase of using it\n    // getFirstNormalCellNode(index) {\n    //     let i = 0;\n    //     let row;\n    //     do {\n    //         row = this.getCellNode(index, i);\n    //         i++;\n    //     } while (\n    //         (!row || (row && row.rowSpan && row.rowSpan > 1)) &&\n    //         this.tableInc.flatChildren.length > i\n    //     );\n    //     return row;\n    // }\n\n\n    LockTable.prototype.getRowNode = function getRowNode(index, type) {\n      type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n      var table = this['table' + type + 'Inc'];\n\n      try {\n        // in case of finding an unmounted component due to cached data\n        // need to clear refs of table when dataSource Changed\n        // use try catch for temporary\n        return findDOMNode(table.getRowRef(index));\n      } catch (error) {\n        return null;\n      }\n    };\n\n    LockTable.prototype.getHeaderCellNode = function getHeaderCellNode(index, i, type) {\n      type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n      var table = this['table' + type + 'Inc'];\n\n      try {\n        // in case of finding an unmounted component due to cached data\n        // need to clear refs of table when dataSource Changed\n        // use try catch for temporary\n        return findDOMNode(table.getHeaderCellRef(index, i));\n      } catch (error) {\n        return null;\n      }\n    };\n\n    LockTable.prototype.getCellNode = function getCellNode(index, i, type) {\n      type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n      var table = this['table' + type + 'Inc'];\n\n      try {\n        // in case of finding an unmounted component due to cached data\n        // need to clear refs of table when dataSource Changed\n        // use try catch for temporary\n        return findDOMNode(table.getCellRef(index, i));\n      } catch (error) {\n        return null;\n      }\n    };\n\n    LockTable.prototype.render = function render() {\n      /* eslint-disable no-unused-vars, prefer-const */\n      var _props4 = this.props,\n          children = _props4.children,\n          columns = _props4.columns,\n          prefix = _props4.prefix,\n          components = _props4.components,\n          className = _props4.className,\n          dataSource = _props4.dataSource,\n          tableWidth = _props4.tableWidth,\n          others = _objectWithoutProperties(_props4, ['children', 'columns', 'prefix', 'components', 'className', 'dataSource', 'tableWidth']);\n\n      var _normalizeChildrenSta = this.normalizeChildrenState(this.props),\n          lockLeftChildren = _normalizeChildrenSta.lockLeftChildren,\n          lockRightChildren = _normalizeChildrenSta.lockRightChildren,\n          normalizedChildren = _normalizeChildrenSta.children;\n\n      var leftLen = this.getFlatenChildrenLength(lockLeftChildren);\n      var rightLen = this.getFlatenChildrenLength(lockRightChildren);\n      var originLen = this.getFlatenChildrenLength(normalizedChildren);\n      var lengths = {\n        left: leftLen,\n        right: rightLen,\n        origin: originLen\n      };\n\n      if (this._notNeedAdjustLockLeft) {\n        lockLeftChildren = [];\n      }\n\n      if (this._notNeedAdjustLockRight) {\n        lockRightChildren = [];\n      }\n\n      this.lockLeftChildren = lockLeftChildren;\n      this.lockRightChildren = lockRightChildren;\n\n      if (this.isOriginLock()) {\n        var _classnames;\n\n        components = _extends({}, components);\n        components.Body = components.Body || LockBody;\n        components.Header = components.Header || LockHeader;\n        components.Wrapper = components.Wrapper || LockWrapper;\n        components.Row = components.Row || LockRow;\n        className = classnames((_classnames = {}, _classnames[prefix + 'table-lock'] = true, _classnames[prefix + 'table-wrap-empty'] = !dataSource.length, _classnames[className] = className, _classnames));\n        var content = [React.createElement(BaseComponent, _extends({}, others, {\n          dataSource: dataSource,\n          key: 'lock-left',\n          columns: lockLeftChildren,\n          className: prefix + 'table-lock-left',\n          lengths: lengths,\n          prefix: prefix,\n          lockType: 'left',\n          components: components,\n          ref: this.saveLockLeftRef,\n          loading: false,\n          'aria-hidden': true\n        })), React.createElement(BaseComponent, _extends({}, others, {\n          dataSource: dataSource,\n          key: 'lock-right',\n          columns: lockRightChildren,\n          className: prefix + 'table-lock-right',\n          lengths: lengths,\n          prefix: prefix,\n          lockType: 'right',\n          components: components,\n          ref: this.saveLockRightRef,\n          loading: false,\n          'aria-hidden': true\n        }))];\n        return React.createElement(BaseComponent, _extends({}, others, {\n          tableWidth: tableWidth,\n          dataSource: dataSource,\n          columns: normalizedChildren,\n          prefix: prefix,\n          lengths: lengths,\n          wrapperContent: content,\n          components: components,\n          className: className\n        }));\n      }\n\n      return React.createElement(BaseComponent, this.props);\n    };\n\n    return LockTable;\n  }(React.Component), _class.LockRow = LockRow, _class.LockBody = LockBody, _class.LockHeader = LockHeader, _class.propTypes = _extends({\n    scrollToCol: PropTypes.number,\n\n    /**\n     * 指定滚动到某一行，仅在`useVirtual`的时候生效\n     */\n    scrollToRow: PropTypes.number\n  }, BaseComponent.propTypes), _class.defaultProps = _extends({}, BaseComponent.defaultProps), _class.childContextTypes = {\n    getTableInstance: PropTypes.func,\n    getLockNode: PropTypes.func,\n    onLockBodyScroll: PropTypes.func,\n    onRowMouseEnter: PropTypes.func,\n    onRowMouseLeave: PropTypes.func\n  }, _temp);\n  LockTable.displayName = 'LockTable';\n  statics(LockTable, BaseComponent);\n  return LockTable;\n}\n\nfunction deepCopy(arr) {\n  var copy = function copy(arr) {\n    return arr.map(function (item) {\n      var newItem = _extends({}, item);\n\n      if (item.children) {\n        item.children = copy(item.children);\n      }\n\n      return newItem;\n    });\n  };\n\n  return copy(arr);\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/table/lock.js"],"names":["_objectWithoutProperties","_typeof","_extends","_classCallCheck","_possibleConstructorReturn","_inherits","React","Children","findDOMNode","PropTypes","classnames","shallowElementEquals","dom","log","obj","events","env","LockRow","LockBody","LockHeader","LockWrapper","statics","ieVersion","lock","BaseComponent","_class","_temp","LockTable","_React$Component","props","context","_this","call","state","getTableInstance","type","instance","charAt","toUpperCase","substr","getNode","node","lockType","innerHeaderNode","headerNode","querySelector","onRowMouseEnter","record","index","isLock","row","getRowNode","leftRow","rightRow","forEach","addClass","onRowMouseLeave","removeClass","onLockBodyScrollTop","event","target","currentTarget","distScrollTop","scrollTop","lastScrollTop","lockRightBody","bodyRightNode","lockLeftBody","bodyLeftNode","bodyNode","arr","onLockBodyScrollLeft","rtl","lockRightTable","getWrapperNode","lockLeftTable","shadowClassName","x","scrollLeft","scrollWidth","clientWidth","onLockBodyScroll","adjustSize","adjustIfTableNotNeedLock","adjustHeaderSize","adjustBodySize","adjustRowHeight","getFlatenChildrenLength","children","arguments","length","undefined","loop","newArray","child","push","apply","saveLockLeftRef","ref","lockLeftEl","saveLockRightRef","lockRightEl","lockLeftChildren","lockRightChildren","prototype","getChildContext","getLockNode","componentDidMount","on","window","scroll","forceUpdate","shouldComponentUpdate","nextProps","nextState","nextContext","pure","isEqual","shallowEqual","componentDidUpdate","_isLock","componentWillUnmount","off","normalizeChildrenState","columns","normalizeChildren","splitChildren","splitFromNormalizeChildren","mergeFromSplitLockChildren","ret","checkLock","col","indexOf","warning","dataIndex","getColumns","cols","getChildren","_props","__normalized","originChildren","deepCopy","lockChildren","condition","res","order","splice","Array","unshift","concat","_props2","_props2$scrollToCol","scrollToCol","_props2$scrollToRow","scrollToRow","colCellNode","getCellNode","rowCellNode","bodyNodeOffset","getBoundingClientRect","cellNodeoffset","left","_cellNodeoffset","top","isOriginLock","removeLockTable","lockLeftLen","lockRightLen","_notNeedAdjustLockLeft","_notNeedAdjustLockRight","_this2","widthObj","tableInc","flatChildren","map","item","cell","headerCell","getHeaderCellNode","cellWidths","parseFloat","getComputedStyle","width","headerWidths","error","reduce","a","b","err","configWidths","parseInt","_style","_props3","hasHeader","header","paddingName","marginName","scrollBarSize","scrollbar","style","body","hasVerScroll","scrollHeight","clientHeight","lockRightBodyWrapper","bodyHeight","offsetHeight","lockBodyHeight","marginBottom","paddingBottom","lockStyle","setStyle","_this3","groupChildren","lastIndex","headerRightRow","headerLeftRow","headerRightLockRow","headerLeftLockRow","maxRightRowHeight","setTimeout","affixRef","tableRightInc","getInstance","updatePosition","maxLeftRowHeight","tableLeftInc","_this4","dataSource","rowIndex","__rowIndex","__expanded","setRowHeight","dir","lockRow","rowHeight","height","lockHeight","table","getRowRef","i","getHeaderCellRef","getCellRef","render","_props4","prefix","components","className","tableWidth","others","_normalizeChildrenSta","normalizedChildren","leftLen","rightLen","originLen","lengths","right","origin","_classnames","Body","Header","Wrapper","Row","content","createElement","key","loading","wrapperContent","Component","propTypes","number","defaultProps","childContextTypes","func","displayName","copy","newItem"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Children } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport shallowElementEquals from 'shallow-element-equals';\nimport { dom, log, obj, events, env } from '../util';\nimport LockRow from './lock/row';\nimport LockBody from './lock/body';\nimport LockHeader from './lock/header';\nimport LockWrapper from './fixed/wrapper';\nimport { statics } from './util';\n\nvar ieVersion = env.ieVersion;\n\nexport default function lock(BaseComponent) {\n    var _class, _temp;\n\n    /** Table */\n    var LockTable = (_temp = _class = function (_React$Component) {\n        _inherits(LockTable, _React$Component);\n\n        function LockTable(props, context) {\n            _classCallCheck(this, LockTable);\n\n            var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n            _this.state = {};\n\n            _this.getTableInstance = function (type, instance) {\n                type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n                _this['table' + type + 'Inc'] = instance;\n            };\n\n            _this.getNode = function (type, node, lockType) {\n                lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';\n                _this['' + type + lockType + 'Node'] = node;\n                if (type === 'header' && !_this.innerHeaderNode && !lockType) {\n                    _this.innerHeaderNode = _this.headerNode.querySelector('div');\n                }\n            };\n\n            _this.onRowMouseEnter = function (record, index) {\n                if (_this.isLock()) {\n                    var row = _this.getRowNode(index);\n                    var leftRow = _this.getRowNode(index, 'left');\n                    var rightRow = _this.getRowNode(index, 'right');\n                    [row, leftRow, rightRow].forEach(function (row) {\n                        row && dom.addClass(row, 'hovered');\n                    });\n                }\n            };\n\n            _this.onRowMouseLeave = function (record, index) {\n                if (_this.isLock()) {\n                    var row = _this.getRowNode(index);\n                    var leftRow = _this.getRowNode(index, 'left');\n                    var rightRow = _this.getRowNode(index, 'right');\n                    [row, leftRow, rightRow].forEach(function (row) {\n                        row && dom.removeClass(row, 'hovered');\n                    });\n                }\n            };\n\n            _this.onLockBodyScrollTop = function (event) {\n                // set scroll top for lock columns & main body\n                var target = event.target;\n                if (event.currentTarget !== target) {\n                    return;\n                }\n                var distScrollTop = target.scrollTop;\n\n                if (_this.isLock() && distScrollTop !== _this.lastScrollTop) {\n                    var lockRightBody = _this.bodyRightNode,\n                        lockLeftBody = _this.bodyLeftNode,\n                        bodyNode = _this.bodyNode;\n\n                    var arr = [lockLeftBody, lockRightBody, bodyNode];\n\n                    arr.forEach(function (node) {\n                        if (node && node.scrollTop !== distScrollTop) {\n                            node.scrollTop = distScrollTop;\n                        }\n                    });\n\n                    _this.lastScrollTop = distScrollTop;\n                }\n            };\n\n            _this.onLockBodyScrollLeft = function () {\n                // add shadow class for lock columns\n                if (_this.isLock()) {\n                    var rtl = _this.props.rtl;\n\n                    var lockRightTable = rtl ? _this.getWrapperNode('left') : _this.getWrapperNode('right'),\n                        lockLeftTable = rtl ? _this.getWrapperNode('right') : _this.getWrapperNode('left'),\n                        shadowClassName = 'shadow';\n\n                    var x = _this.bodyNode.scrollLeft;\n\n                    if (x === 0) {\n                        lockLeftTable && dom.removeClass(lockLeftTable, shadowClassName);\n                        lockRightTable && dom.addClass(lockRightTable, shadowClassName);\n                    } else if (x === _this.bodyNode.scrollWidth - _this.bodyNode.clientWidth) {\n                        lockLeftTable && dom.addClass(lockLeftTable, shadowClassName);\n                        lockRightTable && dom.removeClass(lockRightTable, shadowClassName);\n                    } else {\n                        lockLeftTable && dom.addClass(lockLeftTable, shadowClassName);\n                        lockRightTable && dom.addClass(lockRightTable, shadowClassName);\n                    }\n                }\n            };\n\n            _this.onLockBodyScroll = function (event) {\n                _this.onLockBodyScrollTop(event);\n                _this.onLockBodyScrollLeft();\n            };\n\n            _this.adjustSize = function () {\n                if (!_this.adjustIfTableNotNeedLock()) {\n                    _this.adjustHeaderSize();\n                    _this.adjustBodySize();\n                    _this.adjustRowHeight();\n                    _this.onLockBodyScrollLeft();\n                }\n            };\n\n            _this.getFlatenChildrenLength = function () {\n                var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n                var loop = function loop(arr) {\n                    var newArray = [];\n                    arr.forEach(function (child) {\n                        if (child && child.children) {\n                            newArray.push.apply(newArray, loop(child.children));\n                        } else {\n                            newArray.push(child);\n                        }\n                    });\n                    return newArray;\n                };\n\n                return loop(children).length;\n            };\n\n            _this.saveLockLeftRef = function (ref) {\n                _this.lockLeftEl = ref;\n            };\n\n            _this.saveLockRightRef = function (ref) {\n                _this.lockRightEl = ref;\n            };\n\n            _this.lockLeftChildren = [];\n            _this.lockRightChildren = [];\n            return _this;\n        }\n\n        LockTable.prototype.getChildContext = function getChildContext() {\n            return {\n                getTableInstance: this.getTableInstance,\n                getLockNode: this.getNode,\n                onLockBodyScroll: this.onLockBodyScroll,\n                onRowMouseEnter: this.onRowMouseEnter,\n                onRowMouseLeave: this.onRowMouseLeave\n            };\n        };\n\n        LockTable.prototype.componentDidMount = function componentDidMount() {\n            events.on(window, 'resize', this.adjustSize);\n\n            this.scroll();\n            this.adjustSize();\n            this.forceUpdate();\n        };\n\n        LockTable.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {\n            if (nextProps.pure) {\n                var isEqual = shallowElementEquals(nextProps, this.props);\n                return !(isEqual && obj.shallowEqual(nextContext, this.context));\n            }\n\n            return true;\n        };\n\n        LockTable.prototype.componentDidUpdate = function componentDidUpdate() {\n            this.adjustSize();\n            this._isLock = false;\n        };\n\n        LockTable.prototype.componentWillUnmount = function componentWillUnmount() {\n            events.off(window, 'resize', this.adjustSize);\n        };\n\n        LockTable.prototype.normalizeChildrenState = function normalizeChildrenState(props) {\n            var columns = this.normalizeChildren(props);\n            var splitChildren = this.splitFromNormalizeChildren(columns);\n            var lockLeftChildren = splitChildren.lockLeftChildren,\n                lockRightChildren = splitChildren.lockRightChildren;\n\n            return {\n                lockLeftChildren: lockLeftChildren,\n                lockRightChildren: lockRightChildren,\n                children: this.mergeFromSplitLockChildren(splitChildren)\n            };\n        };\n\n        // 将React结构化数据提取props转换成数组\n\n\n        LockTable.prototype.normalizeChildren = function normalizeChildren(props) {\n            var children = props.children,\n                columns = props.columns;\n\n            var isLock = false,\n                ret = void 0;\n            var checkLock = function checkLock(col) {\n                if ([true, 'left', 'right'].indexOf(col.lock) > -1) {\n                    if (!('width' in col)) {\n                        log.warning('Should config width for lock column named [ ' + col.dataIndex + ' ].');\n                    }\n                    isLock = true;\n                }\n            };\n            if (columns && !children) {\n                ret = columns;\n\n                var getColumns = function getColumns(cols) {\n                    cols.forEach(function () {\n                        var col = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n                        checkLock(col);\n\n                        if (col.children) {\n                            getColumns(col.children);\n                        }\n                    });\n                };\n\n                getColumns(columns);\n            } else {\n                var getChildren = function getChildren(children) {\n                    var ret = [];\n                    Children.forEach(children, function (child) {\n                        if (child) {\n                            var _props = _extends({}, child.props);\n                            checkLock(_props);\n                            ret.push(_props);\n                            if (child.props.children) {\n                                _props.children = getChildren(child.props.children);\n                            }\n                        }\n                    });\n                    return ret;\n                };\n\n                ret = getChildren(children);\n            }\n\n            ret.forEach(function (child) {\n                // 为自定义的列特殊处理\n                if (child.__normalized && isLock) {\n                    // users can set lock type for column selection now, so its origin lock type comes first\n                    child.lock = child.lock || 'left';\n                    delete child.__normalized;\n                }\n            });\n            this._isLock = isLock;\n            return ret;\n        };\n\n        //从数组中分离出lock的列和正常的列\n\n\n        LockTable.prototype.splitFromNormalizeChildren = function splitFromNormalizeChildren(children) {\n            var originChildren = deepCopy(children);\n            var lockLeftChildren = deepCopy(children);\n            var lockRightChildren = deepCopy(children);\n            var loop = function loop(lockChildren, condition) {\n                var ret = [];\n                lockChildren.forEach(function (child) {\n                    if (child.children) {\n                        var res = loop(child.children, condition);\n                        if (!res.length) {\n                            ret.push(child);\n                        }\n                    } else {\n                        var order = condition(child);\n                        if (!order) {\n                            ret.push(child);\n                        }\n                    }\n                });\n                ret.forEach(function (res) {\n                    var index = lockChildren.indexOf(res);\n                    lockChildren.splice(index, 1);\n                });\n                return lockChildren;\n            };\n            loop(lockLeftChildren, function (child) {\n                if (child.lock === true || child.lock === 'left') {\n                    return 'left';\n                }\n            });\n            loop(lockRightChildren, function (child) {\n                if (child.lock === 'right') {\n                    return 'right';\n                }\n            });\n            loop(originChildren, function (child) {\n                return child.lock !== true && child.lock !== 'left' && child.lock !== 'right';\n            });\n            return {\n                lockLeftChildren: lockLeftChildren,\n                lockRightChildren: lockRightChildren,\n                originChildren: originChildren\n            };\n        };\n\n        //将左侧的锁列树和中间的普通树及右侧的锁列树进行合并\n\n\n        LockTable.prototype.mergeFromSplitLockChildren = function mergeFromSplitLockChildren(splitChildren) {\n            var lockLeftChildren = splitChildren.lockLeftChildren,\n                lockRightChildren = splitChildren.lockRightChildren;\n            var originChildren = splitChildren.originChildren;\n\n            Array.prototype.unshift.apply(originChildren, lockLeftChildren);\n            originChildren = originChildren.concat(lockRightChildren);\n            return originChildren;\n        };\n\n        LockTable.prototype.scroll = function scroll() {\n            var _props2 = this.props,\n                _props2$scrollToCol = _props2.scrollToCol,\n                scrollToCol = _props2$scrollToCol === undefined ? 0 : _props2$scrollToCol,\n                _props2$scrollToRow = _props2.scrollToRow,\n                scrollToRow = _props2$scrollToRow === undefined ? 0 : _props2$scrollToRow;\n\n            if (!scrollToCol && !scrollToRow || !this.bodyNode) {\n                return;\n            }\n            var colCellNode = this.getCellNode(0, scrollToCol);\n            var rowCellNode = this.getCellNode(scrollToRow, 0);\n            var bodyNodeOffset = this.bodyNode.getBoundingClientRect() || {};\n            if (colCellNode) {\n                var cellNodeoffset = colCellNode.getBoundingClientRect();\n                var scrollLeft = cellNodeoffset.left - bodyNodeOffset.left;\n                this.bodyNode.scrollLeft = scrollLeft;\n            }\n            if (rowCellNode) {\n                var _cellNodeoffset = rowCellNode.getBoundingClientRect();\n                var scrollTop = _cellNodeoffset.top - bodyNodeOffset.top;\n                this.bodyNode.scrollTop = scrollTop;\n            }\n        };\n\n        // Table处理过后真实的lock状态\n        LockTable.prototype.isLock = function isLock() {\n            return this.lockLeftChildren.length || this.lockRightChildren.length;\n        };\n\n        // 用户设置的lock状态\n\n\n        LockTable.prototype.isOriginLock = function isOriginLock() {\n            return this._isLock;\n        };\n\n        LockTable.prototype.removeLockTable = function removeLockTable() {\n            var lockLeftLen = this.lockLeftChildren.length;\n            var lockRightLen = this.lockRightChildren.length;\n\n            if (lockLeftLen) {\n                this._notNeedAdjustLockLeft = true;\n            }\n            if (lockRightLen) {\n                this._notNeedAdjustLockRight = true;\n            }\n            if (lockRightLen || lockLeftLen) {\n                this.forceUpdate();\n                return true;\n            }\n        };\n\n        LockTable.prototype.adjustIfTableNotNeedLock = function adjustIfTableNotNeedLock() {\n            var _this2 = this;\n\n            if (this.isOriginLock()) {\n                var widthObj = this.tableInc.flatChildren.map(function (item, index) {\n                    var cell = _this2.getCellNode(0, index) || {};\n                    var headerCell = _this2.getHeaderCellNode(0, index) || {};\n\n                    // fix https://codesandbox.io/s/fusion-next-template-d9bu8\n                    // close #1832\n                    try {\n                        return {\n                            cellWidths: parseFloat(getComputedStyle(cell).width) || 0,\n                            headerWidths: parseFloat(getComputedStyle(headerCell).width) || 0\n                        };\n                    } catch (error) {\n                        return {\n                            cellWidths: cell.clientWidth || 0,\n                            headerWidths: headerCell.clientWidth || 0\n                        };\n                    }\n                }).reduce(function (a, b) {\n                    return {\n                        cellWidths: a.cellWidths + b.cellWidths,\n                        headerWidths: a.headerWidths + b.headerWidths\n                    };\n                }, {\n                    cellWidths: 0,\n                    headerWidths: 0\n                });\n\n                var node = void 0,\n                    width = void 0;\n\n                try {\n                    node = findDOMNode(this);\n                    width = node.clientWidth;\n                } catch (err) {\n                    node = null;\n                    width = 0;\n                }\n\n                // if the table doesn't exist, there is no need to adjust\n                if (width === 0) {\n                    return true;\n                }\n\n                var configWidths = parseInt(widthObj.cellWidths) || parseInt(widthObj.headerWidths);\n\n                if (configWidths <= width && configWidths > 0) {\n                    this.removeLockTable();\n                } else if (this._notNeedAdjustLockLeft || this._notNeedAdjustLockRight) {\n                    this._notNeedAdjustLockLeft = this._notNeedAdjustLockRight = false;\n                    this.forceUpdate();\n                } else {\n                    this._notNeedAdjustLockLeft = this._notNeedAdjustLockRight = false;\n                    return false;\n                }\n            }\n\n            return false;\n        };\n\n        LockTable.prototype.adjustBodySize = function adjustBodySize() {\n            var _style;\n\n            var _props3 = this.props,\n                rtl = _props3.rtl,\n                hasHeader = _props3.hasHeader;\n\n            var header = this.headerNode;\n            var paddingName = rtl ? 'paddingLeft' : 'paddingRight';\n            var marginName = rtl ? 'marginLeft' : 'marginRight';\n            var scrollBarSize = +dom.scrollbar().width || 0;\n            var style = (_style = {}, _style[paddingName] = scrollBarSize, _style[marginName] = scrollBarSize, _style);\n            var body = this.bodyNode,\n                hasVerScroll = body && body.scrollHeight > body.clientHeight;\n\n            if (this.isLock()) {\n                var lockLeftBody = this.bodyLeftNode,\n                    lockRightBody = this.bodyRightNode,\n                    lockRightBodyWrapper = this.getWrapperNode('right'),\n                    bodyHeight = body.offsetHeight,\n                    width = hasVerScroll ? scrollBarSize : 0,\n                    lockBodyHeight = bodyHeight - scrollBarSize;\n\n                if (!hasVerScroll) {\n                    style[paddingName] = 0;\n                    style[marginName] = 0;\n                }\n                if (+scrollBarSize) {\n                    style.marginBottom = -scrollBarSize;\n                    style.paddingBottom = scrollBarSize;\n                } else {\n                    style.marginBottom = -20;\n                    style.paddingBottom = 20;\n                }\n\n                var lockStyle = {\n                    'max-height': lockBodyHeight\n                };\n                if (!hasHeader && !+scrollBarSize) {\n                    lockStyle[marginName] = 0;\n                }\n                if (+scrollBarSize) {\n                    lockStyle[marginName] = -scrollBarSize;\n                }\n                lockLeftBody && dom.setStyle(lockLeftBody, lockStyle);\n                lockRightBody && dom.setStyle(lockRightBody, lockStyle);\n                lockRightBodyWrapper && +scrollBarSize && dom.setStyle(lockRightBodyWrapper, rtl ? 'left' : 'right', width + 'px');\n            } else {\n                style.marginBottom = -scrollBarSize;\n                style.paddingBottom = scrollBarSize;\n                style[marginName] = 0;\n                if (!hasVerScroll) {\n                    style[paddingName] = 0;\n                }\n            }\n\n            header && dom.setStyle(header, style);\n        };\n\n        LockTable.prototype.adjustHeaderSize = function adjustHeaderSize() {\n            var _this3 = this;\n\n            if (this.isLock()) {\n                this.tableInc.groupChildren.forEach(function (child, index) {\n                    var lastIndex = _this3.tableInc.groupChildren[index].length - 1;\n                    var headerRightRow = _this3.getHeaderCellNode(index, lastIndex),\n                        headerLeftRow = _this3.getHeaderCellNode(index, 0),\n                        headerRightLockRow = _this3.getHeaderCellNode(index, 0, 'right'),\n                        headerLeftLockRow = _this3.getHeaderCellNode(index, 0, 'left');\n\n                    if (headerRightRow && headerRightLockRow) {\n                        var maxRightRowHeight = headerRightRow.offsetHeight;\n\n                        dom.setStyle(headerRightLockRow, 'height', maxRightRowHeight);\n\n                        setTimeout(function () {\n                            var affixRef = _this3.tableRightInc.affixRef;\n                            // if rendered then update postion of affix\n                            return affixRef && affixRef.getInstance() && affixRef.getInstance().updatePosition();\n                        });\n                    }\n\n                    if (headerLeftRow && headerLeftLockRow) {\n                        var maxLeftRowHeight = headerLeftRow.offsetHeight;\n\n                        dom.setStyle(headerLeftLockRow, 'height', maxLeftRowHeight);\n\n                        setTimeout(function () {\n                            var affixRef = _this3.tableLeftInc.affixRef;\n                            // if rendered then update postion of affix\n                            return affixRef && affixRef.getInstance() && affixRef.getInstance().updatePosition();\n                        });\n                    }\n                });\n            }\n        };\n\n        LockTable.prototype.adjustRowHeight = function adjustRowHeight() {\n            var _this4 = this;\n\n            if (this.isLock()) {\n                this.tableInc.props.dataSource.forEach(function (item, index) {\n                    // record may be a string\n                    var rowIndex = '' + ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && '__rowIndex' in item ? item.__rowIndex : index) + (item.__expanded ? '_expanded' : '');\n\n                    // 同步左侧的锁列\n                    _this4.setRowHeight(rowIndex, 'left');\n                    // 同步右侧的锁列\n                    _this4.setRowHeight(rowIndex, 'right');\n                });\n            }\n        };\n\n        LockTable.prototype.setRowHeight = function setRowHeight(rowIndex, dir) {\n            var lockRow = this.getRowNode(rowIndex, dir),\n                row = this.getRowNode(rowIndex),\n                rowHeight = (ieVersion ? row && row.offsetHeight : row && parseFloat(getComputedStyle(row).height)) || 'auto',\n                lockHeight = (ieVersion ? lockRow && lockRow.offsetHeight : lockRow && parseFloat(getComputedStyle(lockRow).height)) || 'auto';\n\n            if (lockRow && rowHeight !== lockHeight) {\n                dom.setStyle(lockRow, 'height', rowHeight);\n            }\n        };\n\n        LockTable.prototype.getWrapperNode = function getWrapperNode(type) {\n            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n            try {\n                // in case of finding an unmounted component due to cached data\n                // need to clear refs of table when dataSource Changed\n                // use try catch for temporary\n                return findDOMNode(this['lock' + type + 'El']);\n            } catch (error) {\n                return null;\n            }\n        };\n\n        // remove this in next major version, keep this for temperary incase of using it\n        // getFirstNormalCellNode(index) {\n        //     let i = 0;\n        //     let row;\n        //     do {\n        //         row = this.getCellNode(index, i);\n        //         i++;\n        //     } while (\n        //         (!row || (row && row.rowSpan && row.rowSpan > 1)) &&\n        //         this.tableInc.flatChildren.length > i\n        //     );\n\n        //     return row;\n        // }\n\n        LockTable.prototype.getRowNode = function getRowNode(index, type) {\n            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n            var table = this['table' + type + 'Inc'];\n\n            try {\n                // in case of finding an unmounted component due to cached data\n                // need to clear refs of table when dataSource Changed\n                // use try catch for temporary\n                return findDOMNode(table.getRowRef(index));\n            } catch (error) {\n                return null;\n            }\n        };\n\n        LockTable.prototype.getHeaderCellNode = function getHeaderCellNode(index, i, type) {\n            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n            var table = this['table' + type + 'Inc'];\n\n            try {\n                // in case of finding an unmounted component due to cached data\n                // need to clear refs of table when dataSource Changed\n                // use try catch for temporary\n                return findDOMNode(table.getHeaderCellRef(index, i));\n            } catch (error) {\n                return null;\n            }\n        };\n\n        LockTable.prototype.getCellNode = function getCellNode(index, i, type) {\n            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n            var table = this['table' + type + 'Inc'];\n\n            try {\n                // in case of finding an unmounted component due to cached data\n                // need to clear refs of table when dataSource Changed\n                // use try catch for temporary\n                return findDOMNode(table.getCellRef(index, i));\n            } catch (error) {\n                return null;\n            }\n        };\n\n        LockTable.prototype.render = function render() {\n            /* eslint-disable no-unused-vars, prefer-const */\n            var _props4 = this.props,\n                children = _props4.children,\n                columns = _props4.columns,\n                prefix = _props4.prefix,\n                components = _props4.components,\n                className = _props4.className,\n                dataSource = _props4.dataSource,\n                tableWidth = _props4.tableWidth,\n                others = _objectWithoutProperties(_props4, ['children', 'columns', 'prefix', 'components', 'className', 'dataSource', 'tableWidth']);\n\n            var _normalizeChildrenSta = this.normalizeChildrenState(this.props),\n                lockLeftChildren = _normalizeChildrenSta.lockLeftChildren,\n                lockRightChildren = _normalizeChildrenSta.lockRightChildren,\n                normalizedChildren = _normalizeChildrenSta.children;\n\n            var leftLen = this.getFlatenChildrenLength(lockLeftChildren);\n            var rightLen = this.getFlatenChildrenLength(lockRightChildren);\n            var originLen = this.getFlatenChildrenLength(normalizedChildren);\n\n            var lengths = {\n                left: leftLen,\n                right: rightLen,\n                origin: originLen\n            };\n            if (this._notNeedAdjustLockLeft) {\n                lockLeftChildren = [];\n            }\n            if (this._notNeedAdjustLockRight) {\n                lockRightChildren = [];\n            }\n            this.lockLeftChildren = lockLeftChildren;\n            this.lockRightChildren = lockRightChildren;\n\n            if (this.isOriginLock()) {\n                var _classnames;\n\n                components = _extends({}, components);\n                components.Body = components.Body || LockBody;\n                components.Header = components.Header || LockHeader;\n                components.Wrapper = components.Wrapper || LockWrapper;\n                components.Row = components.Row || LockRow;\n                className = classnames((_classnames = {}, _classnames[prefix + 'table-lock'] = true, _classnames[prefix + 'table-wrap-empty'] = !dataSource.length, _classnames[className] = className, _classnames));\n                var content = [React.createElement(BaseComponent, _extends({}, others, {\n                    dataSource: dataSource,\n                    key: 'lock-left',\n                    columns: lockLeftChildren,\n                    className: prefix + 'table-lock-left',\n                    lengths: lengths,\n                    prefix: prefix,\n                    lockType: 'left',\n                    components: components,\n                    ref: this.saveLockLeftRef,\n                    loading: false,\n                    'aria-hidden': true\n                })), React.createElement(BaseComponent, _extends({}, others, {\n                    dataSource: dataSource,\n                    key: 'lock-right',\n                    columns: lockRightChildren,\n                    className: prefix + 'table-lock-right',\n                    lengths: lengths,\n                    prefix: prefix,\n                    lockType: 'right',\n                    components: components,\n                    ref: this.saveLockRightRef,\n                    loading: false,\n                    'aria-hidden': true\n                }))];\n                return React.createElement(BaseComponent, _extends({}, others, {\n                    tableWidth: tableWidth,\n                    dataSource: dataSource,\n                    columns: normalizedChildren,\n                    prefix: prefix,\n                    lengths: lengths,\n                    wrapperContent: content,\n                    components: components,\n                    className: className\n                }));\n            }\n            return React.createElement(BaseComponent, this.props);\n        };\n\n        return LockTable;\n    }(React.Component), _class.LockRow = LockRow, _class.LockBody = LockBody, _class.LockHeader = LockHeader, _class.propTypes = _extends({\n        scrollToCol: PropTypes.number,\n        /**\n         * 指定滚动到某一行，仅在`useVirtual`的时候生效\n         */\n        scrollToRow: PropTypes.number\n    }, BaseComponent.propTypes), _class.defaultProps = _extends({}, BaseComponent.defaultProps), _class.childContextTypes = {\n        getTableInstance: PropTypes.func,\n        getLockNode: PropTypes.func,\n        onLockBodyScroll: PropTypes.func,\n        onRowMouseEnter: PropTypes.func,\n        onRowMouseLeave: PropTypes.func\n    }, _temp);\n    LockTable.displayName = 'LockTable';\n\n    statics(LockTable, BaseComponent);\n    return LockTable;\n}\n\nfunction deepCopy(arr) {\n    var copy = function copy(arr) {\n        return arr.map(function (item) {\n            var newItem = _extends({}, item);\n            if (item.children) {\n                item.children = copy(item.children);\n            }\n            return newItem;\n        });\n    };\n    return copy(arr);\n}"]},"metadata":{},"sourceType":"module"}