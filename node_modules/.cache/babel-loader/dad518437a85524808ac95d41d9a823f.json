{"ast":null,"code":"function getCfgFromProps(props, type) {\n  if (type in props) {\n    return props[type];\n  }\n\n  return undefined;\n}\n\nfunction getRule(ruleName, props) {\n  var _ref;\n\n  return _ref = {}, _ref[ruleName] = props[ruleName], _ref.message = getCfgFromProps(props, ruleName + 'Message'), _ref.trigger = getCfgFromProps(props, ruleName + 'Trigger'), _ref;\n}\n\nfunction getValueName(props, displayName) {\n  if (props.valueName) {\n    return props.valueName;\n  }\n\n  if (typeof displayName === 'string') {\n    // Next Components are all wrappered by configProvider\n    var componentName = displayName.replace(/Config\\(/g, '').replace(/\\)/g, '');\n\n    if (['Switch', 'Checkbox', 'Radio'].indexOf(componentName) !== -1) {\n      return 'checked';\n    }\n  }\n\n  return 'value';\n}\n\nexport function getRules(props, labelForErrorMessage) {\n  var result = []; // required\n\n  if (props.required) {\n    result.push(getRule('required', props));\n  }\n\n  var maxLength = Number(props.maxLength);\n  var minLength = Number(props.minLength);\n\n  if (minLength || maxLength) {\n    result.push({\n      minLength: minLength,\n      maxLength: maxLength,\n      // minLengthMessage maxLengthMessage had been deprected, please use minmaxLength. TODO: removed in 2.0\n      message: getCfgFromProps(props, 'minmaxLengthMessage') || getCfgFromProps(props, 'minLengthMessage') || getCfgFromProps(props, 'maxLengthMessage'),\n      trigger: getCfgFromProps(props, 'minmaxLengthTrigger') || getCfgFromProps(props, 'minLengthTrigger') || getCfgFromProps(props, 'maxLengthTrigger')\n    });\n  } // length\n\n\n  if (props.length) {\n    result.push(getRule('length', props));\n  } // pattern\n\n\n  if (props.pattern) {\n    result.push(getRule('pattern', props));\n  } // format\n\n\n  if (['number', 'tel', 'url', 'email'].indexOf(props.format) > -1) {\n    result.push(getRule('format', props));\n  }\n\n  var max = Number(props.max);\n  var min = Number(props.min); // max min\n\n  if (max || min) {\n    result.push({\n      min: min,\n      max: max,\n      // minMessage maxMessage had been deprected, please use minmaxLength. TODO: removed in 2.0\n      message: getCfgFromProps(props, 'minmaxMessage') || getCfgFromProps(props, 'minMessage') || getCfgFromProps(props, 'maxMessage'),\n      trigger: getCfgFromProps(props, 'minmaxTrigger') || getCfgFromProps(props, 'minTrigger') || getCfgFromProps(props, 'maxTrigger')\n    });\n  }\n\n  if (props.validator && typeof props.validator === 'function') {\n    result.push({\n      validator: props.validator,\n      trigger: getCfgFromProps(props, 'validatorTrigger')\n    });\n  }\n\n  if (labelForErrorMessage) {\n    result.forEach(function (r) {\n      r.aliasName = labelForErrorMessage;\n    });\n  }\n\n  return result;\n}\nexport function getFieldInitCfg(props, displayName, labelForErrorMessage) {\n  return {\n    valueName: getValueName(props, displayName),\n    trigger: props.trigger ? props.trigger : 'onChange',\n    autoValidate: props.autoValidate,\n    rules: getRules(props, labelForErrorMessage)\n  };\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/form/enhance.js"],"names":["getCfgFromProps","props","type","undefined","getRule","ruleName","_ref","message","trigger","getValueName","displayName","valueName","componentName","replace","indexOf","getRules","labelForErrorMessage","result","required","push","maxLength","Number","minLength","length","pattern","format","max","min","validator","forEach","r","aliasName","getFieldInitCfg","autoValidate","rules"],"mappings":"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","sourcesContent":["function getCfgFromProps(props, type) {\n    if (type in props) {\n        return props[type];\n    }\n\n    return undefined;\n}\n\nfunction getRule(ruleName, props) {\n    var _ref;\n\n    return _ref = {}, _ref[ruleName] = props[ruleName], _ref.message = getCfgFromProps(props, ruleName + 'Message'), _ref.trigger = getCfgFromProps(props, ruleName + 'Trigger'), _ref;\n}\n\nfunction getValueName(props, displayName) {\n    if (props.valueName) {\n        return props.valueName;\n    }\n\n    if (typeof displayName === 'string') {\n        // Next Components are all wrappered by configProvider\n        var componentName = displayName.replace(/Config\\(/g, '').replace(/\\)/g, '');\n        if (['Switch', 'Checkbox', 'Radio'].indexOf(componentName) !== -1) {\n            return 'checked';\n        }\n    }\n\n    return 'value';\n}\n\nexport function getRules(props, labelForErrorMessage) {\n    var result = [];\n\n    // required\n    if (props.required) {\n        result.push(getRule('required', props));\n    }\n\n    var maxLength = Number(props.maxLength);\n    var minLength = Number(props.minLength);\n    if (minLength || maxLength) {\n        result.push({\n            minLength: minLength,\n            maxLength: maxLength,\n            // minLengthMessage maxLengthMessage had been deprected, please use minmaxLength. TODO: removed in 2.0\n            message: getCfgFromProps(props, 'minmaxLengthMessage') || getCfgFromProps(props, 'minLengthMessage') || getCfgFromProps(props, 'maxLengthMessage'),\n            trigger: getCfgFromProps(props, 'minmaxLengthTrigger') || getCfgFromProps(props, 'minLengthTrigger') || getCfgFromProps(props, 'maxLengthTrigger')\n        });\n    }\n\n    // length\n    if (props.length) {\n        result.push(getRule('length', props));\n    }\n\n    // pattern\n    if (props.pattern) {\n        result.push(getRule('pattern', props));\n    }\n\n    // format\n    if (['number', 'tel', 'url', 'email'].indexOf(props.format) > -1) {\n        result.push(getRule('format', props));\n    }\n\n    var max = Number(props.max);\n    var min = Number(props.min);\n    // max min\n    if (max || min) {\n        result.push({\n            min: min,\n            max: max,\n            // minMessage maxMessage had been deprected, please use minmaxLength. TODO: removed in 2.0\n            message: getCfgFromProps(props, 'minmaxMessage') || getCfgFromProps(props, 'minMessage') || getCfgFromProps(props, 'maxMessage'),\n            trigger: getCfgFromProps(props, 'minmaxTrigger') || getCfgFromProps(props, 'minTrigger') || getCfgFromProps(props, 'maxTrigger')\n        });\n    }\n\n    if (props.validator && typeof props.validator === 'function') {\n        result.push({\n            validator: props.validator,\n            trigger: getCfgFromProps(props, 'validatorTrigger')\n        });\n    }\n\n    if (labelForErrorMessage) {\n        result.forEach(function (r) {\n            r.aliasName = labelForErrorMessage;\n        });\n    }\n\n    return result;\n}\n\nexport function getFieldInitCfg(props, displayName, labelForErrorMessage) {\n    return {\n        valueName: getValueName(props, displayName),\n        trigger: props.trigger ? props.trigger : 'onChange',\n        autoValidate: props.autoValidate,\n        rules: getRules(props, labelForErrorMessage)\n    };\n}"]},"metadata":{},"sourceType":"module"}