{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n\nvar pattern = {\n  email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n  url: new RegExp(\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\", 'i'),\n  number: /\\d*/,\n  tel: /^(1\\d{10})$|(((400)-(\\d{3})-(\\d{4}))|^((\\d{7,8})|(\\d{3,4})-(\\d{7,8})|(\\d{7,8})-(\\d{1,4}))$)$|^([ ]?)$/\n};\nvar types = {\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n\n    return typeof value === 'number' || typeof value === 'string' && !!value.match(pattern.number);\n  },\n  email: function email(value) {\n    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\n  },\n  url: function url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  tel: function tel(value) {\n    return typeof value === 'string' && !!value.match(pattern.tel);\n  }\n};\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction format(rule, value, errors, options) {\n  var custom = ['email', 'number', 'url', 'tel'];\n  var ruleType = rule.format;\n\n  if (custom.indexOf(ruleType) > -1 && !types[ruleType](value)) {\n    errors.push(util.format(options.messages.format[ruleType], rule.aliasName || rule.field, rule.format));\n  }\n}\n\nvar _default = format;\nexports.default = _default;","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/validate/lib/rules/format.js"],"names":["_interopRequireWildcard","require","Object","defineProperty","exports","value","default","util","pattern","email","url","RegExp","number","tel","types","isNaN","match","length","format","rule","errors","options","custom","ruleType","indexOf","push","messages","aliasName","field","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,IAAI,GAAGP,uBAAuB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAlC;;AAEA,IAAIO,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE,6CADK;AAEZC,EAAAA,GAAG,EAAE,IAAIC,MAAJ,CAAW,gZAAX,EAA6Z,GAA7Z,CAFO;AAGZC,EAAAA,MAAM,EAAE,KAHI;AAIZC,EAAAA,GAAG,EAAE;AAJO,CAAd;AAMA,IAAIC,KAAK,GAAG;AACVF,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBP,KAAhB,EAAuB;AAC7B,QAAIU,KAAK,CAACV,KAAD,CAAT,EAAkB;AAChB,aAAO,KAAP;AACD;;AAED,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAAC,CAACA,KAAK,CAACW,KAAN,CAAYR,OAAO,CAACI,MAApB,CAAnE;AACD,GAPS;AAQVH,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeJ,KAAf,EAAsB;AAC3B,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAAC,CAACA,KAAK,CAACW,KAAN,CAAYR,OAAO,CAACC,KAApB,CAA/B,IAA6DJ,KAAK,CAACY,MAAN,GAAe,GAAnF;AACD,GAVS;AAWVP,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaL,KAAb,EAAoB;AACvB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAAC,CAACA,KAAK,CAACW,KAAN,CAAYR,OAAO,CAACE,GAApB,CAAtC;AACD,GAbS;AAcVG,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaR,KAAb,EAAoB;AACvB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAAC,CAACA,KAAK,CAACW,KAAN,CAAYR,OAAO,CAACK,GAApB,CAAtC;AACD;AAhBS,CAAZ;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASK,MAAT,CAAgBC,IAAhB,EAAsBd,KAAtB,EAA6Be,MAA7B,EAAqCC,OAArC,EAA8C;AAC5C,MAAIC,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,EAA2B,KAA3B,CAAb;AACA,MAAIC,QAAQ,GAAGJ,IAAI,CAACD,MAApB;;AAEA,MAAII,MAAM,CAACE,OAAP,CAAeD,QAAf,IAA2B,CAAC,CAA5B,IAAiC,CAACT,KAAK,CAACS,QAAD,CAAL,CAAgBlB,KAAhB,CAAtC,EAA8D;AAC5De,IAAAA,MAAM,CAACK,IAAP,CAAYlB,IAAI,CAACW,MAAL,CAAYG,OAAO,CAACK,QAAR,CAAiBR,MAAjB,CAAwBK,QAAxB,CAAZ,EAA+CJ,IAAI,CAACQ,SAAL,IAAkBR,IAAI,CAACS,KAAtE,EAA6ET,IAAI,CAACD,MAAlF,CAAZ;AACD;AACF;;AAED,IAAIW,QAAQ,GAAGX,MAAf;AACAd,OAAO,CAACE,OAAR,GAAkBuB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n\nvar pattern = {\n  email: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/,\n  url: new RegExp(\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\", 'i'),\n  number: /\\d*/,\n  tel: /^(1\\d{10})$|(((400)-(\\d{3})-(\\d{4}))|^((\\d{7,8})|(\\d{3,4})-(\\d{7,8})|(\\d{7,8})-(\\d{1,4}))$)$|^([ ]?)$/\n};\nvar types = {\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n\n    return typeof value === 'number' || typeof value === 'string' && !!value.match(pattern.number);\n  },\n  email: function email(value) {\n    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\n  },\n  url: function url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  tel: function tel(value) {\n    return typeof value === 'string' && !!value.match(pattern.tel);\n  }\n};\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction format(rule, value, errors, options) {\n  var custom = ['email', 'number', 'url', 'tel'];\n  var ruleType = rule.format;\n\n  if (custom.indexOf(ruleType) > -1 && !types[ruleType](value)) {\n    errors.push(util.format(options.messages.format[ruleType], rule.aliasName || rule.field, rule.format));\n  }\n}\n\nvar _default = format;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}