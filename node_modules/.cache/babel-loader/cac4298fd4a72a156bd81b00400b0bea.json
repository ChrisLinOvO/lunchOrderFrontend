{"ast":null,"code":"import _typeof from 'babel-runtime/helpers/typeof';\n/**\n * Generate a string to be used for HTML id attributes\n *\n * @param {String} prefix - prefix text for the id. Important because without one, eventually there will be 2 elements with the same id on the same page\n * @param {Number} max - range for the random number generator. Defaults to 1,000,000, but can be set higher if necessary.\n * @returns {String}\n */\n\nexport function randomId(prefix) {\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000000;\n  var rand = Math.ceil(Math.random() * max);\n  return prefix ? escapeForId(prefix) + '-' + rand : rand.toString(10);\n}\n/**\n * Replace characters not allowed for HTML id attributes\n *\n * @param {String} text\n * @returns {String}\n */\n\nexport function escapeForId(text) {\n  if (!text) {\n    return '';\n  }\n\n  if ((typeof text === 'undefined' ? 'undefined' : _typeof(text)) === 'object') {\n    text = JSON.stringify(text);\n  } else if (typeof text !== 'string') {\n    text = String(text);\n  }\n\n  return text.replace(/['\"]/gm, '').replace(/[\\s'\"]/gm, '-');\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/util/htmlId.js"],"names":["_typeof","randomId","prefix","max","arguments","length","undefined","rand","Math","ceil","random","escapeForId","toString","text","JSON","stringify","String","replace"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,8BAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAC7B,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,OAA9E;AAEA,MAAIG,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgBP,GAA1B,CAAX;AAEA,SAAOD,MAAM,GAAGS,WAAW,CAACT,MAAD,CAAX,GAAsB,GAAtB,GAA4BK,IAA/B,GAAsCA,IAAI,CAACK,QAAL,CAAc,EAAd,CAAnD;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASD,WAAT,CAAqBE,IAArB,EAA2B;AAC9B,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,EAAP;AACH;;AAED,MAAI,CAAC,OAAOA,IAAP,KAAgB,WAAhB,GAA8B,WAA9B,GAA4Cb,OAAO,CAACa,IAAD,CAApD,MAAgE,QAApE,EAA8E;AAC1EA,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAP;AACH,GAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACjCA,IAAAA,IAAI,GAAGG,MAAM,CAACH,IAAD,CAAb;AACH;;AAED,SAAOA,IAAI,CAACI,OAAL,CAAa,QAAb,EAAuB,EAAvB,EAA2BA,OAA3B,CAAmC,UAAnC,EAA+C,GAA/C,CAAP;AACH","sourcesContent":["import _typeof from 'babel-runtime/helpers/typeof';\n/**\n * Generate a string to be used for HTML id attributes\n *\n * @param {String} prefix - prefix text for the id. Important because without one, eventually there will be 2 elements with the same id on the same page\n * @param {Number} max - range for the random number generator. Defaults to 1,000,000, but can be set higher if necessary.\n * @returns {String}\n */\nexport function randomId(prefix) {\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000000;\n\n    var rand = Math.ceil(Math.random() * max);\n\n    return prefix ? escapeForId(prefix) + '-' + rand : rand.toString(10);\n}\n\n/**\n * Replace characters not allowed for HTML id attributes\n *\n * @param {String} text\n * @returns {String}\n */\nexport function escapeForId(text) {\n    if (!text) {\n        return '';\n    }\n\n    if ((typeof text === 'undefined' ? 'undefined' : _typeof(text)) === 'object') {\n        text = JSON.stringify(text);\n    } else if (typeof text !== 'string') {\n        text = String(text);\n    }\n\n    return text.replace(/['\"]/gm, '').replace(/[\\s'\"]/gm, '-');\n}"]},"metadata":{},"sourceType":"module"}