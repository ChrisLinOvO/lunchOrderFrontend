{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport ConfigProvider from '../config-provider';\nimport Button from './view/button';\nimport ButtonGroup from './view/group';\nButton.Group = ButtonGroup;\nexport default ConfigProvider.config(Button, {\n  transform:\n  /* istanbul ignore next */\n  function transform(props, deprecated) {\n    if ('shape' in props) {\n      deprecated('shape', 'text | warning | ghost', 'Button');\n\n      var _props = props,\n          shape = _props.shape,\n          type = _props.type,\n          others = _objectWithoutProperties(_props, ['shape', 'type']);\n\n      var newType = type;\n\n      if (type === 'light' || type === 'dark' || type === 'secondary' && shape === 'warning') {\n        newType = 'normal';\n      }\n\n      var ghost = void 0;\n\n      if (shape === 'ghost') {\n        ghost = {\n          primary: 'dark',\n          secondary: 'dark',\n          normal: 'light',\n          dark: 'dark',\n          light: 'light'\n        }[type || Button.defaultProps.type];\n      }\n\n      var text = shape === 'text';\n      var warning = shape === 'warning';\n      props = _extends({\n        type: newType,\n        ghost: ghost,\n        text: text,\n        warning: warning\n      }, others);\n    }\n\n    return props;\n  }\n});","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/button/index.js"],"names":["_extends","_objectWithoutProperties","ConfigProvider","Button","ButtonGroup","Group","config","transform","props","deprecated","_props","shape","type","others","newType","ghost","primary","secondary","normal","dark","light","defaultProps","text","warning"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,wBAAP,MAAqC,+CAArC;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEAD,MAAM,CAACE,KAAP,GAAeD,WAAf;AAEA,eAAeF,cAAc,CAACI,MAAf,CAAsBH,MAAtB,EAA8B;AACzCI,EAAAA,SAAS;AAAE;AAA0B,WAASA,SAAT,CAAmBC,KAAnB,EAA0BC,UAA1B,EAAsC;AACvE,QAAI,WAAWD,KAAf,EAAsB;AAClBC,MAAAA,UAAU,CAAC,OAAD,EAAU,wBAAV,EAAoC,QAApC,CAAV;;AAEA,UAAIC,MAAM,GAAGF,KAAb;AAAA,UACIG,KAAK,GAAGD,MAAM,CAACC,KADnB;AAAA,UAEIC,IAAI,GAAGF,MAAM,CAACE,IAFlB;AAAA,UAGIC,MAAM,GAAGZ,wBAAwB,CAACS,MAAD,EAAS,CAAC,OAAD,EAAU,MAAV,CAAT,CAHrC;;AAKA,UAAII,OAAO,GAAGF,IAAd;;AACA,UAAIA,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,MAA7B,IAAuCA,IAAI,KAAK,WAAT,IAAwBD,KAAK,KAAK,SAA7E,EAAwF;AACpFG,QAAAA,OAAO,GAAG,QAAV;AACH;;AAED,UAAIC,KAAK,GAAG,KAAK,CAAjB;;AACA,UAAIJ,KAAK,KAAK,OAAd,EAAuB;AACnBI,QAAAA,KAAK,GAAG;AACJC,UAAAA,OAAO,EAAE,MADL;AAEJC,UAAAA,SAAS,EAAE,MAFP;AAGJC,UAAAA,MAAM,EAAE,OAHJ;AAIJC,UAAAA,IAAI,EAAE,MAJF;AAKJC,UAAAA,KAAK,EAAE;AALH,UAMNR,IAAI,IAAIT,MAAM,CAACkB,YAAP,CAAoBT,IANtB,CAAR;AAOH;;AAED,UAAIU,IAAI,GAAGX,KAAK,KAAK,MAArB;AACA,UAAIY,OAAO,GAAGZ,KAAK,KAAK,SAAxB;AAEAH,MAAAA,KAAK,GAAGR,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEE,OAAR;AAAiBC,QAAAA,KAAK,EAAEA,KAAxB;AAA+BO,QAAAA,IAAI,EAAEA,IAArC;AAA2CC,QAAAA,OAAO,EAAEA;AAApD,OAAD,EAAgEV,MAAhE,CAAhB;AACH;;AAED,WAAOL,KAAP;AACH;AAjCwC,CAA9B,CAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport ConfigProvider from '../config-provider';\nimport Button from './view/button';\nimport ButtonGroup from './view/group';\n\nButton.Group = ButtonGroup;\n\nexport default ConfigProvider.config(Button, {\n    transform: /* istanbul ignore next */function transform(props, deprecated) {\n        if ('shape' in props) {\n            deprecated('shape', 'text | warning | ghost', 'Button');\n\n            var _props = props,\n                shape = _props.shape,\n                type = _props.type,\n                others = _objectWithoutProperties(_props, ['shape', 'type']);\n\n            var newType = type;\n            if (type === 'light' || type === 'dark' || type === 'secondary' && shape === 'warning') {\n                newType = 'normal';\n            }\n\n            var ghost = void 0;\n            if (shape === 'ghost') {\n                ghost = {\n                    primary: 'dark',\n                    secondary: 'dark',\n                    normal: 'light',\n                    dark: 'dark',\n                    light: 'light'\n                }[type || Button.defaultProps.type];\n            }\n\n            var text = shape === 'text';\n            var warning = shape === 'warning';\n\n            props = _extends({ type: newType, ghost: ghost, text: text, warning: warning }, others);\n        }\n\n        return props;\n    }\n});"]},"metadata":{},"sourceType":"module"}