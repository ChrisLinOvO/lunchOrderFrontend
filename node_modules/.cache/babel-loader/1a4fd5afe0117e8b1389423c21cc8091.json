{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project/lunch-order-backstage/src/pages/Lunch/Lunch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport OrderTable from '../../components/OrderTable';\nimport Menu from '../../components/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lunch = props => {\n  _s();\n\n  const tarProps = {\n    //訂單\n    dbName: \"orders\",\n    keys: {\n      name: {\n        type: \"input\",\n        text: \"姓名\"\n      },\n      text: {\n        type: \"input\",\n        text: \"文字\"\n      },\n      money: {\n        type: \"input\",\n        text: \"金額\"\n      }\n    }\n  };\n  const menuProps = {\n    //菜單\n    dbName: \"uploads\",\n    keys: {\n      name: {\n        type: \"uploads\",\n        text: \"上傳圖片\"\n      }\n    }\n  };\n  const [myListData, setMyListData] = useState([]);\n  const [myListDataAll, setMyListDataAll] = useState([]);\n  useEffect(() => {\n    const sortedArr = [...myListDataAll].map(e => {\n      let hasIncludes = false;\n      Object.keys(e).forEach(ee => {\n        let val2 = e[ee];\n        if (val2.toString().includes(props.filterStr)) hasIncludes = true;\n      });\n      if (hasIncludes) return e;\n      return false;\n    }).filter(e => e !== false);\n    setMyListData([...sortedArr]);\n  }, [props.filterStr]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrderTable, {\n      tarProps: tarProps,\n      listData: myListData,\n      listDataProps: data => setMyListData([...data]),\n      listDataAllProps: data => setMyListDataAll([...data])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      menuProps: menuProps,\n      listData: myListData,\n      listDataProps: data => setMyListData([...data]),\n      listDataAllProps: data => setMyListDataAll([...data])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Lunch, \"4yAQ3cTUE7z8u4x2hyTIxrUJ/zM=\");\n\n_c = Lunch;\nexport default Lunch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lunch\");","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/src/pages/Lunch/Lunch.jsx"],"names":["React","useState","useEffect","OrderTable","Menu","Lunch","props","tarProps","dbName","keys","name","type","text","money","menuProps","myListData","setMyListData","myListDataAll","setMyListDataAll","sortedArr","map","e","hasIncludes","Object","forEach","ee","val2","toString","includes","filterStr","filter","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;;AAEA,MAAOC,KAAK,GAAGC,KAAD,IAAU;AAAA;;AACpB,QAAMC,QAAQ,GAAG;AAAE;AACfC,IAAAA,MAAM,EAAE,QADK;AAEbC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,OADJ;AAEFC,QAAAA,IAAI,EAAE;AAFJ,OADJ;AAKFA,MAAAA,IAAI,EAAE;AACFD,QAAAA,IAAI,EAAE,OADJ;AAEFC,QAAAA,IAAI,EAAE;AAFJ,OALJ;AASFC,MAAAA,KAAK,EAAE;AACHF,QAAAA,IAAI,EAAE,OADH;AAEHC,QAAAA,IAAI,EAAE;AAFH;AATL;AAFO,GAAjB;AAoBA,QAAME,SAAS,GAAG;AAAE;AAChBN,IAAAA,MAAM,EAAE,SADM;AAEdC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,SADJ;AAEFC,QAAAA,IAAI,EAAE;AAFJ;AADJ;AAFQ,GAAlB;AAaA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AAIAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMiB,SAAS,GAAG,CAAC,GAAGF,aAAJ,EAAmBG,GAAnB,CAAwBC,CAAD,IAAO;AAC5C,UAAIC,WAAW,GAAG,KAAlB;AACAC,MAAAA,MAAM,CAACd,IAAP,CAAYY,CAAZ,EAAeG,OAAf,CAAwBC,EAAD,IAAQ;AAC3B,YAAIC,IAAI,GAAGL,CAAC,CAACI,EAAD,CAAZ;AACA,YAAIC,IAAI,CAACC,QAAL,GAAgBC,QAAhB,CAAyBtB,KAAK,CAACuB,SAA/B,CAAJ,EAA+CP,WAAW,GAAG,IAAd;AAClD,OAHD;AAIA,UAAIA,WAAJ,EAAiB,OAAOD,CAAP;AACjB,aAAO,KAAP;AACH,KARiB,EAQfS,MARe,CAQPT,CAAD,IAAOA,CAAC,KAAK,KARL,CAAlB;AASAL,IAAAA,aAAa,CAAC,CAAC,GAAGG,SAAJ,CAAD,CAAb;AACH,GAZQ,EAYN,CAACb,KAAK,CAACuB,SAAP,CAZM,CAAT;AAaA,sBACI;AAAA,4BAEQ,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEtB,QAAtB;AAAgC,MAAA,QAAQ,EAAEQ,UAA1C;AAAsD,MAAA,aAAa,EAAEgB,IAAI,IAAIf,aAAa,CAAC,CAAC,GAAGe,IAAJ,CAAD,CAA1F;AAAuG,MAAA,gBAAgB,EAAEA,IAAI,IAAIb,gBAAgB,CAAC,CAAC,GAAGa,IAAJ,CAAD;AAAjJ;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEjB,SAAjB;AAA4B,MAAA,QAAQ,EAAEC,UAAtC;AAAkD,MAAA,aAAa,EAAEgB,IAAI,IAAIf,aAAa,CAAC,CAAC,GAAGe,IAAJ,CAAD,CAAtF;AAAmG,MAAA,gBAAgB,EAAEA,IAAI,IAAIb,gBAAgB,CAAC,CAAC,GAAGa,IAAJ,CAAD;AAA7I;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA,kBADJ;AAOH,CA3DD;;GAAO1B,K;;KAAAA,K;AA6DP,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport OrderTable from '../../components/OrderTable';\nimport Menu from '../../components/Menu';\n\nconst  Lunch =(props)=> {\n    const tarProps = { //訂單\n        dbName: \"orders\",\n        keys: {\n            name: {\n                type: \"input\",\n                text: \"姓名\"\n            },\n            text: {\n                type: \"input\",\n                text: \"文字\"\n            },\n            money: {\n                type: \"input\",\n                text: \"金額\"\n            },\n          \n    \n        }\n    }\n\n    const menuProps = { //菜單\n        dbName: \"uploads\",\n        keys: {\n            name: {\n                type: \"uploads\",\n                text: \"上傳圖片\"\n            },\n          \n          \n    \n        }\n    }\n\n    const [myListData, setMyListData] = useState([]);\n    const [myListDataAll, setMyListDataAll] = useState([]);\n\n  \n\n    useEffect(() => {\n\n        const sortedArr = [...myListDataAll].map((e) => {\n            let hasIncludes = false;\n            Object.keys(e).forEach((ee) => {\n                let val2 = e[ee];\n                if (val2.toString().includes(props.filterStr)) hasIncludes = true;\n            })\n            if (hasIncludes) return e;\n            return false;\n        }).filter((e) => e !== false);\n        setMyListData([...sortedArr]);\n    }, [props.filterStr]);\n    return (\n        <>\n                 \n                <OrderTable tarProps={tarProps} listData={myListData} listDataProps={data => setMyListData([...data])} listDataAllProps={data => setMyListDataAll([...data])} />\n                <Menu menuProps={menuProps} listData={myListData} listDataProps={data => setMyListData([...data])} listDataAllProps={data => setMyListDataAll([...data])} />\n        </>\n    );\n}\n\nexport default Lunch;\n"]},"metadata":{},"sourceType":"module"}