{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { func } from '../util';\nvar makeChain = func.makeChain; // UIState 为一些特殊元素的状态响应提供了标准的方式，\n// 尤其适合CSS无法完全定制的控件，比如checkbox，radio等。\n// 若组件 disable 则自行判断是否需要绑定状态管理。\n// 注意：disable 不会触发事件，请使用resetUIState还原状态\n\n/* eslint-disable react/prop-types */\n\nvar UIState = function (_Component) {\n  _inherits(UIState, _Component);\n\n  function UIState(props) {\n    _classCallCheck(this, UIState);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {};\n    ['_onUIFocus', '_onUIBlur'].forEach(function (item) {\n      _this[item] = _this[item].bind(_this);\n    });\n    return _this;\n  } // base 事件绑定的元素\n\n\n  UIState.prototype.getStateElement = function getStateElement(base) {\n    var _props = this.props,\n        onFocus = _props.onFocus,\n        onBlur = _props.onBlur;\n    return React.cloneElement(base, {\n      onFocus: makeChain(this._onUIFocus, onFocus),\n      onBlur: makeChain(this._onUIBlur, onBlur)\n    });\n  }; // 获取状态classname\n\n\n  UIState.prototype.getStateClassName = function getStateClassName() {\n    var focused = this.state.focused;\n    return classnames({\n      focused: focused\n    });\n  }; // 复原状态\n\n\n  UIState.prototype.resetUIState = function resetUIState() {\n    this.setState({\n      focused: false\n    });\n  };\n\n  UIState.prototype._onUIFocus = function _onUIFocus() {\n    this.setState({\n      focused: true\n    });\n  };\n\n  UIState.prototype._onUIBlur = function _onUIBlur() {\n    this.setState({\n      focused: false\n    });\n  };\n\n  return UIState;\n}(Component);\n\nUIState.displayName = 'UIState';\nexport default UIState;","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/mixin-ui-state/index.js"],"names":["_classCallCheck","_possibleConstructorReturn","_inherits","React","Component","classnames","func","makeChain","UIState","_Component","props","_this","call","state","forEach","item","bind","prototype","getStateElement","base","_props","onFocus","onBlur","cloneElement","_onUIFocus","_onUIBlur","getStateClassName","focused","resetUIState","setState","displayName"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,sCAA5B;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB,C,CACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIC,OAAO,GAAG,UAAUC,UAAV,EAAsB;AAChCP,EAAAA,SAAS,CAACM,OAAD,EAAUC,UAAV,CAAT;;AAEA,WAASD,OAAT,CAAiBE,KAAjB,EAAwB;AACpBV,IAAAA,eAAe,CAAC,IAAD,EAAOQ,OAAP,CAAf;;AAEA,QAAIG,KAAK,GAAGV,0BAA0B,CAAC,IAAD,EAAOQ,UAAU,CAACG,IAAX,CAAgB,IAAhB,EAAsBF,KAAtB,CAAP,CAAtC;;AAEAC,IAAAA,KAAK,CAACE,KAAN,GAAc,EAAd;AACA,KAAC,YAAD,EAAe,WAAf,EAA4BC,OAA5B,CAAoC,UAAUC,IAAV,EAAgB;AAChDJ,MAAAA,KAAK,CAACI,IAAD,CAAL,GAAcJ,KAAK,CAACI,IAAD,CAAL,CAAYC,IAAZ,CAAiBL,KAAjB,CAAd;AACH,KAFD;AAGA,WAAOA,KAAP;AACH,GAb+B,CAchC;;;AAGAH,EAAAA,OAAO,CAACS,SAAR,CAAkBC,eAAlB,GAAoC,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC/D,QAAIC,MAAM,GAAG,KAAKV,KAAlB;AAAA,QACIW,OAAO,GAAGD,MAAM,CAACC,OADrB;AAAA,QAEIC,MAAM,GAAGF,MAAM,CAACE,MAFpB;AAIA,WAAOnB,KAAK,CAACoB,YAAN,CAAmBJ,IAAnB,EAAyB;AAC5BE,MAAAA,OAAO,EAAEd,SAAS,CAAC,KAAKiB,UAAN,EAAkBH,OAAlB,CADU;AAE5BC,MAAAA,MAAM,EAAEf,SAAS,CAAC,KAAKkB,SAAN,EAAiBH,MAAjB;AAFW,KAAzB,CAAP;AAIH,GATD,CAjBgC,CA2BhC;;;AAGAd,EAAAA,OAAO,CAACS,SAAR,CAAkBS,iBAAlB,GAAsC,SAASA,iBAAT,GAA6B;AAC/D,QAAIC,OAAO,GAAG,KAAKd,KAAL,CAAWc,OAAzB;AAEA,WAAOtB,UAAU,CAAC;AACdsB,MAAAA,OAAO,EAAEA;AADK,KAAD,CAAjB;AAGH,GAND,CA9BgC,CAqChC;;;AAGAnB,EAAAA,OAAO,CAACS,SAAR,CAAkBW,YAAlB,GAAiC,SAASA,YAAT,GAAwB;AACrD,SAAKC,QAAL,CAAc;AACVF,MAAAA,OAAO,EAAE;AADC,KAAd;AAGH,GAJD;;AAMAnB,EAAAA,OAAO,CAACS,SAAR,CAAkBO,UAAlB,GAA+B,SAASA,UAAT,GAAsB;AACjD,SAAKK,QAAL,CAAc;AACVF,MAAAA,OAAO,EAAE;AADC,KAAd;AAGH,GAJD;;AAMAnB,EAAAA,OAAO,CAACS,SAAR,CAAkBQ,SAAlB,GAA8B,SAASA,SAAT,GAAqB;AAC/C,SAAKI,QAAL,CAAc;AACVF,MAAAA,OAAO,EAAE;AADC,KAAd;AAGH,GAJD;;AAMA,SAAOnB,OAAP;AACH,CA3Da,CA2DZJ,SA3DY,CAAd;;AA6DAI,OAAO,CAACsB,WAAR,GAAsB,SAAtB;AAGA,eAAetB,OAAf","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { func } from '../util';\n\nvar makeChain = func.makeChain;\n// UIState 为一些特殊元素的状态响应提供了标准的方式，\n// 尤其适合CSS无法完全定制的控件，比如checkbox，radio等。\n// 若组件 disable 则自行判断是否需要绑定状态管理。\n// 注意：disable 不会触发事件，请使用resetUIState还原状态\n/* eslint-disable react/prop-types */\n\nvar UIState = function (_Component) {\n    _inherits(UIState, _Component);\n\n    function UIState(props) {\n        _classCallCheck(this, UIState);\n\n        var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n        _this.state = {};\n        ['_onUIFocus', '_onUIBlur'].forEach(function (item) {\n            _this[item] = _this[item].bind(_this);\n        });\n        return _this;\n    }\n    // base 事件绑定的元素\n\n\n    UIState.prototype.getStateElement = function getStateElement(base) {\n        var _props = this.props,\n            onFocus = _props.onFocus,\n            onBlur = _props.onBlur;\n\n        return React.cloneElement(base, {\n            onFocus: makeChain(this._onUIFocus, onFocus),\n            onBlur: makeChain(this._onUIBlur, onBlur)\n        });\n    };\n    // 获取状态classname\n\n\n    UIState.prototype.getStateClassName = function getStateClassName() {\n        var focused = this.state.focused;\n\n        return classnames({\n            focused: focused\n        });\n    };\n    // 复原状态\n\n\n    UIState.prototype.resetUIState = function resetUIState() {\n        this.setState({\n            focused: false\n        });\n    };\n\n    UIState.prototype._onUIFocus = function _onUIFocus() {\n        this.setState({\n            focused: true\n        });\n    };\n\n    UIState.prototype._onUIBlur = function _onUIBlur() {\n        this.setState({\n            focused: false\n        });\n    };\n\n    return UIState;\n}(Component);\n\nUIState.displayName = 'UIState';\n\n\nexport default UIState;"]},"metadata":{},"sourceType":"module"}