{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport React from 'react';\nimport cx from 'classnames';\nimport ConfigProvider from '../config-provider';\nimport Icon from './index';\nvar customCache = new Set();\n/** Icon.createFromIconfontCN\n *  @description 通过自定义 iconfont源来使用使用svg格式的图片\n *  @order 1\n */\n\nexport default function createFromIconfontCN() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var scriptUrl = options.scriptUrl,\n      _options$extraCommonP = options.extraCommonProps,\n      extraCommonProps = _options$extraCommonP === undefined ? {} : _options$extraCommonP;\n  var hasExist = customCache.has(scriptUrl);\n\n  if (document.querySelector('script[data-namespace=\"' + scriptUrl + '\"]')) {\n    hasExist = true;\n  }\n  /**\n   * DOM API required.\n   * Make sure in browser environment.\n   * The Custom Icon will create a <script/>\n   * that loads SVG symbols and insert the SVG Element into the document body.\n   */\n\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !hasExist) {\n    var script = document.createElement('script');\n    script.setAttribute('src', scriptUrl);\n    script.setAttribute('data-namespace', scriptUrl);\n    customCache.add(scriptUrl);\n    document.body.appendChild(script);\n  }\n\n  var Iconfont = function Iconfont(props) {\n    var _cx;\n\n    var type = props.type,\n        size = props.size,\n        children = props.children,\n        className = props.className,\n        _props$prefix = props.prefix,\n        prefix = _props$prefix === undefined ? 'next-' : _props$prefix,\n        others = _objectWithoutProperties(props, ['type', 'size', 'children', 'className', 'prefix']); // component > children > type\n\n\n    var content = null;\n\n    if (props.type) {\n      content = React.createElement('use', {\n        xlinkHref: '#' + type\n      });\n    }\n\n    if (children) {\n      content = children;\n    }\n\n    var classes = cx((_cx = {}, _cx[prefix + 'icon-remote'] = true, _cx), className);\n    return React.createElement(Icon, {\n      size: size\n    }, React.createElement('svg', _extends({\n      className: classes,\n      focusable: false\n    }, others, extraCommonProps), content));\n  };\n\n  Iconfont.displayName = 'Iconfont';\n  return ConfigProvider.config(Iconfont);\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/icon/icon-font.js"],"names":["_extends","_objectWithoutProperties","React","cx","ConfigProvider","Icon","customCache","Set","createFromIconfontCN","options","arguments","length","undefined","scriptUrl","_options$extraCommonP","extraCommonProps","hasExist","has","document","querySelector","window","createElement","script","setAttribute","add","body","appendChild","Iconfont","props","_cx","type","size","children","className","_props$prefix","prefix","others","content","xlinkHref","classes","focusable","displayName","config"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport React from 'react';\nimport cx from 'classnames';\nimport ConfigProvider from '../config-provider';\nimport Icon from './index';\n\nvar customCache = new Set();\n\n/** Icon.createFromIconfontCN\n *  @description 通过自定义 iconfont源来使用使用svg格式的图片\n *  @order 1\n */\nexport default function createFromIconfontCN() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var scriptUrl = options.scriptUrl,\n        _options$extraCommonP = options.extraCommonProps,\n        extraCommonProps = _options$extraCommonP === undefined ? {} : _options$extraCommonP;\n\n    var hasExist = customCache.has(scriptUrl);\n\n    if (document.querySelector('script[data-namespace=\"' + scriptUrl + '\"]')) {\n        hasExist = true;\n    }\n\n    /**\n     * DOM API required.\n     * Make sure in browser environment.\n     * The Custom Icon will create a <script/>\n     * that loads SVG symbols and insert the SVG Element into the document body.\n     */\n    if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !hasExist) {\n        var script = document.createElement('script');\n        script.setAttribute('src', scriptUrl);\n        script.setAttribute('data-namespace', scriptUrl);\n        customCache.add(scriptUrl);\n        document.body.appendChild(script);\n    }\n\n    var Iconfont = function Iconfont(props) {\n        var _cx;\n\n        var type = props.type,\n            size = props.size,\n            children = props.children,\n            className = props.className,\n            _props$prefix = props.prefix,\n            prefix = _props$prefix === undefined ? 'next-' : _props$prefix,\n            others = _objectWithoutProperties(props, ['type', 'size', 'children', 'className', 'prefix']);\n\n        // component > children > type\n\n\n        var content = null;\n        if (props.type) {\n            content = React.createElement('use', { xlinkHref: '#' + type });\n        }\n        if (children) {\n            content = children;\n        }\n\n        var classes = cx((_cx = {}, _cx[prefix + 'icon-remote'] = true, _cx), className);\n\n        return React.createElement(\n            Icon,\n            { size: size },\n            React.createElement(\n                'svg',\n                _extends({\n                    className: classes,\n                    focusable: false\n                }, others, extraCommonProps),\n                content\n            )\n        );\n    };\n\n    Iconfont.displayName = 'Iconfont';\n\n    return ConfigProvider.config(Iconfont);\n}"]},"metadata":{},"sourceType":"module"}