{"ast":null,"code":"import _Pagination from \"@alifd/next/es/pagination\";\nimport _Table from \"@alifd/next/es/table\";\nimport _Button from \"@alifd/next/es/button\";\nimport _Dialog from \"@alifd/next/es/dialog\";\nimport _DatePicker from \"@alifd/next/es/date-picker\";\nimport _Input from \"@alifd/next/es/input\";\nimport _Message from \"@alifd/next/es/message\";\nimport _Form from \"@alifd/next/es/form\";\nimport _Select from \"@alifd/next/es/select\";\n\nvar _jsxFileName = \"/Users/Chris/Project/lunch-order-backstage/src/components/Menu/Menu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\nimport Swal from 'sweetalert2';\nimport client from '../../lib/feathers';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Option = _Select.Option;\nconst {\n  Item\n} = _Form;\n\nconst Menu = props => {\n  _s();\n\n  const {\n    dbName,\n    keys,\n    text\n  } = props.menuProps;\n  const dbService = client.service(`${dbName}`);\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\"); //uploads files\n\n  const [parsed, setParsed] = useState([]);\n  const [parsed64, setParsed64] = useState([]); //Base64\n\n  const [file, setFile] = useState(\"\");\n  const uploadFile = useRef(null);\n  const uploadExcelFile = useRef(null); // sort\n\n  const [curdataIndex, setcurDataIndex] = useState('createTime');\n  const [curorder, setcurOrder] = useState('asc'); // change page\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.menuData.slice(indexOfFirstPost, indexOfLastPost); // dbService\n\n  async function funFind(para) {\n    const result = await dbService.find({\n      query: para\n    }); // console.log(result);\n\n    return result && result.data ? result.data : [];\n  }\n\n  async function funCreate(obj) {\n    return await dbService.create(obj);\n  }\n\n  async function funUpdate(id, obj) {\n    return await dbService.patch(id, obj);\n  }\n\n  async function funRemove(id) {\n    return await dbService.remove(id);\n  }\n\n  const serverDataUpdate = (dataIndex, order) => {\n    const rdataIndex = dataIndex || curdataIndex;\n    const rorder = order || curorder;\n    funFind({}).then(result => {\n      const sortedArr = result.sort((a, b) => {\n        const result = (typeof a[rdataIndex] === 'number' ? a[rdataIndex].toString() : a[rdataIndex]).localeCompare(typeof b[rdataIndex] === 'number' ? b[rdataIndex].toString() : b[rdataIndex]);\n        return rorder === 'asc' ? result > 0 ? 1 : -1 : result > 0 ? -1 : 1;\n      });\n      props.menuDataProps(sortedArr); // props.listDataAllProps(sortedArr)\n    });\n  };\n\n  const onTableSort = (dataIndex, order) => {\n    console.log('==dataIndex:', dataIndex, 'order:', order);\n    setcurDataIndex(dataIndex);\n    setcurOrder(order);\n    serverDataUpdate(dataIndex, order);\n  };\n\n  useEffect(() => {\n    serverDataUpdate();\n  }, []);\n\n  function beforeUpload() {\n    return new Promise(async (resolve, reject) => {\n      if (uploadFile.current.files.length > 0) {\n        const isLt20M = (await uploadFile.current.files[0].size) / 1024 / 1024 < 20;\n\n        if (!isLt20M) {\n          _Message.error('Image must smaller than 20MB!');\n\n          return reject();\n        }\n\n        resolve(isLt20M);\n      } else {\n        setParsed64('');\n      }\n    });\n  }\n\n  const handleFiles = async () => {\n    try {\n      await beforeUpload();\n      const files = [...parsed];\n      const data = await uploadFile.current.files[0]; // console.log(data)\n\n      files.push(data);\n      setParsed(files); //轉Base64 上傳檔案後呈現沒有寫到DB\n\n      const reader = new FileReader();\n\n      reader.onload = function () {\n        let dataURL = reader.result;\n        setParsed64(dataURL);\n      };\n\n      reader.readAsDataURL(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n    let obj = {};\n    obj[key] = value;\n    setWriteData({ ...writeData,\n      ...obj\n    });\n  };\n\n  const createSend = () => {\n    //-------Create Data 送出\n    if (editKey == true) {\n      //Check is edit state\n      Swal.fire({\n        title: `確定修改此資料?`,\n        text: '請確認修改資料!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消'\n      }).then(result => {\n        if (result.isConfirmed) {\n          const data = currentPosts[editIndex];\n          let newObj = { ...data,\n            ...writeData\n          };\n          patchUploads(newObj).then(res => {\n            console.log('==update success:', res);\n            Swal.fire({\n              position: 'center',\n              icon: 'success',\n              title: '編輯成功',\n              showConfirmButton: false,\n              timer: 1500\n            });\n            serverDataUpdate();\n            setWriteData({});\n            setParsed64('');\n            setEditKey(false);\n            setPopupState(false);\n          }).catch(error => {\n            console.log('==update fail:', error);\n\n            _Message.success('更新失敗');\n          });\n        }\n      });\n    } else {\n      Swal.fire({\n        title: `確定新增此資料?`,\n        text: '請確認資料填寫完整!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消'\n      }).then(result => {\n        if (result.isConfirmed) {\n          createUploads().then(res => {\n            Swal.fire('成功!', `此資料已新增`, 'success');\n            console.log('==create success:', res);\n            serverDataUpdate();\n            setWriteData({});\n            setParsed64('');\n            setEditKey(false);\n            setPopupState(false);\n          }).catch(error => {\n            console.log('==create fail:', error); // Message.error(`${err}`);\n          });\n        }\n      });\n    }\n  };\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n\n    switch (type) {\n      case \"input\":\n        element = /*#__PURE__*/_jsxDEV(_Input, {\n          value: writeData[e],\n          onChange: value => {\n            addCreateData(e, value);\n          },\n          placeholder: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case \"datePicker\":\n        element = /*#__PURE__*/_jsxDEV(_DatePicker, {\n          value: writeData[e],\n          placeholder: e,\n          onChange: value => {\n            addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case \"textArea\":\n        element = /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n          value: writeData[e],\n          placeholder: e,\n          maxLength: 500,\n          rows: 6,\n          hasLimitHint: true,\n          \"aria-label\": \"input max length 500\",\n          onChange: value => {\n            addCreateData(e, value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case \"select\":\n        element = /*#__PURE__*/_jsxDEV(_Select, {\n          value: writeData[e],\n          hasClear: true,\n          style: {\n            width: '100%'\n          },\n          placeholder: e,\n          dataSource: props.categoryProps,\n          onChange: value => {\n            addCreateData(e, value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case \"uploads\":\n        element = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/png, image/jpeg image/jpg\",\n            ref: uploadFile,\n            onChange: handleFiles,\n            type: \"file\",\n            id: \"file\",\n            name: \"files\" // multiple\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), editKey == true ? /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '50px',\n              height: '50px'\n            },\n            src: `${parsed64.length > 0 ? parsed64 : currentPosts[editIndex].files}`,\n            alt: \"\\u5716\\u7247\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true);\n        break;\n\n      case \"multiSelect\":\n        element = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(_Select, {\n            mode: \"multiple\",\n            value: writeData[e],\n            showSearch: true,\n            onChange: value => {\n              addCreateData(e, value);\n            },\n            dataSource: props.venderNameProps,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n        break;\n    }\n\n    return element;\n  };\n\n  function createUploads() {\n    //Use uploads create\n    return new Promise(async (resolve, reject) => {\n      try {\n        const formData = new FormData();\n        Object.keys(writeData).forEach(eKey => {\n          if (eKey == \"vendorName\") {\n            formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n          } else {\n            formData.append(eKey, writeData[eKey]);\n          }\n        }); // formData.append('createdTime', new Date().toLocaleString());\n        // formData.append('updatedTime', new Date().toLocaleString());\n\n        if (uploadFile.current !== null && uploadFile.current.files && uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        const Res = await axios(`http://localhost:3030/uploads`, {\n          method: 'POST',\n          headers: {\n            authorization: window.localStorage['feathers-jwt']\n          },\n          data: formData\n        });\n        resolve(Res);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  function patchUploads(data) {\n    //Use uploads patch\n    return new Promise(async (resolve, reject) => {\n      try {\n        let patchUrl = `/uploads?type=${dbName}&id=${data._id}`;\n        const formData = new FormData();\n        const passKeys = ['files', '_id']; //禁止FormData Patch add Key\n\n        Object.keys(data).forEach(eKey => {\n          if (!passKeys.includes(eKey)) {\n            if (eKey == \"vendorName\") {\n              formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n            } else {\n              formData.append(eKey, writeData[eKey]);\n            }\n          }\n        });\n\n        if (uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        if (!uploadFile.current.files.length) {\n          patchUrl = `/uploads?type=${dbName}&id=${data._id}&img=keep`;\n        }\n\n        console.log('rdy to PP:', formData);\n        const Res = await axios(patchUrl, {\n          method: 'PATCH',\n          headers: {\n            authorization: window.localStorage['feathers-jwt']\n          },\n          data: formData\n        });\n        resolve(Res);\n      } catch (error) {\n        console.log('PP err:', error);\n        reject();\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Dialog, {\n      hasMask: false,\n      visible: popupState,\n      onOk: () => {\n        createSend();\n      },\n      onCancel: () => {\n        setPopupState(false);\n        setEditKey(false);\n        setWriteData({});\n      },\n      onClose: () => {\n        setPopupState(false);\n        setEditKey(false);\n        setWriteData({});\n      },\n      children: [...Object.keys(keys)].map((e, nb) => {\n        //-------Render Create Element\n        const type = keys[e].type;\n        if (keys[e].text == \"建立時間\" || keys[e].text == \"修改時間\" || keys[e].text == \"證照\") return \"\";\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(_Form, {\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              label: keys[e].text,\n              children: typeComponents(e, type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)\n        }, keys[e].text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => {\n          setPopupState(true);\n        },\n        children: \"\\u65B0\\u589E\\u83DC\\u55AE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), currentPosts && currentPosts.length > 0 ? /*#__PURE__*/_jsxDEV(_Table, {\n      dataSource: currentPosts,\n      onSort: onTableSort,\n      children: [[...Object.keys(keys)].map(list => {\n        //  -------Render Table Data\n        if (list == \"files\") {\n          return /*#__PURE__*/_jsxDEV(_Table.Column, {\n            width: 200,\n            title: keys[list].text,\n            cell: (record, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: currentPosts[index].files.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"No Data\",\n                  src: currentPosts[index].files\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 21\n                }, this) : null\n              }, void 0, false);\n            }\n          }, keys[list].text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 22\n          }, this);\n        } else if (list == \"createTime\") {\n          return /*#__PURE__*/_jsxDEV(_Table.Column, {\n            sortable: true,\n            width: 200,\n            title: keys[list].text,\n            dataIndex: list,\n            cell: (record, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: new Date(currentPosts[index].createTime).toLocaleString()\n              }, void 0, false);\n            }\n          }, keys[list].text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 22\n          }, this);\n        } else if (list == \"updateTime\") {\n          return /*#__PURE__*/_jsxDEV(_Table.Column, {\n            sortable: true,\n            width: 200,\n            title: keys[list].text,\n            dataIndex: list,\n            cell: (record, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: new Date(currentPosts[index].updateTime).toLocaleString()\n              }, void 0, false);\n            }\n          }, keys[list].text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 22\n          }, this);\n        } else if (list == \"vendorName\") {\n          return /*#__PURE__*/_jsxDEV(_Table.Column, {\n            width: 200,\n            title: keys[list].text,\n            cell: (record, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: currentPosts[index].vendorName.length > 0 ? currentPosts[index].vendorName.map((list, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: list\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 25\n                  }, this);\n                }) : null\n              }, void 0, false);\n            }\n          }, keys[list].text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 22\n          }, this);\n        } else if (list == \"vendorLicense\") {\n          return /*#__PURE__*/_jsxDEV(_Table.Column, {\n            sortable: true,\n            width: 200,\n            title: keys[list].text,\n            cell: (record, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: currentPosts[index].vendorLicense.length > 0 ? currentPosts[index].vendorLicense.map((list, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: list.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 25\n                  }, this);\n                }) : null\n              }, void 0, false);\n            }\n          }, keys[list].text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 22\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(_Table.Column, {\n            sortable: true,\n            title: keys[list].text,\n            dataIndex: list,\n            width: 200\n          }, keys[list].text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 22\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(_Table.Column, {\n        width: 200,\n        title: \"\\u64CD\\u4F5C\",\n        cell: (value, index, record) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(_Button, {\n              type: \"normal\",\n              onClick: () => {\n                setPopupState(true);\n                setEditKey(true);\n                setEditIndex(index);\n                setWriteData({ ...currentPosts[index]\n                });\n              },\n              children: \"\\u7DE8\\u8F2F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              warning: true,\n              onClick: () => {\n                const item = currentPosts[index];\n                Swal.fire({\n                  title: `確定刪除此資料?`,\n                  text: '刪除後將無法復原!!',\n                  icon: 'warning',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#BEBEBE',\n                  confirmButtonText: '確定',\n                  cancelButtonText: '取消'\n                }).then(result => {\n                  if (result.isConfirmed) {\n                    Swal.fire('刪除!', `此資料已刪除`, 'success');\n                    funRemove(item._id).then(() => {\n                      const prePages = currentPage - 1 >= 0 ? currentPage - 1 : 0;\n\n                      if (props.menuData.length - 1 <= prePages * postsPerPage) {\n                        setCurrentPage(currentPage - 1 < 1 ? 1 : currentPage - 1);\n                      }\n\n                      serverDataUpdate();\n                    });\n                  }\n                });\n              },\n              children: \"\\u522A\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(_Pagination, {\n      total: props.menuData.length,\n      pageSize: postsPerPage,\n      totalRender: total => `Total: ${total}`,\n      onChange: pageNumber => {\n        setCurrentPage(pageNumber);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Menu, \"xleKQ7yv7EmgYzM901bNxx8fogM=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/src/components/Menu/Menu.jsx"],"names":["React","useState","useEffect","useRef","Fragment","Swal","client","axios","moment","Option","Item","Menu","props","dbName","keys","text","menuProps","dbService","service","writeData","setWriteData","popupState","setPopupState","editKey","setEditKey","editIndex","setEditIndex","parsed","setParsed","parsed64","setParsed64","file","setFile","uploadFile","uploadExcelFile","curdataIndex","setcurDataIndex","curorder","setcurOrder","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","menuData","slice","funFind","para","result","find","query","data","funCreate","obj","create","funUpdate","id","patch","funRemove","remove","serverDataUpdate","dataIndex","order","rdataIndex","rorder","then","sortedArr","sort","a","b","toString","localeCompare","menuDataProps","onTableSort","console","log","beforeUpload","Promise","resolve","reject","current","files","length","isLt20M","size","error","handleFiles","push","reader","FileReader","onload","dataURL","readAsDataURL","err","addCreateData","key","value","createSend","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","newObj","patchUploads","res","position","showConfirmButton","timer","catch","success","createUploads","typeComponents","e","type","element","format","width","categoryProps","height","venderNameProps","formData","FormData","Object","forEach","eKey","append","JSON","stringify","Res","method","headers","authorization","window","localStorage","patchUrl","_id","passKeys","includes","map","nb","list","record","index","Date","createTime","toLocaleString","updateTime","vendorName","vendorLicense","name","item","prePages","total","pageNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport {\n  Button,\n  Dialog,\n  Input,\n  Form,\n  Select,\n  DatePicker,\n  Message,\n  Card,\n  Table,\n  Pagination\n} from \"@alifd/next\";\nimport Swal from 'sweetalert2';\nimport client from '../../lib/feathers';\nimport axios from 'axios';\nimport moment from 'moment';\nconst Option = Select.Option;\nconst { Item } = Form;\nconst Menu = (props) => {\n  const { dbName, keys, text } = props.menuProps;\n  const dbService = client.service(`${dbName}`);\n\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\");\n  //uploads files\n  const [parsed, setParsed] = useState([]);\n  const [parsed64, setParsed64] = useState([]); //Base64\n  const [file, setFile] = useState(\"\");\n  const uploadFile = useRef(null);\n  const uploadExcelFile = useRef(null);\n  // sort\n  const [curdataIndex, setcurDataIndex] = useState('createTime');\n  const [curorder, setcurOrder] = useState('asc');\n  // change page\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.menuData.slice(indexOfFirstPost, indexOfLastPost);\n  // dbService\n  async function funFind(para) {\n    const result = await dbService.find({ query: para });\n    // console.log(result);\n    return result && result.data ? result.data : [];\n  }\n\n  async function funCreate(obj) {\n    return (await dbService.create(obj))\n  }\n  async function funUpdate(id, obj) {\n    return (await dbService.patch(id, obj))\n  }\n  async function funRemove(id) {\n    return (await dbService.remove(id))\n  }\n  const serverDataUpdate = (dataIndex, order) => {\n    const rdataIndex = dataIndex || curdataIndex;\n    const rorder = order || curorder;\n\n    funFind({}).then((result) => {\n      const sortedArr = result.sort((a, b) => {\n        const result = (typeof a[rdataIndex] === 'number'\n          ? a[rdataIndex].toString()\n          : a[rdataIndex]\n        ).localeCompare(\n          typeof b[rdataIndex] === 'number'\n            ? b[rdataIndex].toString()\n            : b[rdataIndex]\n        );\n        return rorder === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1;\n      })\n      props.menuDataProps(sortedArr);\n      // props.listDataAllProps(sortedArr)\n    });\n\n\n  };\n  const onTableSort = (dataIndex, order) => {\n    console.log('==dataIndex:', dataIndex, 'order:', order);\n    setcurDataIndex(dataIndex);\n    setcurOrder(order);\n    serverDataUpdate(dataIndex, order);\n  };\n\n  useEffect(() => {\n    serverDataUpdate();\n  }, []);\n\n\n\n  function beforeUpload() {\n    return new Promise(async (resolve, reject) => {\n      if (uploadFile.current.files.length > 0) {\n        const isLt20M =\n          (await uploadFile.current.files[0].size) / 1024 / 1024 < 20;\n\n        if (!isLt20M) {\n          Message.error('Image must smaller than 20MB!');\n          return reject();\n        }\n        resolve(isLt20M);\n      } else {\n        setParsed64('')\n      }\n    });\n  }\n\n  const handleFiles = async () => {\n    try {\n      await beforeUpload();\n      const files = [...parsed];\n      const data = await uploadFile.current.files[0];\n      // console.log(data)\n      files.push(data);\n      setParsed(files);\n\n      //轉Base64 上傳檔案後呈現沒有寫到DB\n      const reader = new FileReader();\n      reader.onload = function () {\n        let dataURL = reader.result;\n        setParsed64(dataURL);\n      };\n      reader.readAsDataURL(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n    let obj = {};\n    obj[key] = value;\n\n    setWriteData({ ...writeData, ...obj });\n  };\n  const createSend = () => {\n    //-------Create Data 送出\n    if (editKey == true) { //Check is edit state\n\n\n      Swal.fire({\n        title: `確定修改此資料?`,\n        text: '請確認修改資料!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消',\n      }).then((result) => {\n        if (result.isConfirmed) {\n\n          const data = currentPosts[editIndex];\n\n          let newObj = { ...data, ...writeData }\n\n          patchUploads(newObj).then((res) => {\n            console.log('==update success:', res);\n            Swal.fire({\n              position: 'center',\n              icon: 'success',\n              title: '編輯成功',\n              showConfirmButton: false,\n              timer: 1500,\n            });\n            serverDataUpdate();\n            setWriteData({});\n            setParsed64('');\n            setEditKey(false);\n            setPopupState(false);\n          })\n            .catch((error) => {\n              console.log('==update fail:', error);\n              Message.success('更新失敗');\n            });\n\n\n        }\n      });\n    } else {\n\n      Swal.fire({\n        title: `確定新增此資料?`,\n        text: '請確認資料填寫完整!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          createUploads().then((res) => {\n            Swal.fire('成功!', `此資料已新增`, 'success');\n            console.log('==create success:', res);\n            serverDataUpdate();\n            setWriteData({});\n            setParsed64('');\n            setEditKey(false);\n            setPopupState(false);\n          }).catch((error) => {\n            console.log('==create fail:', error);\n            // Message.error(`${err}`);\n          })\n\n        }\n      });\n\n    }\n  };\n\n\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n    switch (type) {\n      case \"input\":\n        element = (\n          <Input\n            value={writeData[e]}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n            placeholder={e}\n          />\n        );\n        break;\n      case \"datePicker\":\n        element = (\n          <DatePicker\n            value={writeData[e]}\n            placeholder={e}\n            onChange={(value) => {\n              addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n            }}\n          />\n        );\n        break;\n      case \"textArea\":\n        element = (\n          <Input.TextArea\n            value={writeData[e]}\n            placeholder={e}\n            maxLength={500}\n            rows={6}\n            hasLimitHint\n            aria-label=\"input max length 500\"\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"select\":\n        element = (\n          <Select\n            value={writeData[e]}\n            hasClear\n            style={{ width: '100%' }}\n            placeholder={e}\n            dataSource={props.categoryProps}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"uploads\":\n        element = (\n          <>\n            <input\n              accept=\"image/png, image/jpeg image/jpg\"\n              ref={uploadFile}\n              onChange={handleFiles}\n              type=\"file\"\n              id=\"file\"\n              name=\"files\"\n            // multiple\n            />\n            {editKey == true ?\n              <img\n                style={{ width: '50px', height: '50px' }}\n                src={`${parsed64.length > 0 ? parsed64 : currentPosts[editIndex].files}`}\n                alt=\"圖片\"\n              />\n\n              : null\n\n            }\n\n            {/* <img  src={`${parsed64.length > 0 ? parsed64 : ezconImg}`} alt=\"圖片\"></img> */}\n          </>);\n        break;\n      case \"multiSelect\":\n        element = (\n          <>\n            <Select\n              mode=\"multiple\"\n              value={writeData[e]}\n              showSearch\n              onChange={(value) => {\n                addCreateData(e, value);\n              }}\n              dataSource={props.venderNameProps}\n              style={{ width: '100%' }}\n            />\n\n          </>);\n        break;\n    }\n    return element;\n  };\n\n\n\n\n  function createUploads() {//Use uploads create\n    return new Promise(async (resolve, reject) => {\n      try {\n\n        const formData = new FormData();\n        Object.keys(writeData).forEach((eKey) => {\n\n          if (eKey == \"vendorName\") {\n            formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n          } else {\n            formData.append(eKey, writeData[eKey]);\n          }\n        });\n        // formData.append('createdTime', new Date().toLocaleString());\n        // formData.append('updatedTime', new Date().toLocaleString());\n\n        if (uploadFile.current !== null && uploadFile.current.files && uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        const Res = await axios(`http://localhost:3030/uploads`, {\n          method: 'POST',\n          headers: { authorization: window.localStorage['feathers-jwt'] },\n          data: formData\n        });\n\n        resolve(Res);\n      } catch (error) {\n        reject(error);\n      }\n    })\n\n  }\n\n  function patchUploads(data) {//Use uploads patch\n    return new Promise(async (resolve, reject) => {\n      try {\n        let patchUrl = `/uploads?type=${dbName}&id=${data._id}`\n        const formData = new FormData();\n\n        const passKeys = ['files', '_id'];//禁止FormData Patch add Key\n\n        Object.keys(data).forEach((eKey) => {\n\n          if (!passKeys.includes(eKey)) {\n            if (eKey == \"vendorName\") {\n              formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n            } else {\n              formData.append(eKey, writeData[eKey]);\n            }\n          }\n        });\n\n        if (uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n        if (!uploadFile.current.files.length) {\n          patchUrl = `/uploads?type=${dbName}&id=${data._id}&img=keep`\n        }\n        console.log('rdy to PP:', formData);\n        const Res = await axios(patchUrl, {\n          method: 'PATCH',\n          headers: { authorization: window.localStorage['feathers-jwt'] },\n          data: formData\n        });\n\n        resolve(Res);\n      } catch (error) {\n        console.log('PP err:', error);\n        reject();\n      }\n    })\n  }\n\n\n\n\n\n\n  return (\n    <>\n      <Dialog\n\n        hasMask={false}\n        visible={popupState}\n        onOk={() => {\n          createSend();\n        }}\n        onCancel={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n        onClose={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n      >\n        {[...Object.keys(keys)].map((e, nb) => {\n          //-------Render Create Element\n          const type = keys[e].type;\n          if (keys[e].text == \"建立時間\" || keys[e].text == \"修改時間\" || keys[e].text == \"證照\") return \"\";\n          return <Fragment key={keys[e].text}>\n            <Form>\n\n              <Item label={keys[e].text} >\n                {typeComponents(e, type)}\n              </Item>\n\n            </Form>\n          </Fragment>;\n        })}\n      </Dialog>\n\n      <div >\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setPopupState(true);\n          }}\n        >\n          新增菜單\n                </Button>\n\n\n      </div>\n      {currentPosts && currentPosts.length > 0 ?\n\n        <Table dataSource={currentPosts} onSort={onTableSort}>\n          {[...Object.keys(keys)].map((list) => {\n            //  -------Render Table Data\n\n            if (list == \"files\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].files.length > 0 ?\n                    <img alt=\"No Data\" src={currentPosts[index].files} /> : null}\n\n                </>)\n              }\n              } />\n            } else if (list == \"createTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].createTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"updateTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].updateTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorName\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorName.length > 0 ?\n                    currentPosts[index].vendorName.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorLicense\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorLicense.length > 0 ?\n                    currentPosts[index].vendorLicense.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list.name}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else {\n              return <Table.Column sortable key={keys[list].text} title={keys[list].text} dataIndex={list} width={200} />\n            }\n\n          })}\n          <Table.Column\n            width={200}\n            title=\"操作\"\n            cell={(value, index, record) => {\n              return (\n                <div >\n                  <Button\n                    type=\"normal\"\n                    onClick={() => {\n                      setPopupState(true);\n                      setEditKey(true);\n                      setEditIndex(index);\n                      setWriteData({ ...currentPosts[index] });\n                    }}\n                  >\n                    編輯\n                                    </Button>\n\n                  <Button\n                    type=\"primary\"\n                    warning\n                    onClick={() => {\n                      const item = currentPosts[index];\n                      Swal.fire({\n                        title: `確定刪除此資料?`,\n                        text: '刪除後將無法復原!!',\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#3085d6',\n                        cancelButtonColor: '#BEBEBE',\n                        confirmButtonText: '確定',\n                        cancelButtonText: '取消',\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          Swal.fire('刪除!', `此資料已刪除`, 'success');\n                          funRemove(item._id).then(() => {\n                            const prePages =\n                              currentPage - 1 >= 0 ? currentPage - 1 : 0;\n                            if (\n                              props.menuData.length - 1 <=\n                              prePages * postsPerPage\n                            ) {\n                              setCurrentPage(\n                                currentPage - 1 < 1 ? 1 : currentPage - 1\n                              );\n                            }\n\n                            serverDataUpdate();\n                          });\n                        }\n                      });\n                    }}\n                  >\n                    刪除\n                             </Button>\n                </div>\n              );\n            }}\n          />\n        </Table>\n        : null}\n\n\n\n\n      <Pagination\n\n        total={props.menuData.length}\n        pageSize={postsPerPage}\n        totalRender={(total) => `Total: ${total}`}\n        onChange={(pageNumber) => {\n          setCurrentPage(pageNumber);\n        }}\n      />\n\n\n\n\n\n    </>\n  );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}