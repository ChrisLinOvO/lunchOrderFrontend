{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Children } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport { KEYCODE, dom, events } from '../util';\nimport RowComponent from './expanded/row';\nimport Col from './column';\nimport { statics } from './util';\n\nvar noop = function noop() {};\n\nexport default function expanded(BaseComponent, stickyLock) {\n  var _class, _temp2;\n  /** Table */\n\n\n  var ExpandedTable = (_temp2 = _class = function (_React$Component) {\n    _inherits(ExpandedTable, _React$Component);\n\n    function ExpandedTable() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, ExpandedTable);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n        openRowKeys: _this.props.openRowKeys || _this.props.defaultOpenRowKeys || []\n      }, _this.saveExpandedRowRef = function (key, rowRef) {\n        if (!_this.expandedRowRefs) {\n          _this.expandedRowRefs = {};\n        }\n\n        _this.expandedRowRefs[key] = rowRef;\n      }, _this.setExpandedWidth = function () {\n        var prefix = _this.props.prefix;\n\n        var tableEl = _this.getTableNode();\n\n        var totalWidth = +(tableEl && tableEl.clientWidth) - 1 || '100%';\n        var bodyNode = tableEl && tableEl.querySelector('.' + prefix + 'table-body');\n        Object.keys(_this.expandedRowRefs || {}).forEach(function (key) {\n          dom.setStyle(_this.expandedRowRefs[key], {\n            width: bodyNode && bodyNode.clientWidth || totalWidth\n          });\n        });\n      }, _this.getTableInstance = function (instance) {\n        _this.tableInc = instance;\n      }, _this.expandedKeydown = function (value, record, index, e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.keyCode === KEYCODE.ENTER) {\n          _this.onExpandedClick(value, record, index, e);\n        }\n      }, _this.renderExpandedCell = function (value, index, record) {\n        var _classnames;\n\n        var _this$props = _this.props,\n            getExpandedColProps = _this$props.getExpandedColProps,\n            prefix = _this$props.prefix,\n            locale = _this$props.locale,\n            rowExpandable = _this$props.rowExpandable;\n\n        if (typeof rowExpandable === 'function' && !rowExpandable(record, index)) {\n          return '';\n        }\n\n        var openRowKeys = _this.state.openRowKeys,\n            primaryKey = _this.props.primaryKey,\n            hasExpanded = openRowKeys.indexOf(record[primaryKey]) > -1,\n            switchNode = hasExpanded ? React.createElement(Icon, {\n          type: 'minus',\n          size: 'xs',\n          className: prefix + 'table-expand-unfold'\n        }) : React.createElement(Icon, {\n          type: 'add',\n          size: 'xs',\n          className: prefix + 'table-expand-fold'\n        }),\n            attrs = getExpandedColProps(record, index) || {};\n        var cls = classnames((_classnames = {}, _classnames[prefix + 'table-expanded-ctrl'] = true, _classnames.disabled = attrs.disabled, _classnames[attrs.className] = attrs.className, _classnames));\n\n        if (!attrs.disabled) {\n          attrs.onClick = _this.onExpandedClick.bind(_this, value, record, index);\n        }\n\n        return React.createElement('span', _extends({}, attrs, {\n          role: 'button',\n          tabIndex: '0',\n          onKeyDown: _this.expandedKeydown.bind(_this, value, record, index),\n          'aria-label': hasExpanded ? locale.expanded : locale.folded,\n          'aria-expanded': hasExpanded,\n          className: cls\n        }), switchNode);\n      }, _this.addExpandCtrl = function (columns) {\n        var _this$props2 = _this.props,\n            prefix = _this$props2.prefix,\n            size = _this$props2.size;\n\n        if (!columns.find(function (record) {\n          return record.key === 'expanded';\n        })) {\n          columns.unshift({\n            key: 'expanded',\n            title: '',\n            cell: _this.renderExpandedCell.bind(_this),\n            width: size === 'small' ? 34 : 50,\n            className: prefix + 'table-expanded ' + prefix + 'table-prerow',\n            __normalized: true\n          });\n        }\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    ExpandedTable.prototype.getChildContext = function getChildContext() {\n      return {\n        openRowKeys: this.state.openRowKeys,\n        expandedRowRender: this.props.expandedRowRender,\n        expandedIndexSimulate: this.props.expandedIndexSimulate,\n        expandedRowWidthEquals2Table: stickyLock,\n        getExpandedRowRef: this.saveExpandedRowRef,\n        getTableInstanceForExpand: this.getTableInstance,\n        expandedRowIndent: stickyLock ? [0, 0] : this.props.expandedRowIndent\n      };\n    };\n\n    ExpandedTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\n      if ('openRowKeys' in nextProps) {\n        return {\n          openRowKeys: nextProps.openRowKeys || []\n        };\n      }\n\n      return null;\n    };\n\n    ExpandedTable.prototype.componentDidMount = function componentDidMount() {\n      this.setExpandedWidth();\n      events.on(window, 'resize', this.setExpandedWidth);\n    };\n\n    ExpandedTable.prototype.componentDidUpdate = function componentDidUpdate() {\n      this.setExpandedWidth();\n    };\n\n    ExpandedTable.prototype.componentWillUnmount = function componentWillUnmount() {\n      events.off(window, 'resize', this.setExpandedWidth);\n    };\n\n    ExpandedTable.prototype.getTableNode = function getTableNode() {\n      var table = this.tableInc;\n\n      try {\n        // in case of finding an unmounted component due to cached data\n        // need to clear refs of table when dataSource Changed\n        // use try catch for temporary\n        return findDOMNode(table.tableEl);\n      } catch (error) {\n        return null;\n      }\n    };\n\n    ExpandedTable.prototype.onExpandedClick = function onExpandedClick(value, record, i, e) {\n      var openRowKeys = [].concat(this.state.openRowKeys),\n          primaryKey = this.props.primaryKey,\n          id = record[primaryKey],\n          index = openRowKeys.indexOf(id);\n\n      if (index > -1) {\n        openRowKeys.splice(index, 1);\n      } else {\n        openRowKeys.push(id);\n      }\n\n      if (!('openRowKeys' in this.props)) {\n        this.setState({\n          openRowKeys: openRowKeys\n        });\n      }\n\n      this.props.onRowOpen(openRowKeys, id, index === -1, record);\n      e.stopPropagation();\n    };\n\n    ExpandedTable.prototype.normalizeChildren = function normalizeChildren(children) {\n      var _props = this.props,\n          prefix = _props.prefix,\n          size = _props.size;\n      var toArrayChildren = Children.map(children, function (child, index) {\n        return React.cloneElement(child, {\n          key: index\n        });\n      });\n      toArrayChildren.unshift(React.createElement(Col, {\n        title: '',\n        key: 'expanded',\n        cell: this.renderExpandedCell.bind(this),\n        width: size === 'small' ? 34 : 50,\n        className: prefix + 'table-expanded ' + prefix + 'table-prerow',\n        __normalized: true\n      }));\n      return toArrayChildren;\n    };\n\n    ExpandedTable.prototype.normalizeDataSource = function normalizeDataSource(ds) {\n      var ret = [];\n      ds.forEach(function (item) {\n        var itemCopy = _extends({}, item);\n\n        itemCopy.__expanded = true;\n        ret.push(item, itemCopy);\n      });\n      return ret;\n    };\n\n    ExpandedTable.prototype.render = function render() {\n      /* eslint-disable no-unused-vars, prefer-const */\n      var _props2 = this.props,\n          components = _props2.components,\n          openRowKeys = _props2.openRowKeys,\n          expandedRowRender = _props2.expandedRowRender,\n          rowExpandable = _props2.rowExpandable,\n          hasExpandedRowCtrl = _props2.hasExpandedRowCtrl,\n          children = _props2.children,\n          columns = _props2.columns,\n          dataSource = _props2.dataSource,\n          entireDataSource = _props2.entireDataSource,\n          getExpandedColProps = _props2.getExpandedColProps,\n          expandedRowIndent = _props2.expandedRowIndent,\n          onRowOpen = _props2.onRowOpen,\n          onExpandedRowClick = _props2.onExpandedRowClick,\n          others = _objectWithoutProperties(_props2, ['components', 'openRowKeys', 'expandedRowRender', 'rowExpandable', 'hasExpandedRowCtrl', 'children', 'columns', 'dataSource', 'entireDataSource', 'getExpandedColProps', 'expandedRowIndent', 'onRowOpen', 'onExpandedRowClick']);\n\n      if (expandedRowRender && !components.Row) {\n        components = _extends({}, components);\n        components.Row = RowComponent;\n        dataSource = this.normalizeDataSource(dataSource);\n        entireDataSource = this.normalizeDataSource(entireDataSource);\n      }\n\n      if (expandedRowRender && hasExpandedRowCtrl) {\n        var useColumns = columns && !children;\n\n        if (useColumns) {\n          this.addExpandCtrl(columns);\n        } else {\n          children = this.normalizeChildren(children || []);\n        }\n      }\n\n      return React.createElement(BaseComponent, _extends({}, others, {\n        columns: columns,\n        dataSource: dataSource,\n        entireDataSource: entireDataSource,\n        components: components\n      }), children);\n    };\n\n    return ExpandedTable;\n  }(React.Component), _class.ExpandedRow = RowComponent, _class.propTypes = _extends({\n    /**\n     * 额外渲染行的渲染函数\n     * @param {Object} record 该行所对应的数据\n     * @param {Number} index 该行所对应的序列\n     * @returns {Element}\n     */\n    expandedRowRender: PropTypes.func,\n\n    /**\n     * 设置行是否可展开，设置 false 为不可展开\n     * @param {Object} record 该行所对应的数据\n     * @param {Number} index 该行所对应的序列\n     * @returns {Boolean} 是否可展开\n     * @version 1.21\n     */\n    rowExpandable: PropTypes.func,\n\n    /**\n     * 额外渲染行的缩进\n     */\n    expandedRowIndent: PropTypes.array,\n\n    /**\n     * 默认情况下展开的渲染行或者Tree, 传入此属性为受控状态\n     */\n    openRowKeys: PropTypes.array,\n\n    /**\n     * 默认情况下展开的 Expand行 或者 Tree行，非受控模式\n     * @version 1.23.22\n     */\n    defaultOpenRowKeys: PropTypes.array,\n\n    /**\n     * 是否显示点击展开额外渲染行的+号按钮\n     */\n    hasExpandedRowCtrl: PropTypes.bool,\n\n    /**\n     * 设置额外渲染行的属性\n     */\n    getExpandedColProps: PropTypes.func,\n\n    /**\n     * 在额外渲染行或者Tree展开或者收起的时候触发的事件\n     * @param {Array} openRowKeys 展开的渲染行的key\n     * @param {String} currentRowKey 当前点击的渲染行的key\n     * @param {Boolean} expanded 当前点击是展开还是收起\n     * @param {Object} currentRecord 当前点击额外渲染行的记录\n     */\n    onRowOpen: PropTypes.func,\n    onExpandedRowClick: PropTypes.func,\n    locale: PropTypes.object\n  }, BaseComponent.propTypes), _class.defaultProps = _extends({}, BaseComponent.defaultProps, {\n    getExpandedColProps: noop,\n    onRowOpen: noop,\n    hasExpandedRowCtrl: true,\n    components: {},\n    expandedRowIndent: stickyLock ? [0, 0] : [1, 0],\n    prefix: 'next-'\n  }), _class.childContextTypes = {\n    openRowKeys: PropTypes.array,\n    expandedRowRender: PropTypes.func,\n    expandedIndexSimulate: PropTypes.bool,\n    expandedRowWidthEquals2Table: PropTypes.bool,\n    expandedRowIndent: PropTypes.array,\n    getExpandedRowRef: PropTypes.func,\n    getTableInstanceForExpand: PropTypes.func\n  }, _temp2);\n  ExpandedTable.displayName = 'ExpandedTable';\n  statics(ExpandedTable, BaseComponent);\n  return polyfill(ExpandedTable);\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/table/expanded.js"],"names":["_objectWithoutProperties","_extends","_classCallCheck","_possibleConstructorReturn","_inherits","React","Children","findDOMNode","PropTypes","classnames","polyfill","Icon","KEYCODE","dom","events","RowComponent","Col","statics","noop","expanded","BaseComponent","stickyLock","_class","_temp2","ExpandedTable","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","openRowKeys","props","defaultOpenRowKeys","saveExpandedRowRef","key","rowRef","expandedRowRefs","setExpandedWidth","prefix","tableEl","getTableNode","totalWidth","clientWidth","bodyNode","querySelector","Object","keys","forEach","setStyle","width","getTableInstance","instance","tableInc","expandedKeydown","value","record","index","e","preventDefault","stopPropagation","keyCode","ENTER","onExpandedClick","renderExpandedCell","_classnames","_this$props","getExpandedColProps","locale","rowExpandable","primaryKey","hasExpanded","indexOf","switchNode","createElement","type","size","className","attrs","cls","disabled","onClick","bind","role","tabIndex","onKeyDown","folded","addExpandCtrl","columns","_this$props2","find","unshift","title","cell","__normalized","prototype","getChildContext","expandedRowRender","expandedIndexSimulate","expandedRowWidthEquals2Table","getExpandedRowRef","getTableInstanceForExpand","expandedRowIndent","getDerivedStateFromProps","nextProps","componentDidMount","on","window","componentDidUpdate","componentWillUnmount","off","table","error","i","id","splice","push","setState","onRowOpen","normalizeChildren","children","_props","toArrayChildren","map","child","cloneElement","normalizeDataSource","ds","ret","item","itemCopy","__expanded","render","_props2","components","hasExpandedRowCtrl","dataSource","entireDataSource","onExpandedRowClick","others","Row","useColumns","Component","ExpandedRow","propTypes","func","array","bool","object","defaultProps","childContextTypes","displayName"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,+CAArC;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,MAAvB,QAAqC,SAArC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,IAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB,CAAE,CAA7B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiCC,UAAjC,EAA6C;AACxD,MAAIC,MAAJ,EAAYC,MAAZ;AAEA;;;AACA,MAAIC,aAAa,IAAID,MAAM,GAAGD,MAAM,GAAG,UAAUG,gBAAV,EAA4B;AAC/DrB,IAAAA,SAAS,CAACoB,aAAD,EAAgBC,gBAAhB,CAAT;;AAEA,aAASD,aAAT,GAAyB;AACrB,UAAIE,KAAJ,EAAWC,KAAX,EAAkBC,IAAlB;;AAEA1B,MAAAA,eAAe,CAAC,IAAD,EAAOsB,aAAP,CAAf;;AAEA,WAAK,IAAIK,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;AACjFF,QAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACH;;AAED,aAAON,IAAI,IAAIF,KAAK,IAAIC,KAAK,GAAGxB,0BAA0B,CAAC,IAAD,EAAOsB,gBAAgB,CAACU,IAAjB,CAAsBC,KAAtB,CAA4BX,gBAA5B,EAA8C,CAAC,IAAD,EAAOY,MAAP,CAAcL,IAAd,CAA9C,CAAP,CAAlC,EAA8GL,KAAlH,CAAL,EAA+HA,KAAK,CAACW,KAAN,GAAc;AACxJC,QAAAA,WAAW,EAAEZ,KAAK,CAACa,KAAN,CAAYD,WAAZ,IAA2BZ,KAAK,CAACa,KAAN,CAAYC,kBAAvC,IAA6D;AAD8E,OAA7I,EAEZd,KAAK,CAACe,kBAAN,GAA2B,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AACjD,YAAI,CAACjB,KAAK,CAACkB,eAAX,EAA4B;AACxBlB,UAAAA,KAAK,CAACkB,eAAN,GAAwB,EAAxB;AACH;;AACDlB,QAAAA,KAAK,CAACkB,eAAN,CAAsBF,GAAtB,IAA6BC,MAA7B;AACH,OAPc,EAOZjB,KAAK,CAACmB,gBAAN,GAAyB,YAAY;AACpC,YAAIC,MAAM,GAAGpB,KAAK,CAACa,KAAN,CAAYO,MAAzB;;AAEA,YAAIC,OAAO,GAAGrB,KAAK,CAACsB,YAAN,EAAd;;AACA,YAAIC,UAAU,GAAG,EAAEF,OAAO,IAAIA,OAAO,CAACG,WAArB,IAAoC,CAApC,IAAyC,MAA1D;AACA,YAAIC,QAAQ,GAAGJ,OAAO,IAAIA,OAAO,CAACK,aAAR,CAAsB,MAAMN,MAAN,GAAe,YAArC,CAA1B;AAEAO,QAAAA,MAAM,CAACC,IAAP,CAAY5B,KAAK,CAACkB,eAAN,IAAyB,EAArC,EAAyCW,OAAzC,CAAiD,UAAUb,GAAV,EAAe;AAC5D9B,UAAAA,GAAG,CAAC4C,QAAJ,CAAa9B,KAAK,CAACkB,eAAN,CAAsBF,GAAtB,CAAb,EAAyC;AAAEe,YAAAA,KAAK,EAAEN,QAAQ,IAAIA,QAAQ,CAACD,WAArB,IAAoCD;AAA7C,WAAzC;AACH,SAFD;AAGH,OAjBc,EAiBZvB,KAAK,CAACgC,gBAAN,GAAyB,UAAUC,QAAV,EAAoB;AAC5CjC,QAAAA,KAAK,CAACkC,QAAN,GAAiBD,QAAjB;AACH,OAnBc,EAmBZjC,KAAK,CAACmC,eAAN,GAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,CAAhC,EAAmC;AAC1DA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;;AAEA,YAAIF,CAAC,CAACG,OAAF,KAAczD,OAAO,CAAC0D,KAA1B,EAAiC;AAC7B3C,UAAAA,KAAK,CAAC4C,eAAN,CAAsBR,KAAtB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,CAA5C;AACH;AACJ,OA1Bc,EA0BZvC,KAAK,CAAC6C,kBAAN,GAA2B,UAAUT,KAAV,EAAiBE,KAAjB,EAAwBD,MAAxB,EAAgC;AAC1D,YAAIS,WAAJ;;AAEA,YAAIC,WAAW,GAAG/C,KAAK,CAACa,KAAxB;AAAA,YACImC,mBAAmB,GAAGD,WAAW,CAACC,mBADtC;AAAA,YAEI5B,MAAM,GAAG2B,WAAW,CAAC3B,MAFzB;AAAA,YAGI6B,MAAM,GAAGF,WAAW,CAACE,MAHzB;AAAA,YAIIC,aAAa,GAAGH,WAAW,CAACG,aAJhC;;AAOA,YAAI,OAAOA,aAAP,KAAyB,UAAzB,IAAuC,CAACA,aAAa,CAACb,MAAD,EAASC,KAAT,CAAzD,EAA0E;AACtE,iBAAO,EAAP;AACH;;AAED,YAAI1B,WAAW,GAAGZ,KAAK,CAACW,KAAN,CAAYC,WAA9B;AAAA,YACIuC,UAAU,GAAGnD,KAAK,CAACa,KAAN,CAAYsC,UAD7B;AAAA,YAEIC,WAAW,GAAGxC,WAAW,CAACyC,OAAZ,CAAoBhB,MAAM,CAACc,UAAD,CAA1B,IAA0C,CAAC,CAF7D;AAAA,YAGIG,UAAU,GAAGF,WAAW,GAAG1E,KAAK,CAAC6E,aAAN,CAAoBvE,IAApB,EAA0B;AAAEwE,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,IAAI,EAAE,IAAvB;AAA6BC,UAAAA,SAAS,EAAEtC,MAAM,GAAG;AAAjD,SAA1B,CAAH,GAAyG1C,KAAK,CAAC6E,aAAN,CAAoBvE,IAApB,EAA0B;AAAEwE,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,IAAI,EAAE,IAArB;AAA2BC,UAAAA,SAAS,EAAEtC,MAAM,GAAG;AAA/C,SAA1B,CAHrI;AAAA,YAIIuC,KAAK,GAAGX,mBAAmB,CAACX,MAAD,EAASC,KAAT,CAAnB,IAAsC,EAJlD;AAMA,YAAIsB,GAAG,GAAG9E,UAAU,EAAEgE,WAAW,GAAG,EAAd,EAAkBA,WAAW,CAAC1B,MAAM,GAAG,qBAAV,CAAX,GAA8C,IAAhE,EAAsE0B,WAAW,CAACe,QAAZ,GAAuBF,KAAK,CAACE,QAAnG,EAA6Gf,WAAW,CAACa,KAAK,CAACD,SAAP,CAAX,GAA+BC,KAAK,CAACD,SAAlJ,EAA6JZ,WAA/J,EAApB;;AAEA,YAAI,CAACa,KAAK,CAACE,QAAX,EAAqB;AACjBF,UAAAA,KAAK,CAACG,OAAN,GAAgB9D,KAAK,CAAC4C,eAAN,CAAsBmB,IAAtB,CAA2B/D,KAA3B,EAAkCoC,KAAlC,EAAyCC,MAAzC,EAAiDC,KAAjD,CAAhB;AACH;;AACD,eAAO5D,KAAK,CAAC6E,aAAN,CACH,MADG,EAEHjF,QAAQ,CAAC,EAAD,EAAKqF,KAAL,EAAY;AAChBK,UAAAA,IAAI,EAAE,QADU;AAEhBC,UAAAA,QAAQ,EAAE,GAFM;AAGhBC,UAAAA,SAAS,EAAElE,KAAK,CAACmC,eAAN,CAAsB4B,IAAtB,CAA2B/D,KAA3B,EAAkCoC,KAAlC,EAAyCC,MAAzC,EAAiDC,KAAjD,CAHK;AAIhB,wBAAcc,WAAW,GAAGH,MAAM,CAACzD,QAAV,GAAqByD,MAAM,CAACkB,MAJrC;AAKhB,2BAAiBf,WALD;AAMhBM,UAAAA,SAAS,EAAEE;AANK,SAAZ,CAFL,EAUHN,UAVG,CAAP;AAYH,OA/Dc,EA+DZtD,KAAK,CAACoE,aAAN,GAAsB,UAAUC,OAAV,EAAmB;AACxC,YAAIC,YAAY,GAAGtE,KAAK,CAACa,KAAzB;AAAA,YACIO,MAAM,GAAGkD,YAAY,CAAClD,MAD1B;AAAA,YAEIqC,IAAI,GAAGa,YAAY,CAACb,IAFxB;;AAKA,YAAI,CAACY,OAAO,CAACE,IAAR,CAAa,UAAUlC,MAAV,EAAkB;AAChC,iBAAOA,MAAM,CAACrB,GAAP,KAAe,UAAtB;AACH,SAFI,CAAL,EAEI;AACAqD,UAAAA,OAAO,CAACG,OAAR,CAAgB;AACZxD,YAAAA,GAAG,EAAE,UADO;AAEZyD,YAAAA,KAAK,EAAE,EAFK;AAGZC,YAAAA,IAAI,EAAE1E,KAAK,CAAC6C,kBAAN,CAAyBkB,IAAzB,CAA8B/D,KAA9B,CAHM;AAIZ+B,YAAAA,KAAK,EAAE0B,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB,EAJnB;AAKZC,YAAAA,SAAS,EAAEtC,MAAM,GAAG,iBAAT,GAA6BA,MAA7B,GAAsC,cALrC;AAMZuD,YAAAA,YAAY,EAAE;AANF,WAAhB;AAQH;AACJ,OAjFc,EAiFZ5E,KAjFQ,CAAJ,EAiFIvB,0BAA0B,CAACwB,KAAD,EAAQC,IAAR,CAjFrC;AAkFH;;AAEDJ,IAAAA,aAAa,CAAC+E,SAAd,CAAwBC,eAAxB,GAA0C,SAASA,eAAT,GAA2B;AACjE,aAAO;AACHjE,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WADrB;AAEHkE,QAAAA,iBAAiB,EAAE,KAAKjE,KAAL,CAAWiE,iBAF3B;AAGHC,QAAAA,qBAAqB,EAAE,KAAKlE,KAAL,CAAWkE,qBAH/B;AAIHC,QAAAA,4BAA4B,EAAEtF,UAJ3B;AAKHuF,QAAAA,iBAAiB,EAAE,KAAKlE,kBALrB;AAMHmE,QAAAA,yBAAyB,EAAE,KAAKlD,gBAN7B;AAOHmD,QAAAA,iBAAiB,EAAEzF,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAAY,KAAKmB,KAAL,CAAWsE;AAPjD,OAAP;AASH,KAVD;;AAYAtF,IAAAA,aAAa,CAACuF,wBAAd,GAAyC,SAASA,wBAAT,CAAkCC,SAAlC,EAA6C;AAClF,UAAI,iBAAiBA,SAArB,EAAgC;AAC5B,eAAO;AACHzE,UAAAA,WAAW,EAAEyE,SAAS,CAACzE,WAAV,IAAyB;AADnC,SAAP;AAGH;;AAED,aAAO,IAAP;AACH,KARD;;AAUAf,IAAAA,aAAa,CAAC+E,SAAd,CAAwBU,iBAAxB,GAA4C,SAASA,iBAAT,GAA6B;AACrE,WAAKnE,gBAAL;AACAhC,MAAAA,MAAM,CAACoG,EAAP,CAAUC,MAAV,EAAkB,QAAlB,EAA4B,KAAKrE,gBAAjC;AACH,KAHD;;AAKAtB,IAAAA,aAAa,CAAC+E,SAAd,CAAwBa,kBAAxB,GAA6C,SAASA,kBAAT,GAA8B;AACvE,WAAKtE,gBAAL;AACH,KAFD;;AAIAtB,IAAAA,aAAa,CAAC+E,SAAd,CAAwBc,oBAAxB,GAA+C,SAASA,oBAAT,GAAgC;AAC3EvG,MAAAA,MAAM,CAACwG,GAAP,CAAWH,MAAX,EAAmB,QAAnB,EAA6B,KAAKrE,gBAAlC;AACH,KAFD;;AAIAtB,IAAAA,aAAa,CAAC+E,SAAd,CAAwBtD,YAAxB,GAAuC,SAASA,YAAT,GAAwB;AAC3D,UAAIsE,KAAK,GAAG,KAAK1D,QAAjB;;AACA,UAAI;AACA;AACA;AACA;AACA,eAAOtD,WAAW,CAACgH,KAAK,CAACvE,OAAP,CAAlB;AACH,OALD,CAKE,OAAOwE,KAAP,EAAc;AACZ,eAAO,IAAP;AACH;AACJ,KAVD;;AAYAhG,IAAAA,aAAa,CAAC+E,SAAd,CAAwBhC,eAAxB,GAA0C,SAASA,eAAT,CAAyBR,KAAzB,EAAgCC,MAAhC,EAAwCyD,CAAxC,EAA2CvD,CAA3C,EAA8C;AACpF,UAAI3B,WAAW,GAAG,GAAGF,MAAH,CAAU,KAAKC,KAAL,CAAWC,WAArB,CAAlB;AAAA,UACIuC,UAAU,GAAG,KAAKtC,KAAL,CAAWsC,UAD5B;AAAA,UAEI4C,EAAE,GAAG1D,MAAM,CAACc,UAAD,CAFf;AAAA,UAGIb,KAAK,GAAG1B,WAAW,CAACyC,OAAZ,CAAoB0C,EAApB,CAHZ;;AAKA,UAAIzD,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ1B,QAAAA,WAAW,CAACoF,MAAZ,CAAmB1D,KAAnB,EAA0B,CAA1B;AACH,OAFD,MAEO;AACH1B,QAAAA,WAAW,CAACqF,IAAZ,CAAiBF,EAAjB;AACH;;AACD,UAAI,EAAE,iBAAiB,KAAKlF,KAAxB,CAAJ,EAAoC;AAChC,aAAKqF,QAAL,CAAc;AACVtF,UAAAA,WAAW,EAAEA;AADH,SAAd;AAGH;;AACD,WAAKC,KAAL,CAAWsF,SAAX,CAAqBvF,WAArB,EAAkCmF,EAAlC,EAAsCzD,KAAK,KAAK,CAAC,CAAjD,EAAoDD,MAApD;AACAE,MAAAA,CAAC,CAACE,eAAF;AACH,KAlBD;;AAoBA5C,IAAAA,aAAa,CAAC+E,SAAd,CAAwBwB,iBAAxB,GAA4C,SAASA,iBAAT,CAA2BC,QAA3B,EAAqC;AAC7E,UAAIC,MAAM,GAAG,KAAKzF,KAAlB;AAAA,UACIO,MAAM,GAAGkF,MAAM,CAAClF,MADpB;AAAA,UAEIqC,IAAI,GAAG6C,MAAM,CAAC7C,IAFlB;AAIA,UAAI8C,eAAe,GAAG5H,QAAQ,CAAC6H,GAAT,CAAaH,QAAb,EAAuB,UAAUI,KAAV,EAAiBnE,KAAjB,EAAwB;AACjE,eAAO5D,KAAK,CAACgI,YAAN,CAAmBD,KAAnB,EAA0B;AAC7BzF,UAAAA,GAAG,EAAEsB;AADwB,SAA1B,CAAP;AAGH,OAJqB,CAAtB;AAKAiE,MAAAA,eAAe,CAAC/B,OAAhB,CAAwB9F,KAAK,CAAC6E,aAAN,CAAoBlE,GAApB,EAAyB;AAC7CoF,QAAAA,KAAK,EAAE,EADsC;AAE7CzD,QAAAA,GAAG,EAAE,UAFwC;AAG7C0D,QAAAA,IAAI,EAAE,KAAK7B,kBAAL,CAAwBkB,IAAxB,CAA6B,IAA7B,CAHuC;AAI7ChC,QAAAA,KAAK,EAAE0B,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB,EAJc;AAK7CC,QAAAA,SAAS,EAAEtC,MAAM,GAAG,iBAAT,GAA6BA,MAA7B,GAAsC,cALJ;AAM7CuD,QAAAA,YAAY,EAAE;AAN+B,OAAzB,CAAxB;AAQA,aAAO4B,eAAP;AACH,KAnBD;;AAqBA1G,IAAAA,aAAa,CAAC+E,SAAd,CAAwB+B,mBAAxB,GAA8C,SAASA,mBAAT,CAA6BC,EAA7B,EAAiC;AAC3E,UAAIC,GAAG,GAAG,EAAV;AACAD,MAAAA,EAAE,CAAC/E,OAAH,CAAW,UAAUiF,IAAV,EAAgB;AACvB,YAAIC,QAAQ,GAAGzI,QAAQ,CAAC,EAAD,EAAKwI,IAAL,CAAvB;;AACAC,QAAAA,QAAQ,CAACC,UAAT,GAAsB,IAAtB;AACAH,QAAAA,GAAG,CAACZ,IAAJ,CAASa,IAAT,EAAeC,QAAf;AACH,OAJD;AAKA,aAAOF,GAAP;AACH,KARD;;AAUAhH,IAAAA,aAAa,CAAC+E,SAAd,CAAwBqC,MAAxB,GAAiC,SAASA,MAAT,GAAkB;AAC/C;AACA,UAAIC,OAAO,GAAG,KAAKrG,KAAnB;AAAA,UACIsG,UAAU,GAAGD,OAAO,CAACC,UADzB;AAAA,UAEIvG,WAAW,GAAGsG,OAAO,CAACtG,WAF1B;AAAA,UAGIkE,iBAAiB,GAAGoC,OAAO,CAACpC,iBAHhC;AAAA,UAII5B,aAAa,GAAGgE,OAAO,CAAChE,aAJ5B;AAAA,UAKIkE,kBAAkB,GAAGF,OAAO,CAACE,kBALjC;AAAA,UAMIf,QAAQ,GAAGa,OAAO,CAACb,QANvB;AAAA,UAOIhC,OAAO,GAAG6C,OAAO,CAAC7C,OAPtB;AAAA,UAQIgD,UAAU,GAAGH,OAAO,CAACG,UARzB;AAAA,UASIC,gBAAgB,GAAGJ,OAAO,CAACI,gBAT/B;AAAA,UAUItE,mBAAmB,GAAGkE,OAAO,CAAClE,mBAVlC;AAAA,UAWImC,iBAAiB,GAAG+B,OAAO,CAAC/B,iBAXhC;AAAA,UAYIgB,SAAS,GAAGe,OAAO,CAACf,SAZxB;AAAA,UAaIoB,kBAAkB,GAAGL,OAAO,CAACK,kBAbjC;AAAA,UAcIC,MAAM,GAAGnJ,wBAAwB,CAAC6I,OAAD,EAAU,CAAC,YAAD,EAAe,aAAf,EAA8B,mBAA9B,EAAmD,eAAnD,EAAoE,oBAApE,EAA0F,UAA1F,EAAsG,SAAtG,EAAiH,YAAjH,EAA+H,kBAA/H,EAAmJ,qBAAnJ,EAA0K,mBAA1K,EAA+L,WAA/L,EAA4M,oBAA5M,CAAV,CAdrC;;AAgBA,UAAIpC,iBAAiB,IAAI,CAACqC,UAAU,CAACM,GAArC,EAA0C;AACtCN,QAAAA,UAAU,GAAG7I,QAAQ,CAAC,EAAD,EAAK6I,UAAL,CAArB;AACAA,QAAAA,UAAU,CAACM,GAAX,GAAiBrI,YAAjB;AACAiI,QAAAA,UAAU,GAAG,KAAKV,mBAAL,CAAyBU,UAAzB,CAAb;AACAC,QAAAA,gBAAgB,GAAG,KAAKX,mBAAL,CAAyBW,gBAAzB,CAAnB;AACH;;AACD,UAAIxC,iBAAiB,IAAIsC,kBAAzB,EAA6C;AACzC,YAAIM,UAAU,GAAGrD,OAAO,IAAI,CAACgC,QAA7B;;AAEA,YAAIqB,UAAJ,EAAgB;AACZ,eAAKtD,aAAL,CAAmBC,OAAnB;AACH,SAFD,MAEO;AACHgC,UAAAA,QAAQ,GAAG,KAAKD,iBAAL,CAAuBC,QAAQ,IAAI,EAAnC,CAAX;AACH;AACJ;;AAED,aAAO3H,KAAK,CAAC6E,aAAN,CACH9D,aADG,EAEHnB,QAAQ,CAAC,EAAD,EAAKkJ,MAAL,EAAa;AACjBnD,QAAAA,OAAO,EAAEA,OADQ;AAEjBgD,QAAAA,UAAU,EAAEA,UAFK;AAGjBC,QAAAA,gBAAgB,EAAEA,gBAHD;AAIjBH,QAAAA,UAAU,EAAEA;AAJK,OAAb,CAFL,EAQHd,QARG,CAAP;AAUH,KA5CD;;AA8CA,WAAOxG,aAAP;AACH,GAjPsC,CAiPrCnB,KAAK,CAACiJ,SAjP+B,CAAlB,EAiPDhI,MAAM,CAACiI,WAAP,GAAqBxI,YAjPpB,EAiPkCO,MAAM,CAACkI,SAAP,GAAmBvJ,QAAQ,CAAC;AAC/E;AACR;AACA;AACA;AACA;AACA;AACQwG,IAAAA,iBAAiB,EAAEjG,SAAS,CAACiJ,IAPkD;;AAQ/E;AACR;AACA;AACA;AACA;AACA;AACA;AACQ5E,IAAAA,aAAa,EAAErE,SAAS,CAACiJ,IAfsD;;AAgB/E;AACR;AACA;AACQ3C,IAAAA,iBAAiB,EAAEtG,SAAS,CAACkJ,KAnBkD;;AAoB/E;AACR;AACA;AACQnH,IAAAA,WAAW,EAAE/B,SAAS,CAACkJ,KAvBwD;;AAwB/E;AACR;AACA;AACA;AACQjH,IAAAA,kBAAkB,EAAEjC,SAAS,CAACkJ,KA5BiD;;AA6B/E;AACR;AACA;AACQX,IAAAA,kBAAkB,EAAEvI,SAAS,CAACmJ,IAhCiD;;AAiC/E;AACR;AACA;AACQhF,IAAAA,mBAAmB,EAAEnE,SAAS,CAACiJ,IApCgD;;AAqC/E;AACR;AACA;AACA;AACA;AACA;AACA;AACQ3B,IAAAA,SAAS,EAAEtH,SAAS,CAACiJ,IA5C0D;AA6C/EP,IAAAA,kBAAkB,EAAE1I,SAAS,CAACiJ,IA7CiD;AA8C/E7E,IAAAA,MAAM,EAAEpE,SAAS,CAACoJ;AA9C6D,GAAD,EA+C/ExI,aAAa,CAACoI,SA/CiE,CAjP7D,EAgSQlI,MAAM,CAACuI,YAAP,GAAsB5J,QAAQ,CAAC,EAAD,EAAKmB,aAAa,CAACyI,YAAnB,EAAiC;AACxFlF,IAAAA,mBAAmB,EAAEzD,IADmE;AAExF4G,IAAAA,SAAS,EAAE5G,IAF6E;AAGxF6H,IAAAA,kBAAkB,EAAE,IAHoE;AAIxFD,IAAAA,UAAU,EAAE,EAJ4E;AAKxFhC,IAAAA,iBAAiB,EAAEzF,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAAY,CAAC,CAAD,EAAI,CAAJ,CAL+C;AAMxF0B,IAAAA,MAAM,EAAE;AANgF,GAAjC,CAhStC,EAuSjBzB,MAAM,CAACwI,iBAAP,GAA2B;AAC3BvH,IAAAA,WAAW,EAAE/B,SAAS,CAACkJ,KADI;AAE3BjD,IAAAA,iBAAiB,EAAEjG,SAAS,CAACiJ,IAFF;AAG3B/C,IAAAA,qBAAqB,EAAElG,SAAS,CAACmJ,IAHN;AAI3BhD,IAAAA,4BAA4B,EAAEnG,SAAS,CAACmJ,IAJb;AAK3B7C,IAAAA,iBAAiB,EAAEtG,SAAS,CAACkJ,KALF;AAM3B9C,IAAAA,iBAAiB,EAAEpG,SAAS,CAACiJ,IANF;AAO3B5C,IAAAA,yBAAyB,EAAErG,SAAS,CAACiJ;AAPV,GAvSV,EA+SlBlI,MA/Sc,CAAjB;AAgTAC,EAAAA,aAAa,CAACuI,WAAd,GAA4B,eAA5B;AAEA9I,EAAAA,OAAO,CAACO,aAAD,EAAgBJ,aAAhB,CAAP;AACA,SAAOV,QAAQ,CAACc,aAAD,CAAf;AACH","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Children } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport { KEYCODE, dom, events } from '../util';\nimport RowComponent from './expanded/row';\nimport Col from './column';\nimport { statics } from './util';\n\nvar noop = function noop() {};\n\nexport default function expanded(BaseComponent, stickyLock) {\n    var _class, _temp2;\n\n    /** Table */\n    var ExpandedTable = (_temp2 = _class = function (_React$Component) {\n        _inherits(ExpandedTable, _React$Component);\n\n        function ExpandedTable() {\n            var _temp, _this, _ret;\n\n            _classCallCheck(this, ExpandedTable);\n\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n                openRowKeys: _this.props.openRowKeys || _this.props.defaultOpenRowKeys || []\n            }, _this.saveExpandedRowRef = function (key, rowRef) {\n                if (!_this.expandedRowRefs) {\n                    _this.expandedRowRefs = {};\n                }\n                _this.expandedRowRefs[key] = rowRef;\n            }, _this.setExpandedWidth = function () {\n                var prefix = _this.props.prefix;\n\n                var tableEl = _this.getTableNode();\n                var totalWidth = +(tableEl && tableEl.clientWidth) - 1 || '100%';\n                var bodyNode = tableEl && tableEl.querySelector('.' + prefix + 'table-body');\n\n                Object.keys(_this.expandedRowRefs || {}).forEach(function (key) {\n                    dom.setStyle(_this.expandedRowRefs[key], { width: bodyNode && bodyNode.clientWidth || totalWidth });\n                });\n            }, _this.getTableInstance = function (instance) {\n                _this.tableInc = instance;\n            }, _this.expandedKeydown = function (value, record, index, e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                if (e.keyCode === KEYCODE.ENTER) {\n                    _this.onExpandedClick(value, record, index, e);\n                }\n            }, _this.renderExpandedCell = function (value, index, record) {\n                var _classnames;\n\n                var _this$props = _this.props,\n                    getExpandedColProps = _this$props.getExpandedColProps,\n                    prefix = _this$props.prefix,\n                    locale = _this$props.locale,\n                    rowExpandable = _this$props.rowExpandable;\n\n\n                if (typeof rowExpandable === 'function' && !rowExpandable(record, index)) {\n                    return '';\n                }\n\n                var openRowKeys = _this.state.openRowKeys,\n                    primaryKey = _this.props.primaryKey,\n                    hasExpanded = openRowKeys.indexOf(record[primaryKey]) > -1,\n                    switchNode = hasExpanded ? React.createElement(Icon, { type: 'minus', size: 'xs', className: prefix + 'table-expand-unfold' }) : React.createElement(Icon, { type: 'add', size: 'xs', className: prefix + 'table-expand-fold' }),\n                    attrs = getExpandedColProps(record, index) || {};\n\n                var cls = classnames((_classnames = {}, _classnames[prefix + 'table-expanded-ctrl'] = true, _classnames.disabled = attrs.disabled, _classnames[attrs.className] = attrs.className, _classnames));\n\n                if (!attrs.disabled) {\n                    attrs.onClick = _this.onExpandedClick.bind(_this, value, record, index);\n                }\n                return React.createElement(\n                    'span',\n                    _extends({}, attrs, {\n                        role: 'button',\n                        tabIndex: '0',\n                        onKeyDown: _this.expandedKeydown.bind(_this, value, record, index),\n                        'aria-label': hasExpanded ? locale.expanded : locale.folded,\n                        'aria-expanded': hasExpanded,\n                        className: cls\n                    }),\n                    switchNode\n                );\n            }, _this.addExpandCtrl = function (columns) {\n                var _this$props2 = _this.props,\n                    prefix = _this$props2.prefix,\n                    size = _this$props2.size;\n\n\n                if (!columns.find(function (record) {\n                    return record.key === 'expanded';\n                })) {\n                    columns.unshift({\n                        key: 'expanded',\n                        title: '',\n                        cell: _this.renderExpandedCell.bind(_this),\n                        width: size === 'small' ? 34 : 50,\n                        className: prefix + 'table-expanded ' + prefix + 'table-prerow',\n                        __normalized: true\n                    });\n                }\n            }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        ExpandedTable.prototype.getChildContext = function getChildContext() {\n            return {\n                openRowKeys: this.state.openRowKeys,\n                expandedRowRender: this.props.expandedRowRender,\n                expandedIndexSimulate: this.props.expandedIndexSimulate,\n                expandedRowWidthEquals2Table: stickyLock,\n                getExpandedRowRef: this.saveExpandedRowRef,\n                getTableInstanceForExpand: this.getTableInstance,\n                expandedRowIndent: stickyLock ? [0, 0] : this.props.expandedRowIndent\n            };\n        };\n\n        ExpandedTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\n            if ('openRowKeys' in nextProps) {\n                return {\n                    openRowKeys: nextProps.openRowKeys || []\n                };\n            }\n\n            return null;\n        };\n\n        ExpandedTable.prototype.componentDidMount = function componentDidMount() {\n            this.setExpandedWidth();\n            events.on(window, 'resize', this.setExpandedWidth);\n        };\n\n        ExpandedTable.prototype.componentDidUpdate = function componentDidUpdate() {\n            this.setExpandedWidth();\n        };\n\n        ExpandedTable.prototype.componentWillUnmount = function componentWillUnmount() {\n            events.off(window, 'resize', this.setExpandedWidth);\n        };\n\n        ExpandedTable.prototype.getTableNode = function getTableNode() {\n            var table = this.tableInc;\n            try {\n                // in case of finding an unmounted component due to cached data\n                // need to clear refs of table when dataSource Changed\n                // use try catch for temporary\n                return findDOMNode(table.tableEl);\n            } catch (error) {\n                return null;\n            }\n        };\n\n        ExpandedTable.prototype.onExpandedClick = function onExpandedClick(value, record, i, e) {\n            var openRowKeys = [].concat(this.state.openRowKeys),\n                primaryKey = this.props.primaryKey,\n                id = record[primaryKey],\n                index = openRowKeys.indexOf(id);\n\n            if (index > -1) {\n                openRowKeys.splice(index, 1);\n            } else {\n                openRowKeys.push(id);\n            }\n            if (!('openRowKeys' in this.props)) {\n                this.setState({\n                    openRowKeys: openRowKeys\n                });\n            }\n            this.props.onRowOpen(openRowKeys, id, index === -1, record);\n            e.stopPropagation();\n        };\n\n        ExpandedTable.prototype.normalizeChildren = function normalizeChildren(children) {\n            var _props = this.props,\n                prefix = _props.prefix,\n                size = _props.size;\n\n            var toArrayChildren = Children.map(children, function (child, index) {\n                return React.cloneElement(child, {\n                    key: index\n                });\n            });\n            toArrayChildren.unshift(React.createElement(Col, {\n                title: '',\n                key: 'expanded',\n                cell: this.renderExpandedCell.bind(this),\n                width: size === 'small' ? 34 : 50,\n                className: prefix + 'table-expanded ' + prefix + 'table-prerow',\n                __normalized: true\n            }));\n            return toArrayChildren;\n        };\n\n        ExpandedTable.prototype.normalizeDataSource = function normalizeDataSource(ds) {\n            var ret = [];\n            ds.forEach(function (item) {\n                var itemCopy = _extends({}, item);\n                itemCopy.__expanded = true;\n                ret.push(item, itemCopy);\n            });\n            return ret;\n        };\n\n        ExpandedTable.prototype.render = function render() {\n            /* eslint-disable no-unused-vars, prefer-const */\n            var _props2 = this.props,\n                components = _props2.components,\n                openRowKeys = _props2.openRowKeys,\n                expandedRowRender = _props2.expandedRowRender,\n                rowExpandable = _props2.rowExpandable,\n                hasExpandedRowCtrl = _props2.hasExpandedRowCtrl,\n                children = _props2.children,\n                columns = _props2.columns,\n                dataSource = _props2.dataSource,\n                entireDataSource = _props2.entireDataSource,\n                getExpandedColProps = _props2.getExpandedColProps,\n                expandedRowIndent = _props2.expandedRowIndent,\n                onRowOpen = _props2.onRowOpen,\n                onExpandedRowClick = _props2.onExpandedRowClick,\n                others = _objectWithoutProperties(_props2, ['components', 'openRowKeys', 'expandedRowRender', 'rowExpandable', 'hasExpandedRowCtrl', 'children', 'columns', 'dataSource', 'entireDataSource', 'getExpandedColProps', 'expandedRowIndent', 'onRowOpen', 'onExpandedRowClick']);\n\n            if (expandedRowRender && !components.Row) {\n                components = _extends({}, components);\n                components.Row = RowComponent;\n                dataSource = this.normalizeDataSource(dataSource);\n                entireDataSource = this.normalizeDataSource(entireDataSource);\n            }\n            if (expandedRowRender && hasExpandedRowCtrl) {\n                var useColumns = columns && !children;\n\n                if (useColumns) {\n                    this.addExpandCtrl(columns);\n                } else {\n                    children = this.normalizeChildren(children || []);\n                }\n            }\n\n            return React.createElement(\n                BaseComponent,\n                _extends({}, others, {\n                    columns: columns,\n                    dataSource: dataSource,\n                    entireDataSource: entireDataSource,\n                    components: components\n                }),\n                children\n            );\n        };\n\n        return ExpandedTable;\n    }(React.Component), _class.ExpandedRow = RowComponent, _class.propTypes = _extends({\n        /**\n         * 额外渲染行的渲染函数\n         * @param {Object} record 该行所对应的数据\n         * @param {Number} index 该行所对应的序列\n         * @returns {Element}\n         */\n        expandedRowRender: PropTypes.func,\n        /**\n         * 设置行是否可展开，设置 false 为不可展开\n         * @param {Object} record 该行所对应的数据\n         * @param {Number} index 该行所对应的序列\n         * @returns {Boolean} 是否可展开\n         * @version 1.21\n         */\n        rowExpandable: PropTypes.func,\n        /**\n         * 额外渲染行的缩进\n         */\n        expandedRowIndent: PropTypes.array,\n        /**\n         * 默认情况下展开的渲染行或者Tree, 传入此属性为受控状态\n         */\n        openRowKeys: PropTypes.array,\n        /**\n         * 默认情况下展开的 Expand行 或者 Tree行，非受控模式\n         * @version 1.23.22\n         */\n        defaultOpenRowKeys: PropTypes.array,\n        /**\n         * 是否显示点击展开额外渲染行的+号按钮\n         */\n        hasExpandedRowCtrl: PropTypes.bool,\n        /**\n         * 设置额外渲染行的属性\n         */\n        getExpandedColProps: PropTypes.func,\n        /**\n         * 在额外渲染行或者Tree展开或者收起的时候触发的事件\n         * @param {Array} openRowKeys 展开的渲染行的key\n         * @param {String} currentRowKey 当前点击的渲染行的key\n         * @param {Boolean} expanded 当前点击是展开还是收起\n         * @param {Object} currentRecord 当前点击额外渲染行的记录\n         */\n        onRowOpen: PropTypes.func,\n        onExpandedRowClick: PropTypes.func,\n        locale: PropTypes.object\n    }, BaseComponent.propTypes), _class.defaultProps = _extends({}, BaseComponent.defaultProps, {\n        getExpandedColProps: noop,\n        onRowOpen: noop,\n        hasExpandedRowCtrl: true,\n        components: {},\n        expandedRowIndent: stickyLock ? [0, 0] : [1, 0],\n        prefix: 'next-'\n    }), _class.childContextTypes = {\n        openRowKeys: PropTypes.array,\n        expandedRowRender: PropTypes.func,\n        expandedIndexSimulate: PropTypes.bool,\n        expandedRowWidthEquals2Table: PropTypes.bool,\n        expandedRowIndent: PropTypes.array,\n        getExpandedRowRef: PropTypes.func,\n        getTableInstanceForExpand: PropTypes.func\n    }, _temp2);\n    ExpandedTable.displayName = 'ExpandedTable';\n\n    statics(ExpandedTable, BaseComponent);\n    return polyfill(ExpandedTable);\n}"]},"metadata":{},"sourceType":"module"}