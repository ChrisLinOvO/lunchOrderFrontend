{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ConfigProvider from '../config-provider';\n/**\n * Card.Divider\n * @order 4\n */\n\nvar CardDivider = (_temp = _class = function (_Component) {\n  _inherits(CardDivider, _Component);\n\n  function CardDivider() {\n    _classCallCheck(this, CardDivider);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  CardDivider.prototype.render = function render() {\n    var _classNames;\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        Component = _props.component,\n        inset = _props.inset,\n        className = _props.className,\n        others = _objectWithoutProperties(_props, ['prefix', 'component', 'inset', 'className']);\n\n    var dividerClassName = classNames(prefix + 'card-divider', (_classNames = {}, _classNames[prefix + 'card-divider--inset'] = inset, _classNames), className);\n    return React.createElement(Component, _extends({}, others, {\n      className: dividerClassName\n    }));\n  };\n\n  return CardDivider;\n}(Component), _class.propTypes = {\n  prefix: PropTypes.string,\n\n  /**\n   * 设置标签类型\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * 分割线是否向内缩进\n   */\n  inset: PropTypes.bool,\n  className: PropTypes.string\n}, _class.defaultProps = {\n  prefix: 'next-',\n  component: 'hr'\n}, _temp);\nCardDivider.displayName = 'CardDivider';\nexport default ConfigProvider.config(CardDivider);","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/card/divider.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","_class","_temp","React","Component","PropTypes","classNames","ConfigProvider","CardDivider","_Component","apply","arguments","prototype","render","_classNames","_props","props","prefix","component","inset","className","others","dividerClassName","createElement","propTypes","string","elementType","bool","defaultProps","displayName","config"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,wBAAP,MAAqC,+CAArC;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;AAEA,IAAIC,MAAJ,EAAYC,KAAZ;;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,IAAIN,KAAK,GAAGD,MAAM,GAAG,UAAUQ,UAAV,EAAsB;AACtDT,EAAAA,SAAS,CAACQ,WAAD,EAAcC,UAAd,CAAT;;AAEA,WAASD,WAAT,GAAuB;AACnBV,IAAAA,eAAe,CAAC,IAAD,EAAOU,WAAP,CAAf;;AAEA,WAAOT,0BAA0B,CAAC,IAAD,EAAOU,UAAU,CAACC,KAAX,CAAiB,IAAjB,EAAuBC,SAAvB,CAAP,CAAjC;AACH;;AAEDH,EAAAA,WAAW,CAACI,SAAZ,CAAsBC,MAAtB,GAA+B,SAASA,MAAT,GAAkB;AAC7C,QAAIC,WAAJ;;AAEA,QAAIC,MAAM,GAAG,KAAKC,KAAlB;AAAA,QACIC,MAAM,GAAGF,MAAM,CAACE,MADpB;AAAA,QAEIb,SAAS,GAAGW,MAAM,CAACG,SAFvB;AAAA,QAGIC,KAAK,GAAGJ,MAAM,CAACI,KAHnB;AAAA,QAIIC,SAAS,GAAGL,MAAM,CAACK,SAJvB;AAAA,QAKIC,MAAM,GAAGxB,wBAAwB,CAACkB,MAAD,EAAS,CAAC,QAAD,EAAW,WAAX,EAAwB,OAAxB,EAAiC,WAAjC,CAAT,CALrC;;AAOA,QAAIO,gBAAgB,GAAGhB,UAAU,CAACW,MAAM,GAAG,cAAV,GAA2BH,WAAW,GAAG,EAAd,EAAkBA,WAAW,CAACG,MAAM,GAAG,qBAAV,CAAX,GAA8CE,KAAhE,EAAuEL,WAAlG,GAAgHM,SAAhH,CAAjC;AAEA,WAAOjB,KAAK,CAACoB,aAAN,CAAoBnB,SAApB,EAA+BR,QAAQ,CAAC,EAAD,EAAKyB,MAAL,EAAa;AAAED,MAAAA,SAAS,EAAEE;AAAb,KAAb,CAAvC,CAAP;AACH,GAbD;;AAeA,SAAOd,WAAP;AACH,CAzBmC,CAyBlCJ,SAzBkC,CAAjB,EAyBLH,MAAM,CAACuB,SAAP,GAAmB;AAC7BP,EAAAA,MAAM,EAAEZ,SAAS,CAACoB,MADW;;AAE7B;AACJ;AACA;AACIP,EAAAA,SAAS,EAAEb,SAAS,CAACqB,WALQ;;AAM7B;AACJ;AACA;AACIP,EAAAA,KAAK,EAAEd,SAAS,CAACsB,IATY;AAU7BP,EAAAA,SAAS,EAAEf,SAAS,CAACoB;AAVQ,CAzBd,EAoChBxB,MAAM,CAAC2B,YAAP,GAAsB;AACrBX,EAAAA,MAAM,EAAE,OADa;AAErBC,EAAAA,SAAS,EAAE;AAFU,CApCN,EAuChBhB,KAvCY,CAAf;AAwCAM,WAAW,CAACqB,WAAZ,GAA0B,aAA1B;AAGA,eAAetB,cAAc,CAACuB,MAAf,CAAsBtB,WAAtB,CAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ConfigProvider from '../config-provider';\n\n/**\n * Card.Divider\n * @order 4\n */\nvar CardDivider = (_temp = _class = function (_Component) {\n    _inherits(CardDivider, _Component);\n\n    function CardDivider() {\n        _classCallCheck(this, CardDivider);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n    }\n\n    CardDivider.prototype.render = function render() {\n        var _classNames;\n\n        var _props = this.props,\n            prefix = _props.prefix,\n            Component = _props.component,\n            inset = _props.inset,\n            className = _props.className,\n            others = _objectWithoutProperties(_props, ['prefix', 'component', 'inset', 'className']);\n\n        var dividerClassName = classNames(prefix + 'card-divider', (_classNames = {}, _classNames[prefix + 'card-divider--inset'] = inset, _classNames), className);\n\n        return React.createElement(Component, _extends({}, others, { className: dividerClassName }));\n    };\n\n    return CardDivider;\n}(Component), _class.propTypes = {\n    prefix: PropTypes.string,\n    /**\n     * 设置标签类型\n     */\n    component: PropTypes.elementType,\n    /**\n     * 分割线是否向内缩进\n     */\n    inset: PropTypes.bool,\n    className: PropTypes.string\n}, _class.defaultProps = {\n    prefix: 'next-',\n    component: 'hr'\n}, _temp);\nCardDivider.displayName = 'CardDivider';\n\n\nexport default ConfigProvider.config(CardDivider);"]},"metadata":{},"sourceType":"module"}