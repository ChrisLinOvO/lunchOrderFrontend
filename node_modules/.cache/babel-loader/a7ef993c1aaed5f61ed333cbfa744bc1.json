{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateFunc = validateFunc;\nexports.getValidationMethod = getValidationMethod;\n\nvar _rules = _interopRequireDefault(require(\"./rules/\"));\n/* eslint-disable callback-return */\n\n/**\n * {required, format} => format; {required} => required\n * If a promise is wanted from the validator, either return a promise from the callback,\n *      or do not pass a callback\n *\n * @param  {function} validator [description]\n * @param  {string} ruleType  [description]\n * @return {function}           [description]\n */\n\n\nfunction validateFunc(validator, ruleType) {\n  return function (rule, value, cb, options) {\n    var errors = []; // 如果是非required校验\n\n    if (ruleType !== 'required') {\n      var _errors = [];\n\n      _rules.default.required(rule, value, _errors, options); // 空数据\n\n\n      if (_errors.length > 0) {\n        if ('required' in rule && rule.required) {\n          if (cb) {\n            return cb(_errors);\n          } else {\n            return Promise.reject(_errors);\n          }\n        } else if (cb) {\n          return cb([]); //空数据，并且没有require要求，则忽略\n        } else {\n          return Promise.resolve(null);\n        }\n      }\n    }\n\n    validator(rule, value, errors, options);\n\n    if (cb) {\n      return cb(errors);\n    }\n\n    if (Promise) {\n      return Promise.resolve(errors);\n    }\n  };\n}\n/**\n * {required, format} => format; {required} => required\n * @param  {object} rule [description]\n * @return {function}      [description]\n */\n\n\nfunction getValidationMethod(rule) {\n  if (typeof rule.validator === 'function') {\n    return rule.validator;\n  }\n\n  var keys = Object.keys(rule); //required和其他校验规则共存\n  //{required, format} {required, unknown}\n\n  for (var i = 0; i < keys.length; i++) {\n    var ruleType = keys[i];\n\n    if (ruleType === 'required') {\n      continue;\n    }\n\n    if (ruleType in _rules.default) {\n      return validateFunc(_rules.default[ruleType], ruleType);\n    }\n  } // 有其他位置参数\n\n\n  if ('required' in rule && rule.required) {\n    return validateFunc(_rules.default.required, 'required');\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/validate/lib/validator.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","validateFunc","getValidationMethod","_rules","validator","ruleType","rule","cb","options","errors","_errors","default","required","length","Promise","reject","resolve","keys","i"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AACAF,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;;AAEA,IAAIC,MAAM,GAAGR,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAAnC;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,YAAT,CAAsBG,SAAtB,EAAiCC,QAAjC,EAA2C;AACzC,SAAO,UAAUC,IAAV,EAAgBN,KAAhB,EAAuBO,EAAvB,EAA2BC,OAA3B,EAAoC;AACzC,QAAIC,MAAM,GAAG,EAAb,CADyC,CACxB;;AAEjB,QAAIJ,QAAQ,KAAK,UAAjB,EAA6B;AAC3B,UAAIK,OAAO,GAAG,EAAd;;AAEAP,MAAAA,MAAM,CAACQ,OAAP,CAAeC,QAAf,CAAwBN,IAAxB,EAA8BN,KAA9B,EAAqCU,OAArC,EAA8CF,OAA9C,EAH2B,CAG6B;;;AAGxD,UAAIE,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACtB,YAAI,cAAcP,IAAd,IAAsBA,IAAI,CAACM,QAA/B,EAAyC;AACvC,cAAIL,EAAJ,EAAQ;AACN,mBAAOA,EAAE,CAACG,OAAD,CAAT;AACD,WAFD,MAEO;AACL,mBAAOI,OAAO,CAACC,MAAR,CAAeL,OAAf,CAAP;AACD;AACF,SAND,MAMO,IAAIH,EAAJ,EAAQ;AACb,iBAAOA,EAAE,CAAC,EAAD,CAAT,CADa,CACE;AAChB,SAFM,MAEA;AACL,iBAAOO,OAAO,CAACE,OAAR,CAAgB,IAAhB,CAAP;AACD;AACF;AACF;;AAEDZ,IAAAA,SAAS,CAACE,IAAD,EAAON,KAAP,EAAcS,MAAd,EAAsBD,OAAtB,CAAT;;AAEA,QAAID,EAAJ,EAAQ;AACN,aAAOA,EAAE,CAACE,MAAD,CAAT;AACD;;AAED,QAAIK,OAAJ,EAAa;AACX,aAAOA,OAAO,CAACE,OAAR,CAAgBP,MAAhB,CAAP;AACD;AACF,GAjCD;AAkCD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASP,mBAAT,CAA6BI,IAA7B,EAAmC;AACjC,MAAI,OAAOA,IAAI,CAACF,SAAZ,KAA0B,UAA9B,EAA0C;AACxC,WAAOE,IAAI,CAACF,SAAZ;AACD;;AAED,MAAIa,IAAI,GAAGpB,MAAM,CAACoB,IAAP,CAAYX,IAAZ,CAAX,CALiC,CAKH;AAC9B;;AAEA,OAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACJ,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AACpC,QAAIb,QAAQ,GAAGY,IAAI,CAACC,CAAD,CAAnB;;AAEA,QAAIb,QAAQ,KAAK,UAAjB,EAA6B;AAC3B;AACD;;AAED,QAAIA,QAAQ,IAAIF,MAAM,CAACQ,OAAvB,EAAgC;AAC9B,aAAOV,YAAY,CAACE,MAAM,CAACQ,OAAP,CAAeN,QAAf,CAAD,EAA2BA,QAA3B,CAAnB;AACD;AACF,GAlBgC,CAkB/B;;;AAGF,MAAI,cAAcC,IAAd,IAAsBA,IAAI,CAACM,QAA/B,EAAyC;AACvC,WAAOX,YAAY,CAACE,MAAM,CAACQ,OAAP,CAAeC,QAAhB,EAA0B,UAA1B,CAAnB;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateFunc = validateFunc;\nexports.getValidationMethod = getValidationMethod;\n\nvar _rules = _interopRequireDefault(require(\"./rules/\"));\n\n/* eslint-disable callback-return */\n\n/**\n * {required, format} => format; {required} => required\n * If a promise is wanted from the validator, either return a promise from the callback,\n *      or do not pass a callback\n *\n * @param  {function} validator [description]\n * @param  {string} ruleType  [description]\n * @return {function}           [description]\n */\nfunction validateFunc(validator, ruleType) {\n  return function (rule, value, cb, options) {\n    var errors = []; // 如果是非required校验\n\n    if (ruleType !== 'required') {\n      var _errors = [];\n\n      _rules.default.required(rule, value, _errors, options); // 空数据\n\n\n      if (_errors.length > 0) {\n        if ('required' in rule && rule.required) {\n          if (cb) {\n            return cb(_errors);\n          } else {\n            return Promise.reject(_errors);\n          }\n        } else if (cb) {\n          return cb([]); //空数据，并且没有require要求，则忽略\n        } else {\n          return Promise.resolve(null);\n        }\n      }\n    }\n\n    validator(rule, value, errors, options);\n\n    if (cb) {\n      return cb(errors);\n    }\n\n    if (Promise) {\n      return Promise.resolve(errors);\n    }\n  };\n}\n/**\n * {required, format} => format; {required} => required\n * @param  {object} rule [description]\n * @return {function}      [description]\n */\n\n\nfunction getValidationMethod(rule) {\n  if (typeof rule.validator === 'function') {\n    return rule.validator;\n  }\n\n  var keys = Object.keys(rule); //required和其他校验规则共存\n  //{required, format} {required, unknown}\n\n  for (var i = 0; i < keys.length; i++) {\n    var ruleType = keys[i];\n\n    if (ruleType === 'required') {\n      continue;\n    }\n\n    if (ruleType in _rules.default) {\n      return validateFunc(_rules.default[ruleType], ruleType);\n    }\n  } // 有其他位置参数\n\n\n  if ('required' in rule && rule.required) {\n    return validateFunc(_rules.default.required, 'required');\n  }\n\n  return null;\n}"]},"metadata":{},"sourceType":"script"}