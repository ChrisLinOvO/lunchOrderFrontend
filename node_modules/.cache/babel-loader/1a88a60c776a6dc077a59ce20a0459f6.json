{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n/**\n *  Rule for validating a regular expression pattern.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction pattern(rule, value, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      if (!rule.pattern.test(value)) {\n        errors.push(util.format(options.messages.pattern, rule.aliasName || rule.field, value, rule.pattern));\n      }\n    } else if (typeof rule.pattern === 'string') {\n      var _pattern = new RegExp(rule.pattern);\n\n      if (!_pattern.test(value)) {\n        errors.push(util.format(options.messages.pattern, rule.aliasName || rule.field, value, rule.pattern));\n      }\n    }\n  }\n}\n\nvar _default = pattern;\nexports.default = _default;","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/validate/lib/rules/pattern.js"],"names":["_interopRequireWildcard","require","Object","defineProperty","exports","value","default","util","pattern","rule","errors","options","RegExp","test","push","format","messages","aliasName","field","_pattern","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,IAAI,GAAGP,uBAAuB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,OAAT,CAAiBC,IAAjB,EAAuBJ,KAAvB,EAA8BK,MAA9B,EAAsCC,OAAtC,EAA+C;AAC7C,MAAIF,IAAI,CAACD,OAAT,EAAkB;AAChB,QAAIC,IAAI,CAACD,OAAL,YAAwBI,MAA5B,EAAoC;AAClC,UAAI,CAACH,IAAI,CAACD,OAAL,CAAaK,IAAb,CAAkBR,KAAlB,CAAL,EAA+B;AAC7BK,QAAAA,MAAM,CAACI,IAAP,CAAYP,IAAI,CAACQ,MAAL,CAAYJ,OAAO,CAACK,QAAR,CAAiBR,OAA7B,EAAsCC,IAAI,CAACQ,SAAL,IAAkBR,IAAI,CAACS,KAA7D,EAAoEb,KAApE,EAA2EI,IAAI,CAACD,OAAhF,CAAZ;AACD;AACF,KAJD,MAIO,IAAI,OAAOC,IAAI,CAACD,OAAZ,KAAwB,QAA5B,EAAsC;AAC3C,UAAIW,QAAQ,GAAG,IAAIP,MAAJ,CAAWH,IAAI,CAACD,OAAhB,CAAf;;AAEA,UAAI,CAACW,QAAQ,CAACN,IAAT,CAAcR,KAAd,CAAL,EAA2B;AACzBK,QAAAA,MAAM,CAACI,IAAP,CAAYP,IAAI,CAACQ,MAAL,CAAYJ,OAAO,CAACK,QAAR,CAAiBR,OAA7B,EAAsCC,IAAI,CAACQ,SAAL,IAAkBR,IAAI,CAACS,KAA7D,EAAoEb,KAApE,EAA2EI,IAAI,CAACD,OAAhF,CAAZ;AACD;AACF;AACF;AACF;;AAED,IAAIY,QAAQ,GAAGZ,OAAf;AACAJ,OAAO,CAACE,OAAR,GAAkBc,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n\n/**\n *  Rule for validating a regular expression pattern.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction pattern(rule, value, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      if (!rule.pattern.test(value)) {\n        errors.push(util.format(options.messages.pattern, rule.aliasName || rule.field, value, rule.pattern));\n      }\n    } else if (typeof rule.pattern === 'string') {\n      var _pattern = new RegExp(rule.pattern);\n\n      if (!_pattern.test(value)) {\n        errors.push(util.format(options.messages.pattern, rule.aliasName || rule.field, value, rule.pattern));\n      }\n    }\n  }\n}\n\nvar _default = pattern;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}