{"ast":null,"code":"import moment from 'moment'; // 检查传入值是否为 moment 对象\n\nexport function checkMomentObj(props, propName, componentName) {\n  if (props[propName] && !moment.isMoment(props[propName])) {\n    return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object');\n  }\n} // 检查传入值是否为 moment 对象或时间字符串，字符串不检测是否为日期字符串\n\nexport function checkDateValue(props, propName, componentName) {\n  if (props[propName] && !moment.isMoment(props[propName]) && typeof props[propName] !== 'string') {\n    return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object or format date string!');\n  }\n}\nexport function formatDateValue(value, format) {\n  var val = typeof value === 'string' ? moment(value, format, true) : value;\n\n  if (val && moment.isMoment(val) && val.isValid()) {\n    return val;\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/time-picker/utils/index.js"],"names":["moment","checkMomentObj","props","propName","componentName","isMoment","Error","checkDateValue","formatDateValue","value","format","val","isValid"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,aAAzC,EAAwD;AAC3D,MAAIF,KAAK,CAACC,QAAD,CAAL,IAAmB,CAACH,MAAM,CAACK,QAAP,CAAgBH,KAAK,CAACC,QAAD,CAArB,CAAxB,EAA0D;AACtD,WAAO,IAAIG,KAAJ,CAAU,kBAAkBH,QAAlB,GAA6B,eAA7B,GAA+CC,aAA/C,GAA+D,4BAAzE,CAAP;AACH;AACJ,C,CAED;;AACA,OAAO,SAASG,cAAT,CAAwBL,KAAxB,EAA+BC,QAA/B,EAAyCC,aAAzC,EAAwD;AAC3D,MAAIF,KAAK,CAACC,QAAD,CAAL,IAAmB,CAACH,MAAM,CAACK,QAAP,CAAgBH,KAAK,CAACC,QAAD,CAArB,CAApB,IAAwD,OAAOD,KAAK,CAACC,QAAD,CAAZ,KAA2B,QAAvF,EAAiG;AAC7F,WAAO,IAAIG,KAAJ,CAAU,kBAAkBH,QAAlB,GAA6B,eAA7B,GAA+CC,aAA/C,GAA+D,mDAAzE,CAAP;AACH;AACJ;AAED,OAAO,SAASI,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AAC3C,MAAIC,GAAG,GAAG,OAAOF,KAAP,KAAiB,QAAjB,GAA4BT,MAAM,CAACS,KAAD,EAAQC,MAAR,EAAgB,IAAhB,CAAlC,GAA0DD,KAApE;;AACA,MAAIE,GAAG,IAAIX,MAAM,CAACK,QAAP,CAAgBM,GAAhB,CAAP,IAA+BA,GAAG,CAACC,OAAJ,EAAnC,EAAkD;AAC9C,WAAOD,GAAP;AACH;;AACD,SAAO,IAAP;AACH","sourcesContent":["import moment from 'moment';\n\n// 检查传入值是否为 moment 对象\nexport function checkMomentObj(props, propName, componentName) {\n    if (props[propName] && !moment.isMoment(props[propName])) {\n        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object');\n    }\n}\n\n// 检查传入值是否为 moment 对象或时间字符串，字符串不检测是否为日期字符串\nexport function checkDateValue(props, propName, componentName) {\n    if (props[propName] && !moment.isMoment(props[propName]) && typeof props[propName] !== 'string') {\n        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object or format date string!');\n    }\n}\n\nexport function formatDateValue(value, format) {\n    var val = typeof value === 'string' ? moment(value, format, true) : value;\n    if (val && moment.isMoment(val) && val.isValid()) {\n        return val;\n    }\n    return null;\n}"]},"metadata":{},"sourceType":"module"}