{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport ConfigProvider from '../config-provider';\nimport { preFormatDateValue } from './utils';\nimport Calendar from './calendar';\nimport RangeCalendar from './range-calendar';\n/* istanbul ignore next */\n\nvar transform = function transform(props, deprecated) {\n  var type = props.type,\n      onChange = props.onChange,\n      base = props.base,\n      disabledMonth = props.disabledMonth,\n      disabledYear = props.disabledYear,\n      others = _objectWithoutProperties(props, ['type', 'onChange', 'base', 'disabledMonth', 'disabledYear']);\n\n  var newProps = others;\n\n  if ('type' in props) {\n    deprecated('type', 'shape', 'Calendar');\n    newProps.shape = type;\n\n    if ('shape' in props) {\n      newProps.shape = props.shape;\n    }\n  }\n\n  if ('base' in props) {\n    deprecated('base', 'defaultVisibleMonth', 'Calendar');\n\n    var newDefaultVisibleMonth = function newDefaultVisibleMonth() {\n      preFormatDateValue(base, 'YYYY-MM-DD');\n    };\n\n    if ('defaultVisibleMonth' in props) {\n      newDefaultVisibleMonth = props.defaultVisibleMonth;\n    }\n\n    newProps.defaultVisibleMonth = newDefaultVisibleMonth;\n  }\n\n  if ('onChange' in props && typeof onChange === 'function') {\n    deprecated('onChange', 'onSelect', 'Calendar');\n\n    var newOnSelect = function newOnSelect(date) {\n      onChange({\n        mode: others.mode,\n        value: date\n      });\n\n      if ('onSelect' in props) {\n        props.onSelect(date);\n      }\n    };\n\n    newProps.onSelect = newOnSelect;\n  }\n\n  if ('disabledMonth' in props && typeof disabledMonth === 'function') {\n    deprecated('disabledMonth', 'disabledDate', 'Calendar');\n  }\n\n  if ('disabledYear' in props && typeof disabledYear === 'function') {\n    deprecated('disabledYear', 'disabledDate', 'Calendar');\n  }\n\n  if ('yearCellRender' in props && typeof yearCellRender === 'function') {\n    deprecated('yearCellRender', 'monthCellRender/dateCellRender', 'Calendar');\n  }\n\n  if ('language' in props) {\n    deprecated('language', 'moment.locale', 'Calendar');\n  }\n\n  return newProps;\n};\n\nCalendar.RangeCalendar = RangeCalendar;\nexport default ConfigProvider.config(Calendar, {\n  transform: transform\n});","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/calendar/index.js"],"names":["_objectWithoutProperties","ConfigProvider","preFormatDateValue","Calendar","RangeCalendar","transform","props","deprecated","type","onChange","base","disabledMonth","disabledYear","others","newProps","shape","newDefaultVisibleMonth","defaultVisibleMonth","newOnSelect","date","mode","value","onSelect","yearCellRender","config"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport ConfigProvider from '../config-provider';\nimport { preFormatDateValue } from './utils';\nimport Calendar from './calendar';\nimport RangeCalendar from './range-calendar';\n\n/* istanbul ignore next */\nvar transform = function transform(props, deprecated) {\n    var type = props.type,\n        onChange = props.onChange,\n        base = props.base,\n        disabledMonth = props.disabledMonth,\n        disabledYear = props.disabledYear,\n        others = _objectWithoutProperties(props, ['type', 'onChange', 'base', 'disabledMonth', 'disabledYear']);\n\n    var newProps = others;\n\n    if ('type' in props) {\n        deprecated('type', 'shape', 'Calendar');\n\n        newProps.shape = type;\n\n        if ('shape' in props) {\n            newProps.shape = props.shape;\n        }\n    }\n\n    if ('base' in props) {\n        deprecated('base', 'defaultVisibleMonth', 'Calendar');\n\n        var newDefaultVisibleMonth = function newDefaultVisibleMonth() {\n            preFormatDateValue(base, 'YYYY-MM-DD');\n        };\n\n        if ('defaultVisibleMonth' in props) {\n            newDefaultVisibleMonth = props.defaultVisibleMonth;\n        }\n\n        newProps.defaultVisibleMonth = newDefaultVisibleMonth;\n    }\n\n    if ('onChange' in props && typeof onChange === 'function') {\n        deprecated('onChange', 'onSelect', 'Calendar');\n\n        var newOnSelect = function newOnSelect(date) {\n            onChange({ mode: others.mode, value: date });\n\n            if ('onSelect' in props) {\n                props.onSelect(date);\n            }\n        };\n\n        newProps.onSelect = newOnSelect;\n    }\n\n    if ('disabledMonth' in props && typeof disabledMonth === 'function') {\n        deprecated('disabledMonth', 'disabledDate', 'Calendar');\n    }\n\n    if ('disabledYear' in props && typeof disabledYear === 'function') {\n        deprecated('disabledYear', 'disabledDate', 'Calendar');\n    }\n\n    if ('yearCellRender' in props && typeof yearCellRender === 'function') {\n        deprecated('yearCellRender', 'monthCellRender/dateCellRender', 'Calendar');\n    }\n\n    if ('language' in props) {\n        deprecated('language', 'moment.locale', 'Calendar');\n    }\n\n    return newProps;\n};\n\nCalendar.RangeCalendar = RangeCalendar;\nexport default ConfigProvider.config(Calendar, {\n    transform: transform\n});"]},"metadata":{},"sourceType":"module"}