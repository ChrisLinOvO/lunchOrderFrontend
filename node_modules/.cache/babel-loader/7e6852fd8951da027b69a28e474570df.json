{"ast":null,"code":"import _Card from \"@alifd/next/es/card\";\nimport _Pagination from \"@alifd/next/es/pagination\";\nimport _Table from \"@alifd/next/es/table\";\nimport _Button from \"@alifd/next/es/button\";\nimport _Dialog from \"@alifd/next/es/dialog\";\nimport _DatePicker from \"@alifd/next/es/date-picker\";\nimport _Input from \"@alifd/next/es/input\";\nimport _Message from \"@alifd/next/es/message\";\nimport _Form from \"@alifd/next/es/form\";\nimport _Select from \"@alifd/next/es/select\";\n\nvar _jsxFileName = \"/Users/Chris/Project/lunch-order-backstage/src/components/OrderTable/OrderTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\nimport Swal from 'sweetalert2';\nimport client from '../../lib/feathers';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Option = _Select.Option;\nconst {\n  Item\n} = _Form;\n\nconst OrderTable = props => {\n  _s();\n\n  const {\n    dbName,\n    keys,\n    text\n  } = props.tarProps;\n  const dbService = client.service(`${dbName}`); // const [listData, setListData] = useState([]);\n  // const [listDataAll, setListDataAll] = useState([]);\n\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\"); //uploads files\n\n  const [parsed, setParsed] = useState([]);\n  const [parsed64, setParsed64] = useState([]); //Base64\n\n  const [file, setFile] = useState(\"\");\n  const uploadFile = useRef(null);\n  const uploadExcelFile = useRef(null); // sort\n\n  const [curdataIndex, setcurDataIndex] = useState('createTime');\n  const [curorder, setcurOrder] = useState('asc'); // change page\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.listData.slice(indexOfFirstPost, indexOfLastPost); // dbService\n\n  async function funFind(para) {\n    const result = await dbService.find({\n      query: para\n    }); // console.log(result);\n\n    return result && result.data ? result.data : [];\n  }\n\n  async function funCreate(obj) {\n    return await dbService.create(obj);\n  }\n\n  async function funUpdate(id, obj) {\n    return await dbService.patch(id, obj);\n  }\n\n  async function funRemove(id) {\n    return await dbService.remove(id);\n  }\n\n  const serverDataUpdate = (dataIndex, order) => {\n    const rdataIndex = dataIndex || curdataIndex;\n    const rorder = order || curorder;\n    funFind({}).then(result => {\n      const sortedArr = result.sort((a, b) => {\n        const result = (typeof a[rdataIndex] === 'number' ? a[rdataIndex].toString() : a[rdataIndex]).localeCompare(typeof b[rdataIndex] === 'number' ? b[rdataIndex].toString() : b[rdataIndex]);\n        return rorder === 'asc' ? result > 0 ? 1 : -1 : result > 0 ? -1 : 1;\n      });\n      props.listDataProps(sortedArr);\n      props.listDataAllProps(sortedArr);\n    });\n  };\n\n  const onTableSort = (dataIndex, order) => {\n    console.log('==dataIndex:', dataIndex, 'order:', order);\n    setcurDataIndex(dataIndex);\n    setcurOrder(order);\n    serverDataUpdate(dataIndex, order);\n  };\n\n  useEffect(() => {\n    serverDataUpdate();\n  }, []);\n\n  function beforeUpload() {\n    return new Promise(async (resolve, reject) => {\n      if (uploadFile.current.files.length > 0) {\n        const isLt20M = (await uploadFile.current.files[0].size) / 1024 / 1024 < 20;\n\n        if (!isLt20M) {\n          _Message.error('Image must smaller than 20MB!');\n\n          return reject();\n        }\n\n        resolve(isLt20M);\n      } else {\n        setParsed64('');\n      }\n    });\n  }\n\n  const handleFiles = async () => {\n    try {\n      await beforeUpload();\n      const files = [...parsed];\n      const data = await uploadFile.current.files[0]; // console.log(data)\n\n      files.push(data);\n      setParsed(files); //轉Base64 上傳檔案後呈現沒有寫到DB\n\n      const reader = new FileReader();\n\n      reader.onload = function () {\n        let dataURL = reader.result;\n        setParsed64(dataURL);\n      };\n\n      reader.readAsDataURL(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n    let obj = {};\n    obj[key] = value;\n    setWriteData({ ...writeData,\n      ...obj\n    });\n  };\n\n  const createSend = () => {\n    //-------Create Data 送出\n    if (editKey == true) {\n      //Check is edit state\n      Swal.fire({\n        title: `確定修改此資料?`,\n        text: '請確認修改資料!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消'\n      }).then(result => {\n        if (result.isConfirmed) {\n          const data = currentPosts[editIndex];\n          let newObj = { ...data,\n            ...writeData\n          }; // updatedTime: new Date().toLocaleString()\n\n          patchUploads(newObj).then(res => {\n            console.log('==update success:', res);\n            Swal.fire({\n              position: 'center',\n              icon: 'success',\n              title: '編輯成功',\n              showConfirmButton: false,\n              timer: 1500\n            });\n            serverDataUpdate();\n            setWriteData({});\n            setParsed64('');\n            setEditKey(false);\n            setPopupState(false);\n          }).catch(error => {\n            console.log('==update fail:', error);\n\n            _Message.success('更新失敗');\n          });\n        }\n      });\n    } else {\n      Swal.fire({\n        title: `確定新增此資料?`,\n        text: '請確認資料填寫完整!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消'\n      }).then(result => {\n        if (result.isConfirmed) {\n          createUploads().then(res => {\n            Swal.fire('成功!', `此資料已新增`, 'success');\n            console.log('==create success:', res);\n            serverDataUpdate();\n            setWriteData({});\n            setParsed64('');\n            setEditKey(false);\n            setPopupState(false);\n          }).catch(error => {\n            console.log('==create fail:', error); // Message.error(`${err}`);\n          });\n        }\n      });\n    }\n  };\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n\n    switch (type) {\n      case \"input\":\n        element = /*#__PURE__*/_jsxDEV(_Input, {\n          value: writeData[e],\n          onChange: value => {\n            addCreateData(e, value);\n          },\n          placeholder: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this);\n        break;\n\n      case \"datePicker\":\n        element = /*#__PURE__*/_jsxDEV(_DatePicker, {\n          value: writeData[e],\n          placeholder: e,\n          onChange: value => {\n            addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this);\n        break;\n\n      case \"textArea\":\n        element = /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n          value: writeData[e],\n          placeholder: e,\n          maxLength: 500,\n          rows: 6,\n          hasLimitHint: true,\n          \"aria-label\": \"input max length 500\",\n          onChange: value => {\n            addCreateData(e, value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this);\n        break;\n\n      case \"select\":\n        element = /*#__PURE__*/_jsxDEV(_Select, {\n          value: writeData[e],\n          hasClear: true,\n          style: {\n            width: '100%'\n          },\n          placeholder: e,\n          dataSource: props.categoryProps,\n          onChange: value => {\n            addCreateData(e, value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this);\n        break;\n\n      case \"uploads\":\n        element = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/png, image/jpeg image/jpg\",\n            ref: uploadFile,\n            onChange: handleFiles,\n            type: \"file\",\n            id: \"file\",\n            name: \"files\" // multiple\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), editKey == true ? /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '50px',\n              height: '50px'\n            },\n            src: `${parsed64.length > 0 ? parsed64 : currentPosts[editIndex].files}`,\n            alt: \"\\u5716\\u7247\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true);\n        break;\n\n      case \"multiSelect\":\n        element = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(_Select, {\n            mode: \"multiple\",\n            value: writeData[e],\n            showSearch: true,\n            onChange: value => {\n              addCreateData(e, value);\n            },\n            dataSource: props.venderNameProps,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)\n        }, void 0, false);\n        break;\n    }\n\n    return element;\n  };\n\n  function createUploads() {\n    //Use uploads create\n    return new Promise(async (resolve, reject) => {\n      try {\n        const formData = new FormData();\n        Object.keys(writeData).forEach(eKey => {\n          if (eKey == \"vendorName\") {\n            formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n          } else {\n            formData.append(eKey, writeData[eKey]);\n          }\n        }); // formData.append('createdTime', new Date().toLocaleString());\n        // formData.append('updatedTime', new Date().toLocaleString());\n\n        if (uploadFile.current !== null && uploadFile.current.files && uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        const Res = await axios(`http://localhost:3030/uploads`, {\n          method: 'POST',\n          headers: {\n            authorization: window.localStorage['feathers-jwt']\n          },\n          data: formData\n        });\n        resolve(Res);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  function patchUploads(data) {\n    //Use uploads patch\n    return new Promise(async (resolve, reject) => {\n      try {\n        let patchUrl = `/uploads?type=${dbName}&id=${data._id}`;\n        const formData = new FormData();\n        const passKeys = ['files', '_id']; //禁止FormData Patch add Key\n\n        Object.keys(data).forEach(eKey => {\n          if (!passKeys.includes(eKey)) {\n            if (eKey == \"vendorName\") {\n              formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n            } else {\n              formData.append(eKey, writeData[eKey]);\n            }\n          }\n        });\n\n        if (uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        if (!uploadFile.current.files.length) {\n          patchUrl = `/uploads?type=${dbName}&id=${data._id}&img=keep`;\n        }\n\n        console.log('rdy to PP:', formData);\n        const Res = await axios(patchUrl, {\n          method: 'PATCH',\n          headers: {\n            authorization: window.localStorage['feathers-jwt']\n          },\n          data: formData\n        });\n        resolve(Res);\n      } catch (error) {\n        console.log('PP err:', error);\n        reject();\n      }\n    });\n  } //匯入檔案(Excel)\n\n\n  function handleExcelFile() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (uploadExcelFile.current.files.length <= 0) {\n          _Message.error(\"請先上傳檔案\");\n\n          return;\n        }\n\n        if (uploadExcelFile.current.files.length > 0) {\n          const formData = new FormData();\n          formData.append('files', uploadExcelFile.current.files[0]);\n          axios(`/ezcon/api/uploadDynamicMenuExcel?type=${dbName}`, {\n            method: 'POST',\n            headers: {\n              authorization: window.localStorage['feathers-jwt']\n            },\n            data: formData\n          }).catch(error => {\n            console.error('Error', error);\n            reject(error);\n          }).then(res => {\n            console.log('==upload file success:', res);\n\n            _Message.success(res.data);\n\n            serverDataUpdate();\n            resolve();\n          });\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  } //下載範例檔案(Excel)\n\n\n  function downloadExampleExcel() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        resolve(window.location.href = `/ezcon/api/getDynamicMenuExcel?type=${dbName}&demo=yes`);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  } //匯出檔案(Excel)\n\n\n  function handleExportExcelFile() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        resolve(window.location.href = `/ezcon/api/getDynamicMenuExcel?type=${dbName}&demo=no`);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Dialog, {\n      hasMask: false,\n      visible: popupState,\n      onOk: () => {\n        createSend();\n      },\n      onCancel: () => {\n        setPopupState(false);\n        setEditKey(false);\n        setWriteData({});\n      },\n      onClose: () => {\n        setPopupState(false);\n        setEditKey(false);\n        setWriteData({});\n      },\n      children: [...Object.keys(keys)].map((e, nb) => {\n        //-------Render Create Element\n        const type = keys[e].type;\n        if (keys[e].text == \"建立時間\" || keys[e].text == \"修改時間\" || keys[e].text == \"證照\") return \"\";\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(_Form, {\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              label: keys[e].text,\n              children: typeComponents(e, type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this)\n        }, keys[e].text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => {\n          setPopupState(true);\n        },\n        children: \"\\u65B0\\u589E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Card, {\n      free: true,\n      children: /*#__PURE__*/_jsxDEV(_Card.Content, {\n        children: [currentPosts && currentPosts.length > 0 ? /*#__PURE__*/_jsxDEV(_Table, {\n          dataSource: currentPosts,\n          onSort: onTableSort,\n          children: [[...Object.keys(keys)].map(list => {\n            //  -------Render Table Data\n            if (list == \"files\") {\n              return /*#__PURE__*/_jsxDEV(_Table.Column, {\n                width: 200,\n                title: keys[list].text,\n                cell: (record, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: currentPosts[index].files.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      alt: \"No Data\",\n                      src: currentPosts[index].files\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 49\n                    }, this) : null\n                  }, void 0, false);\n                }\n              }, keys[list].text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 44\n              }, this);\n            } else if (list == \"createTime\") {\n              return /*#__PURE__*/_jsxDEV(_Table.Column, {\n                sortable: true,\n                width: 200,\n                title: keys[list].text,\n                dataIndex: list,\n                cell: (record, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: new Date(currentPosts[index].createTime).toLocaleString()\n                  }, void 0, false);\n                }\n              }, keys[list].text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 44\n              }, this);\n            } else if (list == \"updateTime\") {\n              return /*#__PURE__*/_jsxDEV(_Table.Column, {\n                sortable: true,\n                width: 200,\n                title: keys[list].text,\n                dataIndex: list,\n                cell: (record, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: new Date(currentPosts[index].updateTime).toLocaleString()\n                  }, void 0, false);\n                }\n              }, keys[list].text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 44\n              }, this);\n            } else if (list == \"vendorName\") {\n              return /*#__PURE__*/_jsxDEV(_Table.Column, {\n                width: 200,\n                title: keys[list].text,\n                cell: (record, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: currentPosts[index].vendorName.length > 0 ? currentPosts[index].vendorName.map((list, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: list\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 57\n                      }, this);\n                    }) : null\n                  }, void 0, false);\n                }\n              }, keys[list].text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 44\n              }, this);\n            } else if (list == \"vendorLicense\") {\n              return /*#__PURE__*/_jsxDEV(_Table.Column, {\n                sortable: true,\n                width: 200,\n                title: keys[list].text,\n                cell: (record, index) => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: currentPosts[index].vendorLicense.length > 0 ? currentPosts[index].vendorLicense.map((list, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: list.name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 568,\n                        columnNumber: 57\n                      }, this);\n                    }) : null\n                  }, void 0, false);\n                }\n              }, keys[list].text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 44\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Table.Column, {\n                sortable: true,\n                title: keys[list].text,\n                dataIndex: list,\n                width: 200\n              }, keys[list].text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 44\n              }, this);\n            }\n          }), /*#__PURE__*/_jsxDEV(_Table.Column, {\n            width: 200,\n            title: \"\\u64CD\\u4F5C\",\n            cell: (value, index, record) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(_Button, {\n                  type: \"normal\",\n                  onClick: () => {\n                    setPopupState(true);\n                    setEditKey(true);\n                    setEditIndex(index);\n                    setWriteData({ ...currentPosts[index]\n                    });\n                  },\n                  children: \"\\u7DE8\\u8F2F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(_Button, {\n                  type: \"primary\",\n                  warning: true,\n                  onClick: () => {\n                    const item = currentPosts[index];\n                    Swal.fire({\n                      title: `確定刪除此資料?`,\n                      text: '刪除後將無法復原!!',\n                      icon: 'warning',\n                      showCancelButton: true,\n                      confirmButtonColor: '#3085d6',\n                      cancelButtonColor: '#BEBEBE',\n                      confirmButtonText: '確定',\n                      cancelButtonText: '取消'\n                    }).then(result => {\n                      if (result.isConfirmed) {\n                        Swal.fire('刪除!', `此資料已刪除`, 'success');\n                        funRemove(item._id).then(() => {\n                          const prePages = currentPage - 1 >= 0 ? currentPage - 1 : 0;\n\n                          if (props.listData.length - 1 <= prePages * postsPerPage) {\n                            setCurrentPage(currentPage - 1 < 1 ? 1 : currentPage - 1);\n                          }\n\n                          serverDataUpdate();\n                        });\n                      }\n                    });\n                  },\n                  children: \"\\u522A\\u9664\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 41\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(_Pagination, {\n          total: props.listData.length,\n          pageSize: postsPerPage,\n          totalRender: total => `Total: ${total}`,\n          onChange: pageNumber => {\n            setCurrentPage(pageNumber);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderTable, \"xleKQ7yv7EmgYzM901bNxx8fogM=\");\n\n_c = OrderTable;\nexport default OrderTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderTable\");","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/src/components/OrderTable/OrderTable.jsx"],"names":["React","useState","useEffect","useRef","Fragment","Swal","client","axios","moment","Option","Item","OrderTable","props","dbName","keys","text","tarProps","dbService","service","writeData","setWriteData","popupState","setPopupState","editKey","setEditKey","editIndex","setEditIndex","parsed","setParsed","parsed64","setParsed64","file","setFile","uploadFile","uploadExcelFile","curdataIndex","setcurDataIndex","curorder","setcurOrder","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","listData","slice","funFind","para","result","find","query","data","funCreate","obj","create","funUpdate","id","patch","funRemove","remove","serverDataUpdate","dataIndex","order","rdataIndex","rorder","then","sortedArr","sort","a","b","toString","localeCompare","listDataProps","listDataAllProps","onTableSort","console","log","beforeUpload","Promise","resolve","reject","current","files","length","isLt20M","size","error","handleFiles","push","reader","FileReader","onload","dataURL","readAsDataURL","err","addCreateData","key","value","createSend","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","newObj","patchUploads","res","position","showConfirmButton","timer","catch","success","createUploads","typeComponents","e","type","element","format","width","categoryProps","height","venderNameProps","formData","FormData","Object","forEach","eKey","append","JSON","stringify","Res","method","headers","authorization","window","localStorage","patchUrl","_id","passKeys","includes","handleExcelFile","downloadExampleExcel","location","href","handleExportExcelFile","map","nb","list","record","index","Date","createTime","toLocaleString","updateTime","vendorName","vendorLicense","name","item","prePages","total","pageNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport {\n    Button,\n    Dialog,\n    Input,\n    Form,\n    Select,\n    DatePicker,\n    Message,\n    Card,\n    Table,\n    Pagination\n} from \"@alifd/next\";\nimport Swal from 'sweetalert2';\nimport client from '../../lib/feathers';\nimport axios from 'axios';\nimport moment from 'moment';\nconst Option = Select.Option;\nconst { Item } = Form;\nconst OrderTable = (props) => {\n    const { dbName, keys, text } = props.tarProps;\n    const dbService = client.service(`${dbName}`);\n    // const [listData, setListData] = useState([]);\n    // const [listDataAll, setListDataAll] = useState([]);\n    const [writeData, setWriteData] = useState({});\n    const [popupState, setPopupState] = useState(false);\n    const [editKey, setEditKey] = useState(false);\n    const [editIndex, setEditIndex] = useState(\"\");\n    //uploads files\n    const [parsed, setParsed] = useState([]);\n    const [parsed64, setParsed64] = useState([]); //Base64\n    const [file, setFile] = useState(\"\");\n    const uploadFile = useRef(null);\n    const uploadExcelFile = useRef(null);\n    // sort\n    const [curdataIndex, setcurDataIndex] = useState('createTime');\n    const [curorder, setcurOrder] = useState('asc');\n    // change page\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage] = useState(10);\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = props.listData.slice(indexOfFirstPost, indexOfLastPost);\n    // dbService\n    async function funFind(para) {\n        const result = await dbService.find({ query: para });\n        // console.log(result);\n        return result && result.data ? result.data : [];\n    }\n\n    async function funCreate(obj) {\n        return (await dbService.create(obj))\n    }\n    async function funUpdate(id, obj) {\n        return (await dbService.patch(id, obj))\n    }\n    async function funRemove(id) {\n        return (await dbService.remove(id))\n    }\n    const serverDataUpdate = (dataIndex, order) => {\n        const rdataIndex = dataIndex || curdataIndex;\n        const rorder = order || curorder;\n\n        funFind({}).then((result) => {\n            const sortedArr = result.sort((a, b) => {\n                const result = (typeof a[rdataIndex] === 'number'\n                    ? a[rdataIndex].toString()\n                    : a[rdataIndex]\n                ).localeCompare(\n                    typeof b[rdataIndex] === 'number'\n                        ? b[rdataIndex].toString()\n                        : b[rdataIndex]\n                );\n                return rorder === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1;\n            })\n            props.listDataProps(sortedArr);\n            props.listDataAllProps(sortedArr)\n        });\n\n\n    };\n    const onTableSort = (dataIndex, order) => {\n        console.log('==dataIndex:', dataIndex, 'order:', order);\n        setcurDataIndex(dataIndex);\n        setcurOrder(order);\n        serverDataUpdate(dataIndex, order);\n    };\n\n    useEffect(() => {\n        serverDataUpdate();\n    }, []);\n\n\n\n    function beforeUpload() {\n        return new Promise(async (resolve, reject) => {\n            if (uploadFile.current.files.length > 0) {\n                const isLt20M =\n                    (await uploadFile.current.files[0].size) / 1024 / 1024 < 20;\n\n                if (!isLt20M) {\n                    Message.error('Image must smaller than 20MB!');\n                    return reject();\n                }\n                resolve(isLt20M);\n            } else {\n                setParsed64('')\n            }\n        });\n    }\n\n    const handleFiles = async () => {\n        try {\n            await beforeUpload();\n            const files = [...parsed];\n            const data = await uploadFile.current.files[0];\n            // console.log(data)\n            files.push(data);\n            setParsed(files);\n\n            //轉Base64 上傳檔案後呈現沒有寫到DB\n            const reader = new FileReader();\n            reader.onload = function () {\n                let dataURL = reader.result;\n                setParsed64(dataURL);\n            };\n            reader.readAsDataURL(data);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const addCreateData = (key, value) => {\n        //-------Input OnChange Event\n        let obj = {};\n        obj[key] = value;\n\n        setWriteData({ ...writeData, ...obj });\n    };\n    const createSend = () => {\n        //-------Create Data 送出\n        if (editKey == true) { //Check is edit state\n\n\n            Swal.fire({\n                title: `確定修改此資料?`,\n                text: '請確認修改資料!!',\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#BEBEBE',\n                confirmButtonText: '確定',\n                cancelButtonText: '取消',\n            }).then((result) => {\n                if (result.isConfirmed) {\n\n                    const data = currentPosts[editIndex];\n\n                    let newObj = { ...data, ...writeData } // updatedTime: new Date().toLocaleString()\n\n                    patchUploads(newObj)\n                        .then((res) => {\n                            console.log('==update success:', res);\n                            Swal.fire({\n                                position: 'center',\n                                icon: 'success',\n                                title: '編輯成功',\n                                showConfirmButton: false,\n                                timer: 1500,\n                            });\n                            serverDataUpdate();\n                            setWriteData({});\n                            setParsed64('');\n                            setEditKey(false);\n                            setPopupState(false);\n                        })\n                        .catch((error) => {\n                            console.log('==update fail:', error);\n                            Message.success('更新失敗');\n                        });\n\n                }\n            });\n        } else {\n\n            Swal.fire({\n                title: `確定新增此資料?`,\n                text: '請確認資料填寫完整!!',\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#BEBEBE',\n                confirmButtonText: '確定',\n                cancelButtonText: '取消',\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    createUploads()\n                        .then((res) => {\n                            Swal.fire('成功!', `此資料已新增`, 'success');\n                            console.log('==create success:', res);\n                            serverDataUpdate();\n                            setWriteData({});\n                            setParsed64('');\n                            setEditKey(false);\n                            setPopupState(false);\n                        }).catch((error) => {\n                            console.log('==create fail:', error);\n                            // Message.error(`${err}`);\n                        })\n                }\n            });\n\n        }\n    };\n\n\n\n    const typeComponents = (e, type) => {\n        // Render Type Components\n        let element;\n        switch (type) {\n            case \"input\":\n                element = (\n                    <Input\n                        value={writeData[e]}\n                        onChange={(value) => {\n                            addCreateData(e, value);\n                        }}\n                        placeholder={e}\n                    />\n                );\n                break;\n            case \"datePicker\":\n                element = (\n                    <DatePicker\n                        value={writeData[e]}\n                        placeholder={e}\n                        onChange={(value) => {\n                            addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n                        }}\n                    />\n                );\n                break;\n            case \"textArea\":\n                element = (\n                    <Input.TextArea\n                        value={writeData[e]}\n                        placeholder={e}\n                        maxLength={500}\n                        rows={6}\n                        hasLimitHint\n                        aria-label=\"input max length 500\"\n                        onChange={(value) => {\n                            addCreateData(e, value);\n                        }}\n                    />\n                );\n                break;\n            case \"select\":\n                element = (\n                    <Select\n                        value={writeData[e]}\n                        hasClear\n                        style={{ width: '100%' }}\n                        placeholder={e}\n                        dataSource={props.categoryProps}\n                        onChange={(value) => {\n                            addCreateData(e, value);\n                        }}\n                    />\n                );\n                break;\n            case \"uploads\":\n                element = (\n                    <>\n                        <input\n                            accept=\"image/png, image/jpeg image/jpg\"\n                            ref={uploadFile}\n                            onChange={handleFiles}\n                            type=\"file\"\n                            id=\"file\"\n                            name=\"files\"\n                        // multiple\n                        />\n                        {editKey == true ?\n                            <img\n                                style={{ width: '50px', height: '50px' }}\n                                src={`${parsed64.length > 0 ? parsed64 : currentPosts[editIndex].files}`}\n                                alt=\"圖片\"\n                            />\n\n                            :null\n                           \n                        }\n\n                        {/* <img  src={`${parsed64.length > 0 ? parsed64 : ezconImg}`} alt=\"圖片\"></img> */}\n                    </>);\n                break;\n            case \"multiSelect\":\n                element = (\n                    <>\n                        <Select\n                            mode=\"multiple\"\n                            value={writeData[e]}\n                            showSearch\n                            onChange={(value) => {\n                                addCreateData(e, value);\n                            }}\n                            dataSource={props.venderNameProps}\n                            style={{ width: '100%' }}\n                        />\n\n                    </>);\n                break;\n        }\n        return element;\n    };\n\n\n\n    function createUploads() {//Use uploads create\n        return new Promise(async (resolve, reject) => {\n            try {\n\n                const formData = new FormData();\n                Object.keys(writeData).forEach((eKey) => {\n                  \n                    if(eKey==\"vendorName\"){\n                        formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n                    } else{\n                        formData.append(eKey, writeData[eKey]);\n                    }\n                });\n                // formData.append('createdTime', new Date().toLocaleString());\n                // formData.append('updatedTime', new Date().toLocaleString());\n\n                if (uploadFile.current !== null && uploadFile.current.files && uploadFile.current.files.length > 0) {\n                    formData.append('files', uploadFile.current.files[0]);\n                }\n\n                const Res = await axios(`http://localhost:3030/uploads`, {\n                    method: 'POST',\n                    headers: { authorization: window.localStorage['feathers-jwt'] },\n                    data: formData\n                });\n\n                resolve(Res);\n            } catch (error) {\n                reject(error);\n            }\n        })\n\n    }\n\n    function patchUploads(data) {//Use uploads patch\n        return new Promise(async (resolve, reject) => {\n            try {\n                let patchUrl = `/uploads?type=${dbName}&id=${data._id}`\n                const formData = new FormData();\n\n                const passKeys = ['files', '_id'];//禁止FormData Patch add Key\n\n                Object.keys(data).forEach((eKey) => {\n                    \n                    if (!passKeys.includes(eKey)){\n                        if(eKey==\"vendorName\"){\n                            formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n                        } else{\n                            formData.append(eKey, writeData[eKey]);\n                        }\n                    }\n                });\n\n                if (uploadFile.current.files.length > 0) {\n                    formData.append('files', uploadFile.current.files[0]);\n                }\n                if (!uploadFile.current.files.length) {\n                    patchUrl = `/uploads?type=${dbName}&id=${data._id}&img=keep`\n                }\n                console.log('rdy to PP:', formData);\n                const Res = await axios(patchUrl, {\n                    method: 'PATCH',\n                    headers: { authorization: window.localStorage['feathers-jwt'] },\n                    data: formData\n                });\n\n                resolve(Res);\n            } catch (error) {\n                console.log('PP err:', error);\n                reject();\n            }\n        })\n    }\n\n\n    //匯入檔案(Excel)\n    function handleExcelFile() {\n\n        return new Promise(async (resolve, reject) => {\n            try {\n\n                if (uploadExcelFile.current.files.length <= 0) {\n                    Message.error(\"請先上傳檔案\")\n                    return;\n                }\n                if (uploadExcelFile.current.files.length > 0) {\n                    const formData = new FormData();\n                    formData.append('files', uploadExcelFile.current.files[0]);\n\n                    axios(`/ezcon/api/uploadDynamicMenuExcel?type=${dbName}`, {\n                        method: 'POST',\n                        headers: { authorization: window.localStorage['feathers-jwt'] },\n                        data: formData,\n                    })\n                        .catch((error) => {\n                            console.error('Error', error);\n                            reject(error);\n                        })\n                        .then((res) => {\n                            console.log('==upload file success:', res);\n                            Message.success(res.data);\n                            serverDataUpdate();\n                            resolve();\n                        });\n                }\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    //下載範例檔案(Excel)\n    function downloadExampleExcel() {\n        return new Promise(async (resolve, reject) => {\n            try {\n                resolve(window.location.href = `/ezcon/api/getDynamicMenuExcel?type=${dbName}&demo=yes`);\n\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n\n    //匯出檔案(Excel)\n    function handleExportExcelFile() {\n        return new Promise(async (resolve, reject) => {\n            try {\n\n                resolve(window.location.href = `/ezcon/api/getDynamicMenuExcel?type=${dbName}&demo=no`);\n\n\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n    return (\n        <>\n            <Dialog\n               \n                hasMask={false}\n                visible={popupState}\n                onOk={() => {\n                    createSend();\n\n                }}\n                onCancel={() => {\n                    setPopupState(false);\n                    setEditKey(false);\n                    setWriteData({});\n                }}\n                onClose={() => {\n                    setPopupState(false);\n                    setEditKey(false);\n                    setWriteData({});\n                }}\n            >\n                {[...Object.keys(keys)].map((e, nb) => {\n                    //-------Render Create Element\n                    const type = keys[e].type;\n                    if (keys[e].text == \"建立時間\" || keys[e].text == \"修改時間\" || keys[e].text == \"證照\") return \"\";\n                    return <Fragment key={keys[e].text}>\n                        <Form>\n\n                            <Item label={keys[e].text} >\n                                {typeComponents(e, type)}\n                            </Item>\n\n                        </Form>\n                    </Fragment>;\n                })}\n            </Dialog>\n\n            <div >\n                <Button\n                    type=\"primary\"\n                    onClick={() => {\n                        setPopupState(true);\n                    }}\n                >\n                    新增\n                </Button>\n            \n            </div>\n            <Card free>\n                <Card.Content>\n                    {currentPosts && currentPosts.length > 0 ?\n\n                        <Table dataSource={currentPosts} onSort={onTableSort}>\n                            {[...Object.keys(keys)].map((list) => {\n                                //  -------Render Table Data\n\n                                if (list == \"files\") {\n                                    return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                                        return (<>\n                                            {currentPosts[index].files.length > 0 ?\n                                                <img alt=\"No Data\" src={currentPosts[index].files} /> : null}\n\n                                        </>)\n                                    }\n                                    } />\n                                } else if (list == \"createTime\") {\n                                    return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                                        return (<>\n                                            {new Date(currentPosts[index].createTime).toLocaleString()}\n\n                                        </>)\n                                    }\n                                    } />\n                                } else if (list == \"updateTime\") {\n                                    return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                                        return (<>\n                                            {new Date(currentPosts[index].updateTime).toLocaleString()}\n\n                                        </>)\n                                    }\n                                    } />\n                                } else if (list == \"vendorName\") {\n                                    return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                                        return (<>\n                                            {currentPosts[index].vendorName.length > 0 ?\n                                                currentPosts[index].vendorName.map((list,index)=>{\n                                             \n                                                    return(\n                                                        <p key={index}>{list}</p>\n                                                    )\n                                                \n                                                })\n                                              \n                                               : null}\n\n                                        </>)\n                                    }\n                                    } />\n                                } else if (list == \"vendorLicense\") {\n                                    return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                                        return (<>\n                                            {currentPosts[index].vendorLicense.length > 0 ?\n                                                currentPosts[index].vendorLicense.map((list,index)=>{\n                                             \n                                                    return(\n                                                        <p key={index}>{list.name}</p>\n                                                    )\n                                                \n                                                })\n                                              \n                                               : null}\n\n                                        </>)\n                                    }\n                                    } />\n                                }else {\n                                    return <Table.Column sortable key={keys[list].text} title={keys[list].text} dataIndex={list} width={200} />\n                                }\n\n                            })}\n                            <Table.Column\n                                width={200}\n                                title=\"操作\"\n                                cell={(value, index, record) => {\n                                    return (\n                                        <div >\n                                            <Button\n                                                type=\"normal\"\n                                                onClick={() => {\n                                                    setPopupState(true);\n                                                    setEditKey(true);\n                                                    setEditIndex(index);\n                                                    setWriteData({ ...currentPosts[index] });\n                                                }}\n                                            >\n                                                編輯\n                                            </Button>\n\n                                            <Button\n                                                type=\"primary\"\n                                                warning\n                                                onClick={() => {\n                                                    const item = currentPosts[index];\n                                                    Swal.fire({\n                                                        title: `確定刪除此資料?`,\n                                                        text: '刪除後將無法復原!!',\n                                                        icon: 'warning',\n                                                        showCancelButton: true,\n                                                        confirmButtonColor: '#3085d6',\n                                                        cancelButtonColor: '#BEBEBE',\n                                                        confirmButtonText: '確定',\n                                                        cancelButtonText: '取消',\n                                                    }).then((result) => {\n                                                        if (result.isConfirmed) {\n                                                            Swal.fire('刪除!', `此資料已刪除`, 'success');\n                                                            funRemove(item._id).then(() => {\n                                                                const prePages =\n                                                                    currentPage - 1 >= 0 ? currentPage - 1 : 0;\n                                                                if (\n                                                                    props.listData.length - 1 <=\n                                                                    prePages * postsPerPage\n                                                                ) {\n                                                                    setCurrentPage(\n                                                                        currentPage - 1 < 1 ? 1 : currentPage - 1\n                                                                    );\n                                                                }\n\n                                                                serverDataUpdate();\n                                                            });\n                                                        }\n                                                    });\n                                                }}\n                                            >\n                                                刪除\n                                     </Button>\n                                        </div>\n                                    );\n                                }}\n                            />\n                        </Table>\n                        : null}\n                    <Pagination\n                      \n                        total={props.listData.length}\n                        pageSize={postsPerPage}\n                        totalRender={(total) => `Total: ${total}`}\n                        onChange={(pageNumber) => {\n                            setCurrentPage(pageNumber);\n                        }}\n                    />\n                </Card.Content>\n            </Card>\n        </>\n    );\n}\n\nexport default OrderTable;\n"]},"metadata":{},"sourceType":"module"}