{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { dom } from '../util';\nimport VirtualBody from './virtual/body';\nimport { statics } from './util';\n\nvar noop = function noop() {};\n\nexport default function virtual(BaseComponent) {\n  var _class, _temp;\n\n  var VirtualTable = (_temp = _class = function (_React$Component) {\n    _inherits(VirtualTable, _React$Component);\n\n    function VirtualTable(props, context) {\n      _classCallCheck(this, VirtualTable);\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n      _this.onScroll = function () {\n        // 避免横向滚动带来的性能问题\n        var scrollTop = _this.bodyNode.scrollTop;\n\n        if (scrollTop === _this.lastScrollTop) {\n          return;\n        }\n\n        var start = _this.computeScrollToRow(scrollTop);\n\n        if (!('scrollToRow' in _this.props)) {\n          _this.setState({\n            scrollToRow: start\n          });\n        }\n\n        _this.props.onBodyScroll(start);\n\n        _this.lastScrollTop = scrollTop;\n      };\n\n      _this.getBodyNode = function (node, lockType) {\n        lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';\n        _this['body' + lockType + 'Node'] = node;\n      };\n\n      _this.getTableInstance = function (type, instance) {\n        type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n        _this['table' + type + 'Inc'] = instance;\n      };\n\n      var useVirtual = props.useVirtual,\n          dataSource = props.dataSource;\n      var hasVirtualData = useVirtual && dataSource && dataSource.length > 0;\n      _this.state = {\n        rowHeight: _this.props.rowHeight,\n        scrollToRow: _this.props.scrollToRow,\n        height: _this.props.maxBodyHeight,\n        hasVirtualData: hasVirtualData\n      };\n      return _this;\n    }\n\n    VirtualTable.prototype.getChildContext = function getChildContext() {\n      return {\n        onVirtualScroll: this.onScroll,\n        bodyHeight: this.computeBodyHeight(),\n        innerTop: this.computeInnerTop(),\n        getBodyNode: this.getBodyNode,\n        getTableInstanceForVirtual: this.getTableInstance,\n        rowSelection: this.rowSelection\n      };\n    };\n\n    VirtualTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      var state = {};\n\n      if ('maxBodyHeight' in nextProps) {\n        if (prevState.height !== nextProps.maxBodyHeight) {\n          state.height = nextProps.maxBodyHeight;\n        }\n      }\n\n      if ('scrollToRow' in nextProps) {\n        state.scrollToRow = nextProps.scrollToRow;\n      }\n\n      if (prevState.useVirtual !== nextProps.useVirtual || prevState.dataSource !== nextProps.dataSource) {\n        state.hasVirtualData = nextProps.useVirtual && nextProps.dataSource && nextProps.dataSource.length > 0;\n      }\n\n      return state;\n    };\n\n    VirtualTable.prototype.componentDidMount = function componentDidMount() {\n      if (this.state.hasVirtualData && this.bodyNode) {\n        this.lastScrollTop = this.bodyNode.scrollTop;\n      }\n\n      this.adjustScrollTop();\n      this.adjustSize();\n      this.reComputeSize();\n    };\n\n    VirtualTable.prototype.componentDidUpdate = function componentDidUpdate() {\n      this.adjustScrollTop();\n      this.adjustSize();\n      this.reComputeSize();\n    };\n\n    VirtualTable.prototype.reComputeSize = function reComputeSize() {\n      var _state = this.state,\n          rowHeight = _state.rowHeight,\n          hasVirtualData = _state.hasVirtualData;\n\n      if (typeof rowHeight === 'function' && hasVirtualData) {\n        var row = this.getRowNode();\n        var rowClientHeight = row && row.clientHeight;\n\n        if (rowClientHeight !== this.state.rowHeight) {\n          this.setState({\n            rowHeight: rowClientHeight\n          });\n        }\n      }\n    };\n\n    VirtualTable.prototype.computeBodyHeight = function computeBodyHeight() {\n      var rowHeight = this.state.rowHeight;\n      var dataSource = this.props.dataSource;\n\n      if (typeof rowHeight === 'function') {\n        return 0;\n      }\n\n      return dataSource.length * rowHeight;\n    };\n\n    VirtualTable.prototype.computeInnerTop = function computeInnerTop() {\n      var rowHeight = this.state.rowHeight;\n\n      if (typeof rowHeight === 'function') {\n        return 0;\n      }\n\n      return this.start * rowHeight;\n    };\n\n    VirtualTable.prototype.getVisibleRange = function getVisibleRange(ExpectStart) {\n      var _state2 = this.state,\n          height = _state2.height,\n          rowHeight = _state2.rowHeight;\n      var len = this.props.dataSource.length;\n      var end = void 0,\n          visibleCount = 0;\n      var start = 0;\n\n      if (typeof rowHeight === 'function') {\n        // try get cell height;\n        end = 1;\n      } else {\n        visibleCount = parseInt(dom.getPixels(height) / rowHeight, 10);\n\n        if ('number' === typeof ExpectStart) {\n          start = ExpectStart < len ? ExpectStart : 0;\n        }\n\n        end = Math.min(+start + 1 + visibleCount + 10, len);\n      }\n\n      this.end = end;\n      this.visibleCount = visibleCount;\n      return {\n        start: start,\n        end: end\n      };\n    };\n\n    VirtualTable.prototype.adjustScrollTop = function adjustScrollTop() {\n      if (this.state.hasVirtualData && this.bodyNode) {\n        this.bodyNode.scrollTop = this.lastScrollTop % this.state.rowHeight + this.state.rowHeight * this.state.scrollToRow;\n      }\n    };\n\n    VirtualTable.prototype.adjustSize = function adjustSize() {\n      if (this.state.hasVirtualData && this.bodyNode) {\n        var body = this.bodyNode;\n        var virtualScrollNode = body.querySelector('div');\n        var clientHeight = body.clientHeight,\n            clientWidth = body.clientWidth;\n        var tableInc = this.tableInc;\n        var tableNode = findDOMNode(tableInc);\n        var prefix = this.props.prefix;\n        var headerNode = tableNode.querySelector('.' + prefix + 'table-header table');\n        var headerClientWidth = headerNode && headerNode.clientWidth; // todo 2.0 设置宽度这个可以去掉\n\n        if (clientWidth < headerClientWidth) {\n          dom.setStyle(virtualScrollNode, 'min-width', headerClientWidth);\n          var leftNode = this.bodyLeftNode;\n          var rightNode = this.bodyRightNode;\n          leftNode && dom.setStyle(leftNode, 'max-height', clientHeight);\n          rightNode && dom.setStyle(rightNode, 'max-height', clientHeight);\n        } else {\n          dom.setStyle(virtualScrollNode, 'min-width', 'auto');\n        }\n      }\n    };\n\n    VirtualTable.prototype.computeScrollToRow = function computeScrollToRow(offset) {\n      var rowHeight = this.state.rowHeight;\n      var start = parseInt(offset / rowHeight);\n      this.start = start;\n      return start;\n    };\n\n    VirtualTable.prototype.getRowNode = function getRowNode() {\n      try {\n        // in case of finding an unmounted component due to cached data\n        // need to clear refs of this.tableInc when dataSource Changed\n        // use try catch for temporary\n        return findDOMNode(this.tableInc.getRowRef(0));\n      } catch (error) {\n        return null;\n      }\n    };\n\n    VirtualTable.prototype.render = function render() {\n      /* eslint-disable no-unused-vars, prefer-const */\n      var _props = this.props,\n          useVirtual = _props.useVirtual,\n          components = _props.components,\n          dataSource = _props.dataSource,\n          fixedHeader = _props.fixedHeader,\n          rowHeight = _props.rowHeight,\n          scrollToRow = _props.scrollToRow,\n          onBodyScroll = _props.onBodyScroll,\n          others = _objectWithoutProperties(_props, ['useVirtual', 'components', 'dataSource', 'fixedHeader', 'rowHeight', 'scrollToRow', 'onBodyScroll']);\n\n      var entireDataSource = dataSource;\n      var newDataSource = dataSource;\n      this.rowSelection = this.props.rowSelection;\n\n      if (this.state.hasVirtualData) {\n        newDataSource = [];\n        components = _extends({}, components);\n\n        var _getVisibleRange = this.getVisibleRange(this.state.scrollToRow),\n            start = _getVisibleRange.start,\n            end = _getVisibleRange.end;\n\n        dataSource.forEach(function (current, index, record) {\n          if (index >= start && index < end) {\n            current.__rowIndex = index;\n            newDataSource.push(current);\n          }\n        });\n\n        if (!components.Body) {\n          components.Body = VirtualBody;\n        }\n\n        fixedHeader = true;\n      }\n\n      return React.createElement(BaseComponent, _extends({}, others, {\n        scrollToRow: scrollToRow,\n        dataSource: newDataSource,\n        entireDataSource: entireDataSource,\n        components: components,\n        fixedHeader: fixedHeader\n      }));\n    };\n\n    return VirtualTable;\n  }(React.Component), _class.VirtualBody = VirtualBody, _class.propTypes = _extends({\n    /**\n     * 是否开启虚拟滚动\n     */\n    useVirtual: PropTypes.bool,\n\n    /**\n     * 设置行高\n     */\n    rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    maxBodyHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    primaryKey: PropTypes.oneOfType([PropTypes.symbol, PropTypes.string]),\n    dataSource: PropTypes.array,\n\n    /**\n     * 在内容区域滚动的时候触发的函数\n     */\n    onBodyScroll: PropTypes.func\n  }, BaseComponent.propTypes), _class.defaultProps = _extends({}, BaseComponent.defaultProps, {\n    primaryKey: 'id',\n    rowHeight: noop,\n    maxBodyHeight: 200,\n    components: {},\n    prefix: 'next-',\n    onBodyScroll: noop\n  }), _class.childContextTypes = {\n    onVirtualScroll: PropTypes.func,\n    bodyHeight: PropTypes.number,\n    innerTop: PropTypes.number,\n    getBodyNode: PropTypes.func,\n    getTableInstanceForVirtual: PropTypes.func,\n    rowSelection: PropTypes.object\n  }, _temp);\n  VirtualTable.displayName = 'VirtualTable';\n  statics(VirtualTable, BaseComponent);\n  return polyfill(VirtualTable);\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/table/virtual.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","React","findDOMNode","PropTypes","polyfill","dom","VirtualBody","statics","noop","virtual","BaseComponent","_class","_temp","VirtualTable","_React$Component","props","context","_this","call","onScroll","scrollTop","bodyNode","lastScrollTop","start","computeScrollToRow","setState","scrollToRow","onBodyScroll","getBodyNode","node","lockType","charAt","toUpperCase","substr","getTableInstance","type","instance","useVirtual","dataSource","hasVirtualData","length","state","rowHeight","height","maxBodyHeight","prototype","getChildContext","onVirtualScroll","bodyHeight","computeBodyHeight","innerTop","computeInnerTop","getTableInstanceForVirtual","rowSelection","getDerivedStateFromProps","nextProps","prevState","componentDidMount","adjustScrollTop","adjustSize","reComputeSize","componentDidUpdate","_state","row","getRowNode","rowClientHeight","clientHeight","getVisibleRange","ExpectStart","_state2","len","end","visibleCount","parseInt","getPixels","Math","min","body","virtualScrollNode","querySelector","clientWidth","tableInc","tableNode","prefix","headerNode","headerClientWidth","setStyle","leftNode","bodyLeftNode","rightNode","bodyRightNode","offset","getRowRef","error","render","_props","components","fixedHeader","others","entireDataSource","newDataSource","_getVisibleRange","forEach","current","index","record","__rowIndex","push","Body","createElement","Component","propTypes","bool","oneOfType","number","func","string","primaryKey","symbol","array","defaultProps","childContextTypes","object","displayName"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { dom } from '../util';\nimport VirtualBody from './virtual/body';\nimport { statics } from './util';\n\nvar noop = function noop() {};\nexport default function virtual(BaseComponent) {\n    var _class, _temp;\n\n    var VirtualTable = (_temp = _class = function (_React$Component) {\n        _inherits(VirtualTable, _React$Component);\n\n        function VirtualTable(props, context) {\n            _classCallCheck(this, VirtualTable);\n\n            var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n            _this.onScroll = function () {\n                // 避免横向滚动带来的性能问题\n                var scrollTop = _this.bodyNode.scrollTop;\n                if (scrollTop === _this.lastScrollTop) {\n                    return;\n                }\n                var start = _this.computeScrollToRow(scrollTop);\n                if (!('scrollToRow' in _this.props)) {\n                    _this.setState({\n                        scrollToRow: start\n                    });\n                }\n                _this.props.onBodyScroll(start);\n                _this.lastScrollTop = scrollTop;\n            };\n\n            _this.getBodyNode = function (node, lockType) {\n                lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';\n                _this['body' + lockType + 'Node'] = node;\n            };\n\n            _this.getTableInstance = function (type, instance) {\n                type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';\n                _this['table' + type + 'Inc'] = instance;\n            };\n\n            var useVirtual = props.useVirtual,\n                dataSource = props.dataSource;\n\n\n            var hasVirtualData = useVirtual && dataSource && dataSource.length > 0;\n\n            _this.state = {\n                rowHeight: _this.props.rowHeight,\n                scrollToRow: _this.props.scrollToRow,\n                height: _this.props.maxBodyHeight,\n                hasVirtualData: hasVirtualData\n            };\n            return _this;\n        }\n\n        VirtualTable.prototype.getChildContext = function getChildContext() {\n            return {\n                onVirtualScroll: this.onScroll,\n                bodyHeight: this.computeBodyHeight(),\n                innerTop: this.computeInnerTop(),\n                getBodyNode: this.getBodyNode,\n                getTableInstanceForVirtual: this.getTableInstance,\n                rowSelection: this.rowSelection\n            };\n        };\n\n        VirtualTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n            var state = {};\n\n            if ('maxBodyHeight' in nextProps) {\n                if (prevState.height !== nextProps.maxBodyHeight) {\n                    state.height = nextProps.maxBodyHeight;\n                }\n            }\n\n            if ('scrollToRow' in nextProps) {\n                state.scrollToRow = nextProps.scrollToRow;\n            }\n\n            if (prevState.useVirtual !== nextProps.useVirtual || prevState.dataSource !== nextProps.dataSource) {\n                state.hasVirtualData = nextProps.useVirtual && nextProps.dataSource && nextProps.dataSource.length > 0;\n            }\n\n            return state;\n        };\n\n        VirtualTable.prototype.componentDidMount = function componentDidMount() {\n            if (this.state.hasVirtualData && this.bodyNode) {\n                this.lastScrollTop = this.bodyNode.scrollTop;\n            }\n\n            this.adjustScrollTop();\n            this.adjustSize();\n            this.reComputeSize();\n        };\n\n        VirtualTable.prototype.componentDidUpdate = function componentDidUpdate() {\n            this.adjustScrollTop();\n            this.adjustSize();\n            this.reComputeSize();\n        };\n\n        VirtualTable.prototype.reComputeSize = function reComputeSize() {\n            var _state = this.state,\n                rowHeight = _state.rowHeight,\n                hasVirtualData = _state.hasVirtualData;\n\n            if (typeof rowHeight === 'function' && hasVirtualData) {\n                var row = this.getRowNode();\n                var rowClientHeight = row && row.clientHeight;\n                if (rowClientHeight !== this.state.rowHeight) {\n                    this.setState({\n                        rowHeight: rowClientHeight\n                    });\n                }\n            }\n        };\n\n        VirtualTable.prototype.computeBodyHeight = function computeBodyHeight() {\n            var rowHeight = this.state.rowHeight;\n            var dataSource = this.props.dataSource;\n\n            if (typeof rowHeight === 'function') {\n                return 0;\n            }\n            return dataSource.length * rowHeight;\n        };\n\n        VirtualTable.prototype.computeInnerTop = function computeInnerTop() {\n            var rowHeight = this.state.rowHeight;\n\n            if (typeof rowHeight === 'function') {\n                return 0;\n            }\n\n            return this.start * rowHeight;\n        };\n\n        VirtualTable.prototype.getVisibleRange = function getVisibleRange(ExpectStart) {\n            var _state2 = this.state,\n                height = _state2.height,\n                rowHeight = _state2.rowHeight;\n\n            var len = this.props.dataSource.length;\n\n            var end = void 0,\n                visibleCount = 0;\n            var start = 0;\n            if (typeof rowHeight === 'function') {\n                // try get cell height;\n                end = 1;\n            } else {\n                visibleCount = parseInt(dom.getPixels(height) / rowHeight, 10);\n\n                if ('number' === typeof ExpectStart) {\n                    start = ExpectStart < len ? ExpectStart : 0;\n                }\n\n                end = Math.min(+start + 1 + visibleCount + 10, len);\n            }\n            this.end = end;\n            this.visibleCount = visibleCount;\n            return {\n                start: start,\n                end: end\n            };\n        };\n\n        VirtualTable.prototype.adjustScrollTop = function adjustScrollTop() {\n            if (this.state.hasVirtualData && this.bodyNode) {\n                this.bodyNode.scrollTop = this.lastScrollTop % this.state.rowHeight + this.state.rowHeight * this.state.scrollToRow;\n            }\n        };\n\n        VirtualTable.prototype.adjustSize = function adjustSize() {\n            if (this.state.hasVirtualData && this.bodyNode) {\n                var body = this.bodyNode;\n                var virtualScrollNode = body.querySelector('div');\n                var clientHeight = body.clientHeight,\n                    clientWidth = body.clientWidth;\n\n\n                var tableInc = this.tableInc;\n                var tableNode = findDOMNode(tableInc);\n                var prefix = this.props.prefix;\n\n                var headerNode = tableNode.querySelector('.' + prefix + 'table-header table');\n                var headerClientWidth = headerNode && headerNode.clientWidth;\n                // todo 2.0 设置宽度这个可以去掉\n                if (clientWidth < headerClientWidth) {\n                    dom.setStyle(virtualScrollNode, 'min-width', headerClientWidth);\n                    var leftNode = this.bodyLeftNode;\n                    var rightNode = this.bodyRightNode;\n                    leftNode && dom.setStyle(leftNode, 'max-height', clientHeight);\n                    rightNode && dom.setStyle(rightNode, 'max-height', clientHeight);\n                } else {\n                    dom.setStyle(virtualScrollNode, 'min-width', 'auto');\n                }\n            }\n        };\n\n        VirtualTable.prototype.computeScrollToRow = function computeScrollToRow(offset) {\n            var rowHeight = this.state.rowHeight;\n\n            var start = parseInt(offset / rowHeight);\n            this.start = start;\n            return start;\n        };\n\n        VirtualTable.prototype.getRowNode = function getRowNode() {\n            try {\n                // in case of finding an unmounted component due to cached data\n                // need to clear refs of this.tableInc when dataSource Changed\n                // use try catch for temporary\n                return findDOMNode(this.tableInc.getRowRef(0));\n            } catch (error) {\n                return null;\n            }\n        };\n\n        VirtualTable.prototype.render = function render() {\n            /* eslint-disable no-unused-vars, prefer-const */\n            var _props = this.props,\n                useVirtual = _props.useVirtual,\n                components = _props.components,\n                dataSource = _props.dataSource,\n                fixedHeader = _props.fixedHeader,\n                rowHeight = _props.rowHeight,\n                scrollToRow = _props.scrollToRow,\n                onBodyScroll = _props.onBodyScroll,\n                others = _objectWithoutProperties(_props, ['useVirtual', 'components', 'dataSource', 'fixedHeader', 'rowHeight', 'scrollToRow', 'onBodyScroll']);\n\n            var entireDataSource = dataSource;\n            var newDataSource = dataSource;\n\n            this.rowSelection = this.props.rowSelection;\n            if (this.state.hasVirtualData) {\n                newDataSource = [];\n                components = _extends({}, components);\n\n                var _getVisibleRange = this.getVisibleRange(this.state.scrollToRow),\n                    start = _getVisibleRange.start,\n                    end = _getVisibleRange.end;\n\n                dataSource.forEach(function (current, index, record) {\n                    if (index >= start && index < end) {\n                        current.__rowIndex = index;\n                        newDataSource.push(current);\n                    }\n                });\n\n                if (!components.Body) {\n                    components.Body = VirtualBody;\n                }\n                fixedHeader = true;\n            }\n\n            return React.createElement(BaseComponent, _extends({}, others, {\n                scrollToRow: scrollToRow,\n                dataSource: newDataSource,\n                entireDataSource: entireDataSource,\n                components: components,\n                fixedHeader: fixedHeader\n            }));\n        };\n\n        return VirtualTable;\n    }(React.Component), _class.VirtualBody = VirtualBody, _class.propTypes = _extends({\n        /**\n         * 是否开启虚拟滚动\n         */\n        useVirtual: PropTypes.bool,\n        /**\n         * 设置行高\n         */\n        rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n        maxBodyHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        primaryKey: PropTypes.oneOfType([PropTypes.symbol, PropTypes.string]),\n        dataSource: PropTypes.array,\n        /**\n         * 在内容区域滚动的时候触发的函数\n         */\n        onBodyScroll: PropTypes.func\n    }, BaseComponent.propTypes), _class.defaultProps = _extends({}, BaseComponent.defaultProps, {\n        primaryKey: 'id',\n        rowHeight: noop,\n        maxBodyHeight: 200,\n        components: {},\n        prefix: 'next-',\n        onBodyScroll: noop\n    }), _class.childContextTypes = {\n        onVirtualScroll: PropTypes.func,\n        bodyHeight: PropTypes.number,\n        innerTop: PropTypes.number,\n        getBodyNode: PropTypes.func,\n        getTableInstanceForVirtual: PropTypes.func,\n        rowSelection: PropTypes.object\n    }, _temp);\n    VirtualTable.displayName = 'VirtualTable';\n\n    statics(VirtualTable, BaseComponent);\n    return polyfill(VirtualTable);\n}"]},"metadata":{},"sourceType":"module"}