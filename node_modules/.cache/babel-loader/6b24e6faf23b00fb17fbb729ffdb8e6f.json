{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport ConfigProvider from '../config-provider';\nimport nextLocale from '../locale/zh-cn';\nimport { obj, func } from '../util';\nimport RangePanelHeader from './head/range-panel-header';\nimport MonthPanelHeader from './head/month-panel-header';\nimport YearPanelHeader from './head/year-panel-header';\nimport DateTable from './table/date-table';\nimport MonthTable from './table/month-table';\nimport YearTable from './table/year-table';\nimport { checkMomentObj, formatDateValue, getVisibleMonth, isSameYearMonth, CALENDAR_MODES, CALENDAR_MODE_DATE, CALENDAR_MODE_MONTH, CALENDAR_MODE_YEAR, getLocaleData } from './utils';\nvar RangeCalendar = (_temp = _class = function (_React$Component) {\n  _inherits(RangeCalendar, _React$Component);\n\n  function RangeCalendar(props, context) {\n    _classCallCheck(this, RangeCalendar);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.onSelectCell = function (date, nextMode) {\n      if (_this.state.mode === CALENDAR_MODE_DATE) {\n        _this.props.onSelect(date);\n      } else {\n        _this.changeVisibleMonth(date, 'cellClick');\n      }\n\n      _this.changeMode(nextMode);\n    };\n\n    _this.changeMode = function (mode, activePanel) {\n      var _this$state = _this.state,\n          lastMode = _this$state.lastMode,\n          lastPanelType = _this$state.lastPanelType;\n      var state = {\n        lastMode: mode,\n        // rangePicker的panel下，选 year -> month ，从当前函数的activePanel传来的数据已经拿不到 start end panel的状态了，需要根据 lastMode 来判断\n        lastPanelType: lastMode === 'year' ? lastPanelType : activePanel\n      };\n\n      if (typeof mode === 'string' && mode !== _this.state.mode) {\n        state.mode = mode;\n      }\n\n      if (activePanel && activePanel !== _this.state.activePanel) {\n        state.activePanel = activePanel;\n      }\n\n      _this.setState(state);\n    };\n\n    _this.changeVisibleMonth = function (date, reason) {\n      var lastPanelType = _this.state.lastPanelType;\n\n      if (!isSameYearMonth(date, _this.state.startVisibleMonth)) {\n        var startVisibleMonth = lastPanelType === 'end' ? date.clone().add(-1, 'month') : date;\n\n        _this.setState({\n          startVisibleMonth: startVisibleMonth\n        });\n\n        _this.props.onVisibleMonthChange(startVisibleMonth, reason);\n      }\n    };\n\n    _this.changeVisibleMonthByOffset = function (offset, type) {\n      var offsetDate = _this.state.startVisibleMonth.clone().add(offset, type);\n\n      _this.changeVisibleMonth(offsetDate, 'buttonClick');\n    };\n\n    _this.goPrevDecade = function () {\n      _this.changeVisibleMonthByOffset(-10, 'years');\n    };\n\n    _this.goNextDecade = function () {\n      _this.changeVisibleMonthByOffset(10, 'years');\n    };\n\n    _this.goPrevYear = function () {\n      _this.changeVisibleMonthByOffset(-1, 'years');\n    };\n\n    _this.goNextYear = function () {\n      _this.changeVisibleMonthByOffset(1, 'years');\n    };\n\n    _this.goPrevMonth = function () {\n      _this.changeVisibleMonthByOffset(-1, 'months');\n    };\n\n    _this.goNextMonth = function () {\n      _this.changeVisibleMonthByOffset(1, 'months');\n    };\n\n    var startValue = formatDateValue(props.startValue || props.defaultStartValue);\n    var endValue = formatDateValue(props.endValue || props.defaultEndValue);\n    var visibleMonth = getVisibleMonth(props.defaultVisibleMonth, startValue);\n    _this.state = {\n      startValue: startValue,\n      endValue: endValue,\n      mode: props.mode,\n      prevMode: props.mode,\n      startVisibleMonth: visibleMonth,\n      activePanel: undefined,\n      lastMode: undefined,\n      lastPanelType: 'start' // enum, 包括 start end\n\n    };\n    _this.today = moment();\n    return _this;\n  }\n\n  RangeCalendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    var st = {};\n\n    if ('startValue' in props) {\n      var startValue = formatDateValue(props.startValue);\n      st.startValue = startValue;\n\n      if (startValue && !startValue.isSame(state.startValue, 'day')) {\n        st.startVisibleMonth = startValue;\n      }\n    }\n\n    if ('endValue' in props) {\n      st.endValue = formatDateValue(props.endValue);\n    }\n\n    if ('mode' in props && state.prevMode !== props.mode) {\n      st.prevMode = props.mode;\n      st.mode = props.mode;\n    }\n\n    return st;\n  };\n  /**\n   * 根据日期偏移量设置当前展示的月份\n   * @param {Number} offset 日期偏移量\n   * @param {String} type 日期偏移类型 days, months, years\n   */\n\n\n  RangeCalendar.prototype.render = function render() {\n    var _classnames;\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        rtl = _props.rtl,\n        dateCellRender = _props.dateCellRender,\n        monthCellRender = _props.monthCellRender,\n        yearCellRender = _props.yearCellRender,\n        className = _props.className,\n        format = _props.format,\n        locale = _props.locale,\n        showOtherMonth = _props.showOtherMonth,\n        disabledDate = _props.disabledDate,\n        disableChangeMode = _props.disableChangeMode,\n        yearRange = _props.yearRange,\n        others = _objectWithoutProperties(_props, ['prefix', 'rtl', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'className', 'format', 'locale', 'showOtherMonth', 'disabledDate', 'disableChangeMode', 'yearRange']);\n\n    var _state = this.state,\n        startValue = _state.startValue,\n        endValue = _state.endValue,\n        mode = _state.mode,\n        startVisibleMonth = _state.startVisibleMonth,\n        activePanel = _state.activePanel; // reset moment locale\n\n    if (locale.momentLocale) {\n      startValue && startValue.locale(locale.momentLocale);\n      endValue && endValue.locale(locale.momentLocale);\n      startVisibleMonth.locale(locale.momentLocale);\n    }\n\n    if (rtl) {\n      others.dir = 'rtl';\n    }\n\n    var localeData = getLocaleData(locale.format || {}, startVisibleMonth.localeData());\n    var endVisibleMonth = startVisibleMonth.clone().add(1, 'months');\n    var headerProps = {\n      prefix: prefix,\n      rtl: rtl,\n      mode: mode,\n      locale: locale,\n      momentLocale: localeData,\n      startVisibleMonth: startVisibleMonth,\n      endVisibleMonth: endVisibleMonth,\n      changeVisibleMonth: this.changeVisibleMonth,\n      changeMode: this.changeMode,\n      yearRange: yearRange,\n      disableChangeMode: disableChangeMode\n    };\n    var tableProps = {\n      prefix: prefix,\n      value: startValue,\n      startValue: startValue,\n      endValue: endValue,\n      mode: mode,\n      locale: locale,\n      momentLocale: localeData,\n      showOtherMonth: showOtherMonth,\n      today: this.today,\n      disabledDate: disabledDate,\n      dateCellRender: dateCellRender,\n      monthCellRender: monthCellRender,\n      yearCellRender: yearCellRender,\n      changeMode: this.changeMode,\n      changeVisibleMonth: this.changeVisibleMonth\n    };\n    var visibleMonths = {\n      start: startVisibleMonth,\n      end: endVisibleMonth\n    };\n    var visibleMonth = visibleMonths[activePanel];\n    var header = void 0;\n    var table = void 0;\n\n    switch (mode) {\n      case CALENDAR_MODE_DATE:\n        {\n          table = [React.createElement('div', {\n            className: prefix + 'calendar-body-left',\n            key: 'left-panel'\n          }, React.createElement(DateTable, _extends({\n            format: format\n          }, tableProps, {\n            visibleMonth: startVisibleMonth,\n            onSelectDate: this.onSelectCell\n          }))), React.createElement('div', {\n            className: prefix + 'calendar-body-right',\n            key: 'right-panel'\n          }, React.createElement(DateTable, _extends({\n            format: format\n          }, tableProps, {\n            visibleMonth: endVisibleMonth,\n            onSelectDate: this.onSelectCell\n          })))];\n          header = React.createElement(RangePanelHeader, _extends({}, headerProps, {\n            goPrevYear: this.goPrevYear,\n            goPrevMonth: this.goPrevMonth,\n            goNextYear: this.goNextYear,\n            goNextMonth: this.goNextMonth\n          }));\n          break;\n        }\n\n      case CALENDAR_MODE_MONTH:\n        {\n          table = React.createElement(MonthTable, _extends({}, tableProps, {\n            visibleMonth: visibleMonth,\n            onSelectMonth: this.onSelectCell\n          }));\n          header = React.createElement(MonthPanelHeader, _extends({}, headerProps, {\n            visibleMonth: visibleMonth,\n            goPrevYear: this.goPrevYear,\n            goNextYear: this.goNextYear\n          }));\n          break;\n        }\n\n      case CALENDAR_MODE_YEAR:\n        {\n          table = React.createElement(YearTable, _extends({}, tableProps, {\n            rtl: rtl,\n            visibleMonth: visibleMonth,\n            onSelectYear: this.onSelectCell,\n            goPrevDecade: this.goPrevDecade,\n            goNextDecade: this.goNextDecade\n          }));\n          header = React.createElement(YearPanelHeader, _extends({}, headerProps, {\n            visibleMonth: visibleMonth,\n            goPrevDecade: this.goPrevDecade,\n            goNextDecade: this.goNextDecade\n          }));\n          break;\n        }\n    }\n\n    var classNames = classnames((_classnames = {}, _classnames[prefix + 'calendar'] = true, _classnames[prefix + 'calendar-range'] = true, _classnames), className);\n    return React.createElement('div', _extends({}, obj.pickOthers(RangeCalendar.propTypes, others), {\n      className: classNames\n    }), header, React.createElement('div', {\n      className: prefix + 'calendar-body'\n    }, table));\n  };\n\n  return RangeCalendar;\n}(React.Component), _class.propTypes = _extends({}, ConfigProvider.propTypes, {\n  /**\n   * 样式前缀\n   */\n  prefix: PropTypes.string,\n  rtl: PropTypes.bool,\n\n  /**\n   * 默认的开始日期\n   */\n  defaultStartValue: checkMomentObj,\n\n  /**\n   * 默认的结束日期\n   */\n  defaultEndValue: checkMomentObj,\n\n  /**\n   * 开始日期（moment 对象）\n   */\n  startValue: checkMomentObj,\n\n  /**\n   * 结束日期（moment 对象）\n   */\n  endValue: checkMomentObj,\n  // 面板模式\n  mode: PropTypes.oneOf(CALENDAR_MODES),\n  // 禁用更改面板模式，采用 dropdown 的方式切换显示日期 (暂不正式对外透出)\n  disableChangeMode: PropTypes.bool,\n  // 日期值的格式（用于日期title显示的格式）\n  format: PropTypes.string,\n  yearRange: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * 是否显示非本月的日期\n   */\n  showOtherMonth: PropTypes.bool,\n\n  /**\n   * 模板展示的月份（起始月份）\n   */\n  defaultVisibleMonth: PropTypes.func,\n\n  /**\n   * 展现的月份变化时的回调\n   * @param {Object} value 显示的月份 (moment 对象)\n   * @param {String} reason 触发月份改变原因\n   */\n  onVisibleMonthChange: PropTypes.func,\n\n  /**\n   * 不可选择的日期\n   * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n   * @param {String} view 当前视图类型，year: 年， month: 月, date: 日\n   * @returns {Boolean}\n   */\n  disabledDate: PropTypes.func,\n\n  /**\n   * 选择日期单元格时的回调\n   * @param {Object} value 对应的日期值 (moment 对象)\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * 自定义日期单元格渲染\n   */\n  dateCellRender: PropTypes.func,\n\n  /**\n   * 自定义月份渲染函数\n   * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n   * @returns {ReactNode}\n   */\n  monthCellRender: PropTypes.func,\n  yearCellRender: PropTypes.func,\n  // 兼容 0.x yearCellRender\n  locale: PropTypes.object,\n  className: PropTypes.string\n}), _class.defaultProps = {\n  prefix: 'next-',\n  rtl: false,\n  mode: CALENDAR_MODE_DATE,\n  disableChangeMode: false,\n  format: 'YYYY-MM-DD',\n  dateCellRender: function dateCellRender(value) {\n    return value.date();\n  },\n  onSelect: func.noop,\n  onVisibleMonthChange: func.noop,\n  locale: nextLocale.Calendar,\n  showOtherMonth: false\n}, _temp);\nRangeCalendar.displayName = 'RangeCalendar';\nexport default ConfigProvider.config(polyfill(RangeCalendar), {\n  componentName: 'Calendar'\n});","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/calendar/range-calendar.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","_class","_temp","React","PropTypes","polyfill","classnames","moment","ConfigProvider","nextLocale","obj","func","RangePanelHeader","MonthPanelHeader","YearPanelHeader","DateTable","MonthTable","YearTable","checkMomentObj","formatDateValue","getVisibleMonth","isSameYearMonth","CALENDAR_MODES","CALENDAR_MODE_DATE","CALENDAR_MODE_MONTH","CALENDAR_MODE_YEAR","getLocaleData","RangeCalendar","_React$Component","props","context","_this","call","onSelectCell","date","nextMode","state","mode","onSelect","changeVisibleMonth","changeMode","activePanel","_this$state","lastMode","lastPanelType","setState","reason","startVisibleMonth","clone","add","onVisibleMonthChange","changeVisibleMonthByOffset","offset","type","offsetDate","goPrevDecade","goNextDecade","goPrevYear","goNextYear","goPrevMonth","goNextMonth","startValue","defaultStartValue","endValue","defaultEndValue","visibleMonth","defaultVisibleMonth","prevMode","undefined","today","getDerivedStateFromProps","st","isSame","prototype","render","_classnames","_props","prefix","rtl","dateCellRender","monthCellRender","yearCellRender","className","format","locale","showOtherMonth","disabledDate","disableChangeMode","yearRange","others","_state","momentLocale","dir","localeData","endVisibleMonth","headerProps","tableProps","value","visibleMonths","start","end","header","table","createElement","key","onSelectDate","onSelectMonth","onSelectYear","classNames","pickOthers","propTypes","Component","string","bool","oneOf","arrayOf","number","object","defaultProps","noop","Calendar","displayName","config","componentName"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport ConfigProvider from '../config-provider';\nimport nextLocale from '../locale/zh-cn';\nimport { obj, func } from '../util';\nimport RangePanelHeader from './head/range-panel-header';\nimport MonthPanelHeader from './head/month-panel-header';\nimport YearPanelHeader from './head/year-panel-header';\nimport DateTable from './table/date-table';\nimport MonthTable from './table/month-table';\nimport YearTable from './table/year-table';\nimport { checkMomentObj, formatDateValue, getVisibleMonth, isSameYearMonth, CALENDAR_MODES, CALENDAR_MODE_DATE, CALENDAR_MODE_MONTH, CALENDAR_MODE_YEAR, getLocaleData } from './utils';\n\nvar RangeCalendar = (_temp = _class = function (_React$Component) {\n    _inherits(RangeCalendar, _React$Component);\n\n    function RangeCalendar(props, context) {\n        _classCallCheck(this, RangeCalendar);\n\n        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n        _this.onSelectCell = function (date, nextMode) {\n            if (_this.state.mode === CALENDAR_MODE_DATE) {\n                _this.props.onSelect(date);\n            } else {\n                _this.changeVisibleMonth(date, 'cellClick');\n            }\n\n            _this.changeMode(nextMode);\n        };\n\n        _this.changeMode = function (mode, activePanel) {\n            var _this$state = _this.state,\n                lastMode = _this$state.lastMode,\n                lastPanelType = _this$state.lastPanelType;\n\n\n            var state = {\n                lastMode: mode,\n                // rangePicker的panel下，选 year -> month ，从当前函数的activePanel传来的数据已经拿不到 start end panel的状态了，需要根据 lastMode 来判断\n                lastPanelType: lastMode === 'year' ? lastPanelType : activePanel\n            };\n            if (typeof mode === 'string' && mode !== _this.state.mode) {\n                state.mode = mode;\n            }\n            if (activePanel && activePanel !== _this.state.activePanel) {\n                state.activePanel = activePanel;\n            }\n\n            _this.setState(state);\n        };\n\n        _this.changeVisibleMonth = function (date, reason) {\n            var lastPanelType = _this.state.lastPanelType;\n\n            if (!isSameYearMonth(date, _this.state.startVisibleMonth)) {\n                var startVisibleMonth = lastPanelType === 'end' ? date.clone().add(-1, 'month') : date;\n                _this.setState({ startVisibleMonth: startVisibleMonth });\n                _this.props.onVisibleMonthChange(startVisibleMonth, reason);\n            }\n        };\n\n        _this.changeVisibleMonthByOffset = function (offset, type) {\n            var offsetDate = _this.state.startVisibleMonth.clone().add(offset, type);\n            _this.changeVisibleMonth(offsetDate, 'buttonClick');\n        };\n\n        _this.goPrevDecade = function () {\n            _this.changeVisibleMonthByOffset(-10, 'years');\n        };\n\n        _this.goNextDecade = function () {\n            _this.changeVisibleMonthByOffset(10, 'years');\n        };\n\n        _this.goPrevYear = function () {\n            _this.changeVisibleMonthByOffset(-1, 'years');\n        };\n\n        _this.goNextYear = function () {\n            _this.changeVisibleMonthByOffset(1, 'years');\n        };\n\n        _this.goPrevMonth = function () {\n            _this.changeVisibleMonthByOffset(-1, 'months');\n        };\n\n        _this.goNextMonth = function () {\n            _this.changeVisibleMonthByOffset(1, 'months');\n        };\n\n        var startValue = formatDateValue(props.startValue || props.defaultStartValue);\n        var endValue = formatDateValue(props.endValue || props.defaultEndValue);\n        var visibleMonth = getVisibleMonth(props.defaultVisibleMonth, startValue);\n\n        _this.state = {\n            startValue: startValue,\n            endValue: endValue,\n            mode: props.mode,\n            prevMode: props.mode,\n            startVisibleMonth: visibleMonth,\n            activePanel: undefined,\n            lastMode: undefined,\n            lastPanelType: 'start' // enum, 包括 start end\n        };\n        _this.today = moment();\n        return _this;\n    }\n\n    RangeCalendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n        var st = {};\n        if ('startValue' in props) {\n            var startValue = formatDateValue(props.startValue);\n            st.startValue = startValue;\n            if (startValue && !startValue.isSame(state.startValue, 'day')) {\n                st.startVisibleMonth = startValue;\n            }\n        }\n\n        if ('endValue' in props) {\n            st.endValue = formatDateValue(props.endValue);\n        }\n\n        if ('mode' in props && state.prevMode !== props.mode) {\n            st.prevMode = props.mode;\n            st.mode = props.mode;\n        }\n\n        return st;\n    };\n\n    /**\n     * 根据日期偏移量设置当前展示的月份\n     * @param {Number} offset 日期偏移量\n     * @param {String} type 日期偏移类型 days, months, years\n     */\n\n\n    RangeCalendar.prototype.render = function render() {\n        var _classnames;\n\n        var _props = this.props,\n            prefix = _props.prefix,\n            rtl = _props.rtl,\n            dateCellRender = _props.dateCellRender,\n            monthCellRender = _props.monthCellRender,\n            yearCellRender = _props.yearCellRender,\n            className = _props.className,\n            format = _props.format,\n            locale = _props.locale,\n            showOtherMonth = _props.showOtherMonth,\n            disabledDate = _props.disabledDate,\n            disableChangeMode = _props.disableChangeMode,\n            yearRange = _props.yearRange,\n            others = _objectWithoutProperties(_props, ['prefix', 'rtl', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'className', 'format', 'locale', 'showOtherMonth', 'disabledDate', 'disableChangeMode', 'yearRange']);\n\n        var _state = this.state,\n            startValue = _state.startValue,\n            endValue = _state.endValue,\n            mode = _state.mode,\n            startVisibleMonth = _state.startVisibleMonth,\n            activePanel = _state.activePanel;\n\n        // reset moment locale\n\n        if (locale.momentLocale) {\n            startValue && startValue.locale(locale.momentLocale);\n            endValue && endValue.locale(locale.momentLocale);\n            startVisibleMonth.locale(locale.momentLocale);\n        }\n\n        if (rtl) {\n            others.dir = 'rtl';\n        }\n        var localeData = getLocaleData(locale.format || {}, startVisibleMonth.localeData());\n\n        var endVisibleMonth = startVisibleMonth.clone().add(1, 'months');\n\n        var headerProps = {\n            prefix: prefix,\n            rtl: rtl,\n            mode: mode,\n            locale: locale,\n            momentLocale: localeData,\n            startVisibleMonth: startVisibleMonth,\n            endVisibleMonth: endVisibleMonth,\n            changeVisibleMonth: this.changeVisibleMonth,\n            changeMode: this.changeMode,\n            yearRange: yearRange,\n            disableChangeMode: disableChangeMode\n        };\n\n        var tableProps = {\n            prefix: prefix,\n            value: startValue,\n            startValue: startValue,\n            endValue: endValue,\n            mode: mode,\n            locale: locale,\n            momentLocale: localeData,\n            showOtherMonth: showOtherMonth,\n            today: this.today,\n            disabledDate: disabledDate,\n            dateCellRender: dateCellRender,\n            monthCellRender: monthCellRender,\n            yearCellRender: yearCellRender,\n            changeMode: this.changeMode,\n            changeVisibleMonth: this.changeVisibleMonth\n        };\n\n        var visibleMonths = {\n            start: startVisibleMonth,\n            end: endVisibleMonth\n        };\n\n        var visibleMonth = visibleMonths[activePanel];\n\n        var header = void 0;\n        var table = void 0;\n\n        switch (mode) {\n            case CALENDAR_MODE_DATE:\n                {\n                    table = [React.createElement(\n                        'div',\n                        { className: prefix + 'calendar-body-left', key: 'left-panel' },\n                        React.createElement(DateTable, _extends({\n                            format: format\n                        }, tableProps, {\n                            visibleMonth: startVisibleMonth,\n                            onSelectDate: this.onSelectCell\n                        }))\n                    ), React.createElement(\n                        'div',\n                        { className: prefix + 'calendar-body-right', key: 'right-panel' },\n                        React.createElement(DateTable, _extends({\n                            format: format\n                        }, tableProps, {\n                            visibleMonth: endVisibleMonth,\n                            onSelectDate: this.onSelectCell\n                        }))\n                    )];\n                    header = React.createElement(RangePanelHeader, _extends({}, headerProps, {\n                        goPrevYear: this.goPrevYear,\n                        goPrevMonth: this.goPrevMonth,\n                        goNextYear: this.goNextYear,\n                        goNextMonth: this.goNextMonth\n                    }));\n                    break;\n                }\n            case CALENDAR_MODE_MONTH:\n                {\n                    table = React.createElement(MonthTable, _extends({}, tableProps, { visibleMonth: visibleMonth, onSelectMonth: this.onSelectCell }));\n                    header = React.createElement(MonthPanelHeader, _extends({}, headerProps, {\n                        visibleMonth: visibleMonth,\n                        goPrevYear: this.goPrevYear,\n                        goNextYear: this.goNextYear\n                    }));\n                    break;\n                }\n            case CALENDAR_MODE_YEAR:\n                {\n                    table = React.createElement(YearTable, _extends({}, tableProps, {\n                        rtl: rtl,\n                        visibleMonth: visibleMonth,\n                        onSelectYear: this.onSelectCell,\n                        goPrevDecade: this.goPrevDecade,\n                        goNextDecade: this.goNextDecade\n                    }));\n                    header = React.createElement(YearPanelHeader, _extends({}, headerProps, {\n                        visibleMonth: visibleMonth,\n                        goPrevDecade: this.goPrevDecade,\n                        goNextDecade: this.goNextDecade\n                    }));\n                    break;\n                }\n        }\n\n        var classNames = classnames((_classnames = {}, _classnames[prefix + 'calendar'] = true, _classnames[prefix + 'calendar-range'] = true, _classnames), className);\n\n        return React.createElement(\n            'div',\n            _extends({}, obj.pickOthers(RangeCalendar.propTypes, others), { className: classNames }),\n            header,\n            React.createElement(\n                'div',\n                { className: prefix + 'calendar-body' },\n                table\n            )\n        );\n    };\n\n    return RangeCalendar;\n}(React.Component), _class.propTypes = _extends({}, ConfigProvider.propTypes, {\n    /**\n     * 样式前缀\n     */\n    prefix: PropTypes.string,\n    rtl: PropTypes.bool,\n    /**\n     * 默认的开始日期\n     */\n    defaultStartValue: checkMomentObj,\n    /**\n     * 默认的结束日期\n     */\n    defaultEndValue: checkMomentObj,\n    /**\n     * 开始日期（moment 对象）\n     */\n    startValue: checkMomentObj,\n    /**\n     * 结束日期（moment 对象）\n     */\n    endValue: checkMomentObj,\n    // 面板模式\n    mode: PropTypes.oneOf(CALENDAR_MODES),\n    // 禁用更改面板模式，采用 dropdown 的方式切换显示日期 (暂不正式对外透出)\n    disableChangeMode: PropTypes.bool,\n    // 日期值的格式（用于日期title显示的格式）\n    format: PropTypes.string,\n    yearRange: PropTypes.arrayOf(PropTypes.number),\n    /**\n     * 是否显示非本月的日期\n     */\n    showOtherMonth: PropTypes.bool,\n    /**\n     * 模板展示的月份（起始月份）\n     */\n    defaultVisibleMonth: PropTypes.func,\n    /**\n     * 展现的月份变化时的回调\n     * @param {Object} value 显示的月份 (moment 对象)\n     * @param {String} reason 触发月份改变原因\n     */\n    onVisibleMonthChange: PropTypes.func,\n    /**\n     * 不可选择的日期\n     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日\n     * @returns {Boolean}\n     */\n    disabledDate: PropTypes.func,\n    /**\n     * 选择日期单元格时的回调\n     * @param {Object} value 对应的日期值 (moment 对象)\n     */\n    onSelect: PropTypes.func,\n    /**\n     * 自定义日期单元格渲染\n     */\n    dateCellRender: PropTypes.func,\n    /**\n     * 自定义月份渲染函数\n     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象\n     * @returns {ReactNode}\n     */\n    monthCellRender: PropTypes.func,\n    yearCellRender: PropTypes.func, // 兼容 0.x yearCellRender\n    locale: PropTypes.object,\n    className: PropTypes.string\n}), _class.defaultProps = {\n    prefix: 'next-',\n    rtl: false,\n    mode: CALENDAR_MODE_DATE,\n    disableChangeMode: false,\n    format: 'YYYY-MM-DD',\n    dateCellRender: function dateCellRender(value) {\n        return value.date();\n    },\n    onSelect: func.noop,\n    onVisibleMonthChange: func.noop,\n    locale: nextLocale.Calendar,\n    showOtherMonth: false\n}, _temp);\nRangeCalendar.displayName = 'RangeCalendar';\n\n\nexport default ConfigProvider.config(polyfill(RangeCalendar), {\n    componentName: 'Calendar'\n});"]},"metadata":{},"sourceType":"module"}