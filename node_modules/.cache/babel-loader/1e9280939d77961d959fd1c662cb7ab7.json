{"ast":null,"code":"import _Table from \"@alifd/next/es/table\";\nimport _Button from \"@alifd/next/es/button\";\nimport _Dialog from \"@alifd/next/es/dialog\";\nimport _DatePicker from \"@alifd/next/es/date-picker\";\nimport _Input from \"@alifd/next/es/input\";\nimport _Form from \"@alifd/next/es/form\";\nimport _Select from \"@alifd/next/es/select\";\n\nvar _jsxFileName = \"/Users/Chris/Project/lunch-order-backstage/src/components/OrderTable/OrderTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Option = _Select.Option;\nconst {\n  Item\n} = _Form;\n\nconst OrderTable = props => {\n  _s();\n\n  const {\n    dbName,\n    keys\n  } = props.tarProps;\n  const [listData, setListData] = useState([]);\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\"); // console.log(\"writeData\", writeData);\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n    obj[key] = value;\n    setWriteData({ ...writeData,\n      ...obj\n    });\n  };\n\n  const createSend = () => {\n    //-------Create Data 送出\n    if (editKey == true) {\n      //Check is edit state\n      listData[editIndex] = writeData;\n      setListData([...listData]);\n      setWriteData({});\n    } else {\n      console.log(listData, writeData);\n      setListData([...listData, { ...writeData\n      }]);\n      setWriteData({});\n    }\n  };\n\n  useEffect(() => {\n    if (props.tarData) {\n      setListData([...props.tarData]); //console.log('??',props.tarData);\n    }\n  }, []);\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n\n    switch (type) {\n      case \"input\":\n        element = /*#__PURE__*/_jsxDEV(_Input, {\n          value: writeData[e],\n          onChange: value => {\n            addCreateData(e, value);\n          },\n          placeholder: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case \"datePicker\":\n        element = /*#__PURE__*/_jsxDEV(_DatePicker, {\n          value: writeData[e],\n          placeholder: e,\n          onChange: value => {\n            addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case \"textArea\":\n        element = /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n          value: writeData[e],\n          placeholder: e,\n          maxLength: 500,\n          rows: 6,\n          hasLimitHint: true,\n          \"aria-label\": \"input max length 500\",\n          onChange: value => {\n            addCreateData(e, value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n        break;\n    }\n\n    return element;\n  };\n\n  const deleteEvent = id => {\n    // Delete Data\n    let updatedData = [...listData].filter(x => x.uid !== id);\n    setListData(updatedData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Dialog, {\n      hasMask: false,\n      visible: popupState,\n      onOk: () => {\n        createSend();\n        setPopupState(false);\n      },\n      onCancel: () => {\n        setPopupState(false);\n        setWriteData({});\n      },\n      onClose: () => {\n        setPopupState(false);\n        setWriteData({});\n      },\n      children: [...Object.keys(keys)].map((e, nb) => {\n        //-------Render Create Element\n        const type = keys[e].type;\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(_Form, {\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              label: keys[e].text,\n              children: typeComponents(e, type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, keys[e].text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      onClick: () => {\n        setPopupState(true);\n      },\n      children: \"\\u65B0\\u589E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Table, {\n      dataSource: listData,\n      children: [[...Object.keys(keys)].map(list => {\n        //  -------Render Table Data\n        return /*#__PURE__*/_jsxDEV(_Table.Column, {\n          title: keys[list].text,\n          dataIndex: list\n        }, keys[list].text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(_Table.Column, {\n        title: \"\\u64CD\\u4F5C\",\n        cell: (value, index, record) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(_Button, {\n              type: \"normal\",\n              onClick: () => {\n                setPopupState(true);\n                setEditKey(true);\n                setEditIndex(index);\n                setWriteData({ ...listData[index]\n                });\n              },\n              children: \"\\u7DE8\\u8F2F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              warning: true,\n              onClick: () => {\n                deleteEvent(record.uid);\n              },\n              children: \"\\u522A\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderTable, \"E6dFfL7o0PILML+5bh+yL+BTkO0=\");\n\n_c = OrderTable;\nexport default OrderTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderTable\");","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/src/components/OrderTable/OrderTable.jsx"],"names":["React","useState","useEffect","Fragment","v4","uuidv4","moment","Option","Item","OrderTable","props","dbName","keys","tarProps","listData","setListData","writeData","setWriteData","popupState","setPopupState","editKey","setEditKey","editIndex","setEditIndex","addCreateData","key","value","obj","createSend","console","log","tarData","typeComponents","e","type","element","format","deleteEvent","id","updatedData","filter","x","uid","Object","map","nb","text","list","index","record"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AACA,MAAMC,MAAM,GAAG,QAAOA,MAAtB;AACA,MAAM;AAAEC,EAAAA;AAAF,SAAN;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBF,KAAK,CAACG,QAA/B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C,CAN4B,CAQ5B;;AAEA,QAAMuB,aAAa,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC;AAEAC,IAAAA,GAAG,CAACF,GAAD,CAAH,GAAWC,KAAX;AACAT,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,SAAGW;AAAnB,KAAD,CAAZ;AACD,GALD;;AAMA,QAAMC,UAAU,GAAG,MAAM;AACvB;AACA,QAAIR,OAAO,IAAI,IAAf,EAAqB;AACnB;AACAN,MAAAA,QAAQ,CAACQ,SAAD,CAAR,GAAsBN,SAAtB;AAEAD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX;AACAG,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KAND,MAMO;AAELY,MAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ,EAAqBE,SAArB;AACAD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,EAAE,GAAGE;AAAL,OAAd,CAAD,CAAX;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GAdD;;AAgBAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,KAAK,CAACqB,OAAV,EAAmB;AACjBhB,MAAAA,WAAW,CAAC,CAAC,GAAGL,KAAK,CAACqB,OAAV,CAAD,CAAX,CADiB,CAEjB;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,cAAc,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAClC;AACA,QAAIC,OAAJ;;AACA,YAAQD,IAAR;AACE,WAAK,OAAL;AACEC,QAAAA,OAAO,gBACL;AACE,UAAA,KAAK,EAAEnB,SAAS,CAACiB,CAAD,CADlB;AAEE,UAAA,QAAQ,EAAGP,KAAD,IAAW;AACnBF,YAAAA,aAAa,CAACS,CAAD,EAAIP,KAAJ,CAAb;AACD,WAJH;AAKE,UAAA,WAAW,EAAEO;AALf;AAAA;AAAA;AAAA;AAAA,gBADF;AASA;;AACF,WAAK,YAAL;AACEE,QAAAA,OAAO,gBACL;AACE,UAAA,KAAK,EAAEnB,SAAS,CAACiB,CAAD,CADlB;AAEE,UAAA,WAAW,EAAEA,CAFf;AAGE,UAAA,QAAQ,EAAGP,KAAD,IAAW;AACnBF,YAAAA,aAAa,CAACS,CAAD,EAAI3B,MAAM,CAACoB,KAAD,CAAN,CAAcU,MAAd,CAAqB,YAArB,CAAJ,CAAb;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBADF;AASA;;AACF,WAAK,UAAL;AACED,QAAAA,OAAO,gBACL,eAAO,QAAP;AACE,UAAA,KAAK,EAAEnB,SAAS,CAACiB,CAAD,CADlB;AAEE,UAAA,WAAW,EAAEA,CAFf;AAGE,UAAA,SAAS,EAAE,GAHb;AAIE,UAAA,IAAI,EAAE,CAJR;AAKE,UAAA,YAAY,MALd;AAME,wBAAW,sBANb;AAOE,UAAA,QAAQ,EAAGP,KAAD,IAAW;AACnBF,YAAAA,aAAa,CAACS,CAAD,EAAIP,KAAJ,CAAb;AACD;AATH;AAAA;AAAA;AAAA;AAAA,gBADF;AAaA;AArCJ;;AAuCA,WAAOS,OAAP;AACD,GA3CD;;AA6CA,QAAME,WAAW,GAAIC,EAAD,IAAQ;AAC1B;AACA,QAAIC,WAAW,GAAG,CAAC,GAAGzB,QAAJ,EAAc0B,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,EAAtC,CAAlB;AACAvB,IAAAA,WAAW,CAACwB,WAAD,CAAX;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,KADX;AAEE,MAAA,OAAO,EAAErB,UAFX;AAGE,MAAA,IAAI,EAAE,MAAM;AACVU,QAAAA,UAAU;AACVT,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OANH;AAOE,MAAA,QAAQ,EAAE,MAAM;AACdA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,OAVH;AAWE,MAAA,OAAO,EAAE,MAAM;AACbE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,OAdH;AAAA,gBAgBG,CAAC,GAAG0B,MAAM,CAAC/B,IAAP,CAAYA,IAAZ,CAAJ,EAAuBgC,GAAvB,CAA2B,CAACX,CAAD,EAAIY,EAAJ,KAAW;AACrC;AACA,cAAMX,IAAI,GAAGtB,IAAI,CAACqB,CAAD,CAAJ,CAAQC,IAArB;AAEA,4BACC,QAAC,QAAD;AAAA,iCACG;AAAA,mCACE,QAAC,IAAD;AAAO,cAAA,KAAK,EAAEtB,IAAI,CAACqB,CAAD,CAAJ,CAAQa,IAAtB;AAAA,wBAA6Bd,cAAc,CAACC,CAAD,EAAIC,IAAJ;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADH,WAAetB,IAAI,CAACqB,CAAD,CAAJ,CAAQa,IAAvB;AAAA;AAAA;AAAA;AAAA,gBADD;AAOD,OAXA;AAhBH;AAAA;AAAA;AAAA;AAAA,YADF,eA+BE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,MAAM;AACb3B,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BF,eAwCE;AAAO,MAAA,UAAU,EAAEL,QAAnB;AAAA,iBACG,CAAC,GAAG6B,MAAM,CAAC/B,IAAP,CAAYA,IAAZ,CAAJ,EAAuBgC,GAAvB,CAA4BG,IAAD,IAAU;AACpC;AAEA,4BAAO,eAAO,MAAP;AAAoC,UAAA,KAAK,EAAEnC,IAAI,CAACmC,IAAD,CAAJ,CAAWD,IAAtD;AAA4D,UAAA,SAAS,EAAEC;AAAvE,WAAmBnC,IAAI,CAACmC,IAAD,CAAJ,CAAWD,IAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAJA,CADH,eAME,eAAO,MAAP;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,IAAI,EAAE,CAACpB,KAAD,EAAQsB,KAAR,EAAeC,MAAf,KAA0B;AAC9B,8BACE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAE,MAAM;AACb9B,gBAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,gBAAAA,YAAY,CAACyB,KAAD,CAAZ;AACA/B,gBAAAA,YAAY,CAAC,EAAE,GAAGH,QAAQ,CAACkC,KAAD;AAAb,iBAAD,CAAZ;AACD,eAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE;AACE,cAAA,IAAI,EAAC,SADP;AAEE,cAAA,OAAO,MAFT;AAGE,cAAA,OAAO,EAAE,MAAM;AACbX,gBAAAA,WAAW,CAACY,MAAM,CAACP,GAAR,CAAX;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA,0BADF;AAyBD;AA5BH;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA,kBADF;AAgFD,CA1KD;;GAAMjC,U;;KAAAA,U;AA4KN,eAAeA,UAAf","sourcesContent":["import React,{ useState, useEffect ,Fragment}  from 'react';\nimport { Button, Dialog ,Input,Form,Select,DatePicker,Table} from '@alifd/next';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nconst Option = Select.Option;\nconst { Item } = Form;\n\n\nconst OrderTable = (props) => {\n  const { dbName, keys } = props.tarProps;\n  const [listData, setListData] = useState([]);\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\");\n\n  // console.log(\"writeData\", writeData);\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n   \n    obj[key] = value;\n    setWriteData({ ...writeData, ...obj });\n  };\n  const createSend = () => {\n    //-------Create Data 送出\n    if (editKey == true) {\n      //Check is edit state\n      listData[editIndex] = writeData;\n      \n      setListData([...listData]);\n      setWriteData({});\n    } else {\n    \n      console.log(listData,writeData)\n      setListData([...listData, { ...writeData }]);\n      setWriteData({});\n    }\n  };\n\n  useEffect(() => {\n    if (props.tarData) {\n      setListData([...props.tarData]);\n      //console.log('??',props.tarData);\n    }\n  }, []);\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n    switch (type) {\n      case \"input\":\n        element = (\n          <Input\n            value={writeData[e]}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n            placeholder={e}\n          />\n        );\n        break;\n      case \"datePicker\":\n        element = (\n          <DatePicker\n            value={writeData[e]}\n            placeholder={e}\n            onChange={(value) => {\n              addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n            }}\n          />\n        );\n        break;\n      case \"textArea\":\n        element = (\n          <Input.TextArea\n            value={writeData[e]}\n            placeholder={e}\n            maxLength={500}\n            rows={6}\n            hasLimitHint\n            aria-label=\"input max length 500\"\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n    }\n    return element;\n  };\n\n  const deleteEvent = (id) => {\n    // Delete Data\n    let updatedData = [...listData].filter((x) => x.uid !== id);\n    setListData(updatedData);\n  };\n\n  return (\n    <>\n      <Dialog\n        hasMask={false}\n        visible={popupState}\n        onOk={() => {\n          createSend();\n          setPopupState(false);\n        }}\n        onCancel={() => {\n          setPopupState(false);\n          setWriteData({});\n        }}\n        onClose={() => {\n          setPopupState(false);\n          setWriteData({});\n        }}\n      >\n        {[...Object.keys(keys)].map((e, nb) => {\n          //-------Render Create Element\n          const type = keys[e].type;\n\n          return (\n           <Fragment key={keys[e].text}>\n              <Form> \n                <Item  label={keys[e].text}>{typeComponents(e, type)}</Item>\n              </Form>\n            </Fragment>\n          );\n        })}\n      </Dialog>\n\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setPopupState(true);\n        }}\n      >\n        新增\n      </Button>\n\n      <Table dataSource={listData}>\n        {[...Object.keys(keys)].map((list) => {\n          //  -------Render Table Data\n\n          return <Table.Column key={keys[list].text} title={keys[list].text} dataIndex={list} />;\n        })}\n        <Table.Column\n          title=\"操作\"\n          cell={(value, index, record) => {\n            return (\n              <>\n                <Button\n                  type=\"normal\"\n                  onClick={() => {\n                    setPopupState(true);\n                    setEditKey(true);\n                    setEditIndex(index);\n                    setWriteData({ ...listData[index] });\n                  }}\n                >\n                  編輯\n                </Button>\n\n                <Button\n                  type=\"primary\"\n                  warning\n                  onClick={() => {\n                    deleteEvent(record.uid);\n                  }}\n                >\n                  刪除\n                </Button>\n              </>\n            );\n          }}\n        />\n      </Table>\n    </>\n  );\n};\n\nexport default OrderTable;\n\n"]},"metadata":{},"sourceType":"module"}