{"ast":null,"code":"import _typeof from 'babel-runtime/helpers/typeof';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Grid from '../grid';\nimport RGrid from '../responsive-grid';\nimport { obj } from '../util';\nimport Error from './error';\nimport { getFieldInitCfg } from './enhance';\nvar Row = Grid.Row,\n    Col = Grid.Col;\nvar Cell = RGrid.Cell;\nvar isNil = obj.isNil;\n/** Form.Item\n *  @description 手动传递了 wrapCol labelCol 会使用 Grid 辅助布局; labelAlign='top' 会强制禁用 Grid\n *  @order 1\n */\n\nvar Item = (_temp = _class = function (_React$Component) {\n  _inherits(Item, _React$Component);\n\n  function Item() {\n    _classCallCheck(this, Item);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n  /**\n   * 从子元素里面提取表单组件\n   */\n\n\n  Item.prototype.getNames = function getNames(children) {\n    var childrenList = React.Children.toArray(children);\n    return childrenList.filter(function (c) {\n      return c.props && ('name' in c.props || 'data-meta' in c.props);\n    }).map(function (c) {\n      return c.props.name || c.props.id;\n    });\n  };\n\n  Item.prototype.getHelper = function getHelper(children) {\n    var help = this.props.help;\n    var _formField = this.context._formField;\n    return React.createElement(Error, {\n      name: help === undefined ? this.getNames(children) : undefined,\n      field: _formField\n    }, help);\n  };\n\n  Item.prototype.getState = function getState(children) {\n    var validateState = this.props.validateState;\n\n    if (validateState) {\n      return validateState;\n    }\n\n    if (this.context._formField) {\n      var getState = this.context._formField.getState;\n      var names = this.getNames(children);\n\n      if (!names.length) {\n        return '';\n      } // get first name\n\n\n      return getState(names[0]);\n    }\n\n    return undefined;\n  };\n\n  Item.prototype.getSize = function getSize() {\n    return this.props.size || this.context._formSize;\n  };\n\n  Item.prototype.getIsPreview = function getIsPreview() {\n    return 'isPreview' in this.props ? this.props.isPreview : this.context._formPreview;\n  };\n\n  Item.prototype.getFullWidth = function getFullWidth() {\n    return isNil(this.props.fullWidth) ? !!this.context._formFullWidth : this.props.fullWidth;\n  };\n\n  Item.prototype.getLabelForErrorMessage = function getLabelForErrorMessage() {\n    var label = this.props.label;\n\n    if (!label || typeof label !== 'string') {\n      return null;\n    }\n\n    label = label.replace(':', '').replace('：', '');\n    var labelForErrorMessage = 'useLabelForErrorMessage' in this.props ? this.props.useLabelForErrorMessage : this.context._formLabelForErrorMessage;\n\n    if (labelForErrorMessage && label) {\n      return label;\n    }\n\n    return null;\n  };\n\n  Item.prototype.getItemLabel = function getItemLabel(children) {\n    var _classNames;\n\n    var _props = this.props,\n        id = _props.id,\n        required = _props.required,\n        _props$asterisk = _props.asterisk,\n        asterisk = _props$asterisk === undefined ? required : _props$asterisk,\n        label = _props.label,\n        labelCol = _props.labelCol,\n        wrapperCol = _props.wrapperCol,\n        prefix = _props.prefix,\n        responsive = _props.responsive,\n        labelWidth = _props.labelWidth,\n        labelTextAlign = _props.labelTextAlign,\n        colon = _props.colon;\n    var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);\n\n    if (!label) {\n      return null;\n    }\n\n    var ele = React.createElement('label', {\n      htmlFor: id || this.getNames(children)[0],\n      required: asterisk,\n      key: 'label'\n    }, label);\n    var cls = classNames((_classNames = {}, _classNames[prefix + 'form-item-label'] = true, _classNames['has-colon'] = colon, _classNames[prefix + 'left'] = labelTextAlign === 'left', _classNames));\n\n    if (responsive && labelWidth && labelAlign !== 'top') {\n      return React.createElement('div', {\n        className: cls,\n        style: {\n          width: labelWidth\n        }\n      }, ele);\n    }\n\n    if ((wrapperCol || labelCol) && labelAlign !== 'top') {\n      return React.createElement(Col, _extends({}, labelCol, {\n        className: cls\n      }), ele);\n    }\n\n    return React.createElement('div', {\n      className: cls\n    }, ele);\n  };\n\n  Item.prototype.getItemWrapper = function getItemWrapper(children) {\n    var _this2 = this;\n\n    var _props2 = this.props,\n        hasFeedback = _props2.hasFeedback,\n        labelCol = _props2.labelCol,\n        wrapperCol = _props2.wrapperCol,\n        extra = _props2.extra,\n        prefix = _props2.prefix,\n        renderPreview = _props2.renderPreview;\n    var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);\n    var state = this.getState(children);\n    var isPreview = this.getIsPreview();\n    var childrenProps = {\n      size: this.getSize()\n    };\n\n    if (isPreview) {\n      childrenProps.isPreview = true;\n    }\n\n    if ('renderPreview' in this.props && typeof renderPreview === 'function') {\n      childrenProps.renderPreview = renderPreview;\n    }\n\n    if (state && (state === 'error' || hasFeedback)) {\n      childrenProps.state = state;\n    }\n\n    if (labelAlign === 'inset') {\n      childrenProps.label = this.getItemLabel(children);\n    }\n\n    var labelForErrorMessage = this.getLabelForErrorMessage();\n    var ele = React.Children.map(children, function (child) {\n      if (child && ['function', 'object'].indexOf(_typeof(child.type)) > -1 && child.type._typeMark !== 'form_item' && child.type._typeMark !== 'form_error') {\n        var extraProps = childrenProps;\n\n        if (_this2.context._formField && 'name' in child.props && !('data-meta' in child.props)) {\n          extraProps = _this2.context._formField.init(child.props.name, _extends({}, getFieldInitCfg(_this2.props, child.type.displayName, labelForErrorMessage), {\n            props: _extends({}, child.props, {\n              ref: child.ref\n            })\n          }), childrenProps);\n        } else {\n          extraProps = _extends({}, child.props, extraProps);\n        }\n\n        return React.cloneElement(child, extraProps);\n      }\n\n      return child;\n    });\n    var help = this.getHelper(children);\n\n    if ((wrapperCol || labelCol) && labelAlign !== 'top') {\n      return React.createElement(Col, _extends({}, wrapperCol, {\n        className: prefix + 'form-item-control',\n        key: 'item'\n      }), ele, ' ', help, ' ', extra);\n    }\n\n    return React.createElement('div', {\n      className: prefix + 'form-item-control'\n    }, ele, ' ', help, ' ', extra);\n  };\n\n  Item.prototype.getLabelAlign = function getLabelAlign(labelAlign, device) {\n    if (device === 'phone') {\n      return 'top';\n    }\n\n    return labelAlign;\n  };\n\n  Item.prototype.render = function render() {\n    var _classNames2;\n\n    var _props3 = this.props,\n        className = _props3.className,\n        style = _props3.style,\n        prefix = _props3.prefix,\n        wrapperCol = _props3.wrapperCol,\n        labelCol = _props3.labelCol,\n        responsive = _props3.responsive,\n        children = _props3.children;\n    var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);\n    var childrenNode = children;\n\n    if (typeof children === 'function' && this.context._formField) {\n      childrenNode = children(this.context._formField.getValues());\n    }\n\n    var state = this.getState(childrenNode);\n    var size = this.getSize();\n    var fullWidth = this.getFullWidth();\n    var isPreview = this.getIsPreview();\n    var itemClassName = classNames((_classNames2 = {}, _classNames2[prefix + 'form-item'] = true, _classNames2['' + prefix + labelAlign] = labelAlign, _classNames2['has-' + state] = !!state, _classNames2['' + prefix + size] = !!size, _classNames2[prefix + 'form-item-fullwidth'] = fullWidth, _classNames2['' + className] = !!className, _classNames2[prefix + 'form-preview'] = isPreview, _classNames2)); // 垂直模式并且左对齐才用到\n\n    var Tag = responsive ? Cell : (wrapperCol || labelCol) && labelAlign !== 'top' ? Row : 'div';\n    var label = labelAlign === 'inset' ? null : this.getItemLabel(childrenNode);\n    return React.createElement(Tag, _extends({}, obj.pickOthers(Item.propTypes, this.props), {\n      className: itemClassName,\n      style: style\n    }), label, this.getItemWrapper(childrenNode));\n  };\n\n  return Item;\n}(React.Component), _class.propTypes = {\n  /**\n   * 样式前缀\n   */\n  prefix: PropTypes.string,\n  rtl: PropTypes.bool,\n\n  /**\n   * label 标签的文本\n   */\n  label: PropTypes.node,\n\n  /**\n   * label 标签布局，通 `<Col>` 组件，设置 span offset 值，如 {span: 8, offset: 16}，该项仅在垂直表单有效\n   */\n  labelCol: PropTypes.object,\n\n  /**\n   * 需要为输入控件设置布局样式时，使用该属性，用法同 labelCol\n   */\n  wrapperCol: PropTypes.object,\n\n  /**\n   * 自定义提示信息，如不设置，则会根据校验规则自动生成.\n   */\n  help: PropTypes.node,\n\n  /**\n   * 额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。 位于错误信息后面\n   */\n  extra: PropTypes.node,\n\n  /**\n   * 校验状态，如不设置，则会根据校验规则自动生成\n   * @enumdesc 失败, 成功, 校验中, 警告\n   */\n  validateState: PropTypes.oneOf(['error', 'success', 'loading', 'warning']),\n\n  /**\n   * 配合 validateState 属性使用，是否展示 success/loading 的校验状态图标, 目前只有Input支持\n   */\n  hasFeedback: PropTypes.bool,\n  //TODO: hasFeedback => validateStatus=[error,success,loading]\n\n  /**\n   * 自定义内联样式\n   */\n  style: PropTypes.object,\n  id: PropTypes.string,\n\n  /**\n   * node 或者 function(values)\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n  /**\n   * 单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。\n   */\n  size: PropTypes.oneOf(['large', 'small', 'medium']),\n\n  /**\n   * 单个 Item 中表单类组件宽度是否是100%\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * 标签的位置, 如果不设置 labelCol 和 wrapperCol 那么默认是标签在上\n   * @enumdesc 上, 左, 内\n   */\n  labelAlign: PropTypes.oneOf(['top', 'left', 'inset']),\n\n  /**\n   * 标签的左右对齐方式\n   * @enumdesc 左, 右\n   */\n  labelTextAlign: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * 扩展class\n   */\n  className: PropTypes.string,\n\n  /**\n   * [表单校验] 不能为空\n   */\n  required: PropTypes.bool,\n\n  /**\n   * required 的星号是否显示\n   */\n  asterisk: PropTypes.bool,\n\n  /**\n   * required 自定义错误信息\n   */\n  requiredMessage: PropTypes.string,\n\n  /**\n   * required 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n   */\n  requiredTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * [表单校验] 最小值\n   */\n  min: PropTypes.number,\n\n  /**\n   * [表单校验] 最大值\n   */\n  max: PropTypes.number,\n\n  /**\n   * min/max 自定义错误信息\n   */\n  minmaxMessage: PropTypes.string,\n\n  /**\n   * min/max 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n   */\n  minmaxTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * [表单校验] 字符串最小长度 / 数组最小个数\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * [表单校验] 字符串最大长度 / 数组最大个数\n   */\n  maxLength: PropTypes.number,\n\n  /**\n   * minLength/maxLength 自定义错误信息\n   */\n  minmaxLengthMessage: PropTypes.string,\n\n  /**\n   * minLength/maxLength 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n   */\n  minmaxLengthTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * [表单校验] 字符串精确长度 / 数组精确个数\n   */\n  length: PropTypes.number,\n\n  /**\n   * length 自定义错误信息\n   */\n  lengthMessage: PropTypes.string,\n\n  /**\n   * length 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n   */\n  lengthTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * 正则校验\n   */\n  pattern: PropTypes.any,\n\n  /**\n   * pattern 自定义错误信息\n   */\n  patternMessage: PropTypes.string,\n\n  /**\n   * pattern 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n   */\n  patternTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * [表单校验] 四种常用的 pattern\n   */\n  format: PropTypes.oneOf(['number', 'email', 'url', 'tel']),\n\n  /**\n   * format 自定义错误信息\n   */\n  formatMessage: PropTypes.string,\n\n  /**\n   * format 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n   */\n  formatTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * [表单校验] 自定义校验函数\n   */\n  validator: PropTypes.func,\n\n  /**\n   * validator 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n   */\n  validatorTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * 是否修改数据时自动触发校验\n   */\n  autoValidate: PropTypes.bool,\n\n  /**\n   * 预设屏幕宽度\n   */\n  device: PropTypes.oneOf(['phone', 'tablet', 'desktop']),\n  responsive: PropTypes.bool,\n\n  /**\n   * 在响应式布局模式下，表单项占多少列\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * 在响应式布局下，且label在左边时，label的宽度是多少\n   */\n  labelWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * 是否开启预览态\n   */\n  isPreview: PropTypes.bool,\n\n  /**\n   * 预览态模式下渲染的内容\n   * @param {any} value 根据包裹的组件的 value 类型而决定\n   */\n  renderPreview: PropTypes.func,\n\n  /**\n   * 是否使用 label 替换校验信息的 name 字段\n   */\n  useLabelForErrorMessage: PropTypes.bool,\n\n  /**\n   * 表示是否显示 label 后面的冒号\n   */\n  colon: PropTypes.bool,\n\n  /**\n   * 子元素的 value 名称\n   */\n  valueName: PropTypes.string\n}, _class.defaultProps = {\n  prefix: 'next-',\n  hasFeedback: false,\n  labelWidth: 100\n}, _class.contextTypes = {\n  _formField: PropTypes.object,\n  _formSize: PropTypes.oneOf(['large', 'small', 'medium']),\n  _formPreview: PropTypes.bool,\n  _formFullWidth: PropTypes.bool,\n  _formLabelForErrorMessage: PropTypes.bool\n}, _class._typeMark = 'form_item', _temp);\nItem.displayName = 'Item';\nexport { Item as default };","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/form/item.js"],"names":["_typeof","_extends","_classCallCheck","_possibleConstructorReturn","_inherits","_class","_temp","React","PropTypes","classNames","Grid","RGrid","obj","Error","getFieldInitCfg","Row","Col","Cell","isNil","Item","_React$Component","apply","arguments","prototype","getNames","children","childrenList","Children","toArray","filter","c","props","map","name","id","getHelper","help","_formField","context","createElement","undefined","field","getState","validateState","names","length","getSize","size","_formSize","getIsPreview","isPreview","_formPreview","getFullWidth","fullWidth","_formFullWidth","getLabelForErrorMessage","label","replace","labelForErrorMessage","useLabelForErrorMessage","_formLabelForErrorMessage","getItemLabel","_classNames","_props","required","_props$asterisk","asterisk","labelCol","wrapperCol","prefix","responsive","labelWidth","labelTextAlign","colon","labelAlign","getLabelAlign","device","ele","htmlFor","key","cls","className","style","width","getItemWrapper","_this2","_props2","hasFeedback","extra","renderPreview","state","childrenProps","child","indexOf","type","_typeMark","extraProps","init","displayName","ref","cloneElement","render","_classNames2","_props3","childrenNode","getValues","itemClassName","Tag","pickOthers","propTypes","Component","string","rtl","bool","node","object","oneOf","oneOfType","func","requiredMessage","requiredTrigger","array","min","number","max","minmaxMessage","minmaxTrigger","minLength","maxLength","minmaxLengthMessage","minmaxLengthTrigger","lengthMessage","lengthTrigger","pattern","any","patternMessage","patternTrigger","format","formatMessage","formatTrigger","validator","validatorTrigger","autoValidate","colSpan","valueName","defaultProps","contextTypes","default"],"mappings":"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","sourcesContent":["import _typeof from 'babel-runtime/helpers/typeof';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Grid from '../grid';\nimport RGrid from '../responsive-grid';\nimport { obj } from '../util';\nimport Error from './error';\nimport { getFieldInitCfg } from './enhance';\n\nvar Row = Grid.Row,\n    Col = Grid.Col;\nvar Cell = RGrid.Cell;\nvar isNil = obj.isNil;\n\n/** Form.Item\n *  @description 手动传递了 wrapCol labelCol 会使用 Grid 辅助布局; labelAlign='top' 会强制禁用 Grid\n *  @order 1\n */\n\nvar Item = (_temp = _class = function (_React$Component) {\n    _inherits(Item, _React$Component);\n\n    function Item() {\n        _classCallCheck(this, Item);\n\n        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n    }\n\n    /**\n     * 从子元素里面提取表单组件\n     */\n    Item.prototype.getNames = function getNames(children) {\n        var childrenList = React.Children.toArray(children);\n        return childrenList.filter(function (c) {\n            return c.props && ('name' in c.props || 'data-meta' in c.props);\n        }).map(function (c) {\n            return c.props.name || c.props.id;\n        });\n    };\n\n    Item.prototype.getHelper = function getHelper(children) {\n        var help = this.props.help;\n        var _formField = this.context._formField;\n\n        return React.createElement(\n            Error,\n            { name: help === undefined ? this.getNames(children) : undefined, field: _formField },\n            help\n        );\n    };\n\n    Item.prototype.getState = function getState(children) {\n        var validateState = this.props.validateState;\n\n        if (validateState) {\n            return validateState;\n        }\n\n        if (this.context._formField) {\n            var getState = this.context._formField.getState;\n\n            var names = this.getNames(children);\n            if (!names.length) {\n                return '';\n            }\n\n            // get first name\n            return getState(names[0]);\n        }\n\n        return undefined;\n    };\n\n    Item.prototype.getSize = function getSize() {\n        return this.props.size || this.context._formSize;\n    };\n\n    Item.prototype.getIsPreview = function getIsPreview() {\n        return 'isPreview' in this.props ? this.props.isPreview : this.context._formPreview;\n    };\n\n    Item.prototype.getFullWidth = function getFullWidth() {\n        return isNil(this.props.fullWidth) ? !!this.context._formFullWidth : this.props.fullWidth;\n    };\n\n    Item.prototype.getLabelForErrorMessage = function getLabelForErrorMessage() {\n        var label = this.props.label;\n\n        if (!label || typeof label !== 'string') {\n            return null;\n        }\n\n        label = label.replace(':', '').replace('：', '');\n\n        var labelForErrorMessage = 'useLabelForErrorMessage' in this.props ? this.props.useLabelForErrorMessage : this.context._formLabelForErrorMessage;\n        if (labelForErrorMessage && label) {\n            return label;\n        }\n\n        return null;\n    };\n\n    Item.prototype.getItemLabel = function getItemLabel(children) {\n        var _classNames;\n\n        var _props = this.props,\n            id = _props.id,\n            required = _props.required,\n            _props$asterisk = _props.asterisk,\n            asterisk = _props$asterisk === undefined ? required : _props$asterisk,\n            label = _props.label,\n            labelCol = _props.labelCol,\n            wrapperCol = _props.wrapperCol,\n            prefix = _props.prefix,\n            responsive = _props.responsive,\n            labelWidth = _props.labelWidth,\n            labelTextAlign = _props.labelTextAlign,\n            colon = _props.colon;\n\n\n        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);\n\n        if (!label) {\n            return null;\n        }\n\n        var ele = React.createElement(\n            'label',\n            { htmlFor: id || this.getNames(children)[0], required: asterisk, key: 'label' },\n            label\n        );\n\n        var cls = classNames((_classNames = {}, _classNames[prefix + 'form-item-label'] = true, _classNames['has-colon'] = colon, _classNames[prefix + 'left'] = labelTextAlign === 'left', _classNames));\n\n        if (responsive && labelWidth && labelAlign !== 'top') {\n            return React.createElement(\n                'div',\n                { className: cls, style: { width: labelWidth } },\n                ele\n            );\n        }\n\n        if ((wrapperCol || labelCol) && labelAlign !== 'top') {\n            return React.createElement(\n                Col,\n                _extends({}, labelCol, { className: cls }),\n                ele\n            );\n        }\n\n        return React.createElement(\n            'div',\n            { className: cls },\n            ele\n        );\n    };\n\n    Item.prototype.getItemWrapper = function getItemWrapper(children) {\n        var _this2 = this;\n\n        var _props2 = this.props,\n            hasFeedback = _props2.hasFeedback,\n            labelCol = _props2.labelCol,\n            wrapperCol = _props2.wrapperCol,\n            extra = _props2.extra,\n            prefix = _props2.prefix,\n            renderPreview = _props2.renderPreview;\n\n\n        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);\n\n        var state = this.getState(children);\n\n        var isPreview = this.getIsPreview();\n        var childrenProps = {\n            size: this.getSize()\n        };\n\n        if (isPreview) {\n            childrenProps.isPreview = true;\n        }\n\n        if ('renderPreview' in this.props && typeof renderPreview === 'function') {\n            childrenProps.renderPreview = renderPreview;\n        }\n\n        if (state && (state === 'error' || hasFeedback)) {\n            childrenProps.state = state;\n        }\n\n        if (labelAlign === 'inset') {\n            childrenProps.label = this.getItemLabel(children);\n        }\n\n        var labelForErrorMessage = this.getLabelForErrorMessage();\n\n        var ele = React.Children.map(children, function (child) {\n            if (child && ['function', 'object'].indexOf(_typeof(child.type)) > -1 && child.type._typeMark !== 'form_item' && child.type._typeMark !== 'form_error') {\n                var extraProps = childrenProps;\n                if (_this2.context._formField && 'name' in child.props && !('data-meta' in child.props)) {\n                    extraProps = _this2.context._formField.init(child.props.name, _extends({}, getFieldInitCfg(_this2.props, child.type.displayName, labelForErrorMessage), {\n                        props: _extends({}, child.props, { ref: child.ref })\n                    }), childrenProps);\n                } else {\n                    extraProps = _extends({}, child.props, extraProps);\n                }\n\n                return React.cloneElement(child, extraProps);\n            }\n\n            return child;\n        });\n\n        var help = this.getHelper(children);\n\n        if ((wrapperCol || labelCol) && labelAlign !== 'top') {\n            return React.createElement(\n                Col,\n                _extends({}, wrapperCol, { className: prefix + 'form-item-control', key: 'item' }),\n                ele,\n                ' ',\n                help,\n                ' ',\n                extra\n            );\n        }\n\n        return React.createElement(\n            'div',\n            { className: prefix + 'form-item-control' },\n            ele,\n            ' ',\n            help,\n            ' ',\n            extra\n        );\n    };\n\n    Item.prototype.getLabelAlign = function getLabelAlign(labelAlign, device) {\n        if (device === 'phone') {\n            return 'top';\n        }\n\n        return labelAlign;\n    };\n\n    Item.prototype.render = function render() {\n        var _classNames2;\n\n        var _props3 = this.props,\n            className = _props3.className,\n            style = _props3.style,\n            prefix = _props3.prefix,\n            wrapperCol = _props3.wrapperCol,\n            labelCol = _props3.labelCol,\n            responsive = _props3.responsive,\n            children = _props3.children;\n\n\n        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);\n\n        var childrenNode = children;\n        if (typeof children === 'function' && this.context._formField) {\n            childrenNode = children(this.context._formField.getValues());\n        }\n\n        var state = this.getState(childrenNode);\n        var size = this.getSize();\n        var fullWidth = this.getFullWidth();\n        var isPreview = this.getIsPreview();\n\n        var itemClassName = classNames((_classNames2 = {}, _classNames2[prefix + 'form-item'] = true, _classNames2['' + prefix + labelAlign] = labelAlign, _classNames2['has-' + state] = !!state, _classNames2['' + prefix + size] = !!size, _classNames2[prefix + 'form-item-fullwidth'] = fullWidth, _classNames2['' + className] = !!className, _classNames2[prefix + 'form-preview'] = isPreview, _classNames2));\n\n        // 垂直模式并且左对齐才用到\n        var Tag = responsive ? Cell : (wrapperCol || labelCol) && labelAlign !== 'top' ? Row : 'div';\n        var label = labelAlign === 'inset' ? null : this.getItemLabel(childrenNode);\n\n        return React.createElement(\n            Tag,\n            _extends({}, obj.pickOthers(Item.propTypes, this.props), { className: itemClassName, style: style }),\n            label,\n            this.getItemWrapper(childrenNode)\n        );\n    };\n\n    return Item;\n}(React.Component), _class.propTypes = {\n    /**\n     * 样式前缀\n     */\n    prefix: PropTypes.string,\n    rtl: PropTypes.bool,\n    /**\n     * label 标签的文本\n     */\n    label: PropTypes.node,\n    /**\n     * label 标签布局，通 `<Col>` 组件，设置 span offset 值，如 {span: 8, offset: 16}，该项仅在垂直表单有效\n     */\n    labelCol: PropTypes.object,\n    /**\n     * 需要为输入控件设置布局样式时，使用该属性，用法同 labelCol\n     */\n    wrapperCol: PropTypes.object,\n    /**\n     * 自定义提示信息，如不设置，则会根据校验规则自动生成.\n     */\n    help: PropTypes.node,\n    /**\n     * 额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。 位于错误信息后面\n     */\n    extra: PropTypes.node,\n    /**\n     * 校验状态，如不设置，则会根据校验规则自动生成\n     * @enumdesc 失败, 成功, 校验中, 警告\n     */\n    validateState: PropTypes.oneOf(['error', 'success', 'loading', 'warning']),\n    /**\n     * 配合 validateState 属性使用，是否展示 success/loading 的校验状态图标, 目前只有Input支持\n     */\n    hasFeedback: PropTypes.bool, //TODO: hasFeedback => validateStatus=[error,success,loading]\n    /**\n     * 自定义内联样式\n     */\n    style: PropTypes.object,\n    id: PropTypes.string,\n    /**\n     * node 或者 function(values)\n     */\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    /**\n     * 单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。\n     */\n    size: PropTypes.oneOf(['large', 'small', 'medium']),\n    /**\n     * 单个 Item 中表单类组件宽度是否是100%\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * 标签的位置, 如果不设置 labelCol 和 wrapperCol 那么默认是标签在上\n     * @enumdesc 上, 左, 内\n     */\n    labelAlign: PropTypes.oneOf(['top', 'left', 'inset']),\n    /**\n     * 标签的左右对齐方式\n     * @enumdesc 左, 右\n     */\n    labelTextAlign: PropTypes.oneOf(['left', 'right']),\n    /**\n     * 扩展class\n     */\n    className: PropTypes.string,\n    /**\n     * [表单校验] 不能为空\n     */\n    required: PropTypes.bool,\n    /**\n     * required 的星号是否显示\n     */\n    asterisk: PropTypes.bool,\n    /**\n     * required 自定义错误信息\n     */\n    requiredMessage: PropTypes.string,\n    /**\n     * required 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n     */\n    requiredTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    /**\n     * [表单校验] 最小值\n     */\n    min: PropTypes.number,\n    /**\n     * [表单校验] 最大值\n     */\n    max: PropTypes.number,\n    /**\n     * min/max 自定义错误信息\n     */\n    minmaxMessage: PropTypes.string,\n    /**\n     * min/max 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n     */\n    minmaxTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    /**\n     * [表单校验] 字符串最小长度 / 数组最小个数\n     */\n    minLength: PropTypes.number,\n    /**\n     * [表单校验] 字符串最大长度 / 数组最大个数\n     */\n    maxLength: PropTypes.number,\n    /**\n     * minLength/maxLength 自定义错误信息\n     */\n    minmaxLengthMessage: PropTypes.string,\n    /**\n     * minLength/maxLength 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n     */\n    minmaxLengthTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    /**\n     * [表单校验] 字符串精确长度 / 数组精确个数\n     */\n    length: PropTypes.number,\n    /**\n     * length 自定义错误信息\n     */\n    lengthMessage: PropTypes.string,\n    /**\n     * length 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n     */\n    lengthTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    /**\n     * 正则校验\n     */\n    pattern: PropTypes.any,\n    /**\n     * pattern 自定义错误信息\n     */\n    patternMessage: PropTypes.string,\n    /**\n     * pattern 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n     */\n    patternTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    /**\n     * [表单校验] 四种常用的 pattern\n     */\n    format: PropTypes.oneOf(['number', 'email', 'url', 'tel']),\n    /**\n     * format 自定义错误信息\n     */\n    formatMessage: PropTypes.string,\n    /**\n     * format 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n     */\n    formatTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    /**\n     * [表单校验] 自定义校验函数\n     */\n    validator: PropTypes.func,\n    /**\n     * validator 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...\n     */\n    validatorTrigger: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    /**\n     * 是否修改数据时自动触发校验\n     */\n    autoValidate: PropTypes.bool,\n    /**\n     * 预设屏幕宽度\n     */\n    device: PropTypes.oneOf(['phone', 'tablet', 'desktop']),\n    responsive: PropTypes.bool,\n    /**\n     * 在响应式布局模式下，表单项占多少列\n     */\n    colSpan: PropTypes.number,\n    /**\n     * 在响应式布局下，且label在左边时，label的宽度是多少\n     */\n    labelWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    /**\n     * 是否开启预览态\n     */\n    isPreview: PropTypes.bool,\n    /**\n     * 预览态模式下渲染的内容\n     * @param {any} value 根据包裹的组件的 value 类型而决定\n     */\n    renderPreview: PropTypes.func,\n    /**\n     * 是否使用 label 替换校验信息的 name 字段\n     */\n    useLabelForErrorMessage: PropTypes.bool,\n    /**\n     * 表示是否显示 label 后面的冒号\n     */\n    colon: PropTypes.bool,\n    /**\n     * 子元素的 value 名称\n     */\n    valueName: PropTypes.string\n}, _class.defaultProps = {\n    prefix: 'next-',\n    hasFeedback: false,\n    labelWidth: 100\n}, _class.contextTypes = {\n    _formField: PropTypes.object,\n    _formSize: PropTypes.oneOf(['large', 'small', 'medium']),\n    _formPreview: PropTypes.bool,\n    _formFullWidth: PropTypes.bool,\n    _formLabelForErrorMessage: PropTypes.bool\n}, _class._typeMark = 'form_item', _temp);\nItem.displayName = 'Item';\nexport { Item as default };"]},"metadata":{},"sourceType":"module"}