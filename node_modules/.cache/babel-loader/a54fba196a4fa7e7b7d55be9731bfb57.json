{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { findDOMNode } from 'react-dom';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { obj, events, func } from '../util';\nimport ConfigProvider from '../config-provider';\nimport { getScroll, getRect, getNodeHeight } from './util';\n/** Affix */\n\nvar Affix = (_temp = _class = function (_React$Component) {\n  _inherits(Affix, _React$Component);\n\n  Affix._getAffixMode = function _getAffixMode(nextProps) {\n    var affixMode = {\n      top: false,\n      bottom: false,\n      offset: 0\n    };\n\n    if (!nextProps) {\n      return affixMode;\n    }\n\n    var offsetTop = nextProps.offsetTop,\n        offsetBottom = nextProps.offsetBottom;\n\n    if (typeof offsetTop !== 'number' && typeof offsetBottom !== 'number') {\n      // set default\n      affixMode.top = true;\n    } else if (typeof offsetTop === 'number') {\n      affixMode.top = true;\n      affixMode.bottom = false;\n      affixMode.offset = offsetTop;\n    } else if (typeof offsetBottom === 'number') {\n      affixMode.bottom = true;\n      affixMode.top = false;\n      affixMode.offset = offsetBottom;\n    }\n\n    return affixMode;\n  };\n\n  function Affix(props, context) {\n    _classCallCheck(this, Affix);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.updatePosition = function () {\n      _this._updateNodePosition();\n    };\n\n    _this._updateNodePosition = function () {\n      var affixMode = _this.state.affixMode;\n      var _this$props = _this.props,\n          container = _this$props.container,\n          useAbsolute = _this$props.useAbsolute;\n      var affixContainer = container();\n\n      if (!affixContainer || !_this.affixNode) {\n        return false;\n      }\n\n      var containerScrollTop = getScroll(affixContainer, true); // 容器在垂直位置上的滚动 offset\n\n      var affixOffset = _this._getOffset(_this.affixNode, affixContainer); // 目标节点当前相对于容器的 offset\n\n\n      var containerHeight = getNodeHeight(affixContainer); // 容器的高度\n\n      var affixHeight = _this.affixNode.offsetHeight;\n      var containerRect = getRect(affixContainer);\n      var affixChildHeight = _this.affixChildNode.offsetHeight;\n      var affixStyle = {\n        width: affixOffset.width\n      };\n      var containerStyle = {\n        width: affixOffset.width,\n        height: affixChildHeight\n      };\n\n      if (affixMode.top && containerScrollTop > affixOffset.top - affixMode.offset) {\n        // affix top\n        if (useAbsolute) {\n          affixStyle.position = 'absolute';\n          affixStyle.top = containerScrollTop - (affixOffset.top - affixMode.offset);\n          containerStyle.position = 'relative';\n        } else {\n          affixStyle.position = 'fixed';\n          affixStyle.top = affixMode.offset + containerRect.top;\n        }\n\n        _this._setAffixStyle(affixStyle, true);\n\n        _this._setContainerStyle(containerStyle);\n      } else if (affixMode.bottom && containerScrollTop < affixOffset.top + affixHeight + affixMode.offset - containerHeight) {\n        // affix bottom\n        affixStyle.height = affixHeight;\n\n        if (useAbsolute) {\n          affixStyle.position = 'absolute';\n          affixStyle.top = containerScrollTop - (affixOffset.top + affixHeight + affixMode.offset - containerHeight);\n          containerStyle.position = 'relative';\n        } else {\n          affixStyle.position = 'fixed';\n          affixStyle.bottom = affixMode.offset;\n        }\n\n        _this._setAffixStyle(affixStyle, true);\n\n        _this._setContainerStyle(containerStyle);\n      } else {\n        _this._setAffixStyle(null);\n\n        _this._setContainerStyle(null);\n      }\n    };\n\n    _this._affixNodeRefHandler = function (ref) {\n      _this.affixNode = findDOMNode(ref);\n    };\n\n    _this._affixChildNodeRefHandler = function (ref) {\n      _this.affixChildNode = findDOMNode(ref);\n    };\n\n    _this.state = {\n      style: null,\n      containerStyle: null,\n      affixMode: Affix._getAffixMode(props)\n    };\n    return _this;\n  }\n\n  Affix.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if ('offsetTop' in nextProps || 'offsetBottom' in nextProps) {\n      return {\n        affixMode: Affix._getAffixMode(nextProps)\n      };\n    }\n\n    return null;\n  };\n\n  Affix.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var container = this.props.container;\n\n    this._updateNodePosition(); // wait for parent rendered\n\n\n    this.timeout = setTimeout(function () {\n      _this2._setEventHandlerForContainer(container);\n    });\n  };\n\n  Affix.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState, snapshot) {\n    setTimeout(this._updateNodePosition);\n  };\n\n  Affix.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n\n    var container = this.props.container;\n\n    this._removeEventHandlerForContainer(container);\n  };\n\n  Affix.prototype._setEventHandlerForContainer = function _setEventHandlerForContainer(getContainer) {\n    var container = getContainer();\n\n    if (!container) {\n      return;\n    }\n\n    events.on(container, 'scroll', this._updateNodePosition, false);\n    events.on(container, 'resize', this._updateNodePosition, false);\n  };\n\n  Affix.prototype._removeEventHandlerForContainer = function _removeEventHandlerForContainer(getContainer) {\n    var container = getContainer();\n\n    if (container) {\n      events.off(container, 'scroll', this._updateNodePosition);\n      events.off(container, 'resize', this._updateNodePosition);\n    }\n  };\n\n  Affix.prototype._setAffixStyle = function _setAffixStyle(affixStyle) {\n    var affixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (obj.shallowEqual(affixStyle, this.state.style)) {\n      return;\n    }\n\n    this.setState({\n      style: affixStyle\n    });\n    var onAffix = this.props.onAffix;\n\n    if (affixed) {\n      setTimeout(function () {\n        return onAffix(true);\n      });\n    } else if (!affixStyle) {\n      setTimeout(function () {\n        return onAffix(false);\n      });\n    }\n  };\n\n  Affix.prototype._setContainerStyle = function _setContainerStyle(containerStyle) {\n    if (obj.shallowEqual(containerStyle, this.state.containerStyle)) {\n      return;\n    }\n\n    this.setState({\n      containerStyle: containerStyle\n    });\n  };\n\n  Affix.prototype._getOffset = function _getOffset(affixNode, affixContainer) {\n    var affixRect = affixNode.getBoundingClientRect(); // affix 元素 相对浏览器窗口的位置\n\n    var containerRect = getRect(affixContainer); // affix 容器 相对浏览器窗口的位置\n\n    var containerScrollTop = getScroll(affixContainer, true);\n    var containerScrollLeft = getScroll(affixContainer, false);\n    return {\n      top: affixRect.top - containerRect.top + containerScrollTop,\n      left: affixRect.left - containerRect.left + containerScrollLeft,\n      width: affixRect.width,\n      height: affixRect.height\n    };\n  };\n\n  Affix.prototype.render = function render() {\n    var _classnames;\n\n    var affixMode = this.state.affixMode;\n    var _props = this.props,\n        prefix = _props.prefix,\n        className = _props.className,\n        style = _props.style,\n        children = _props.children;\n    var state = this.state;\n    var classNames = classnames((_classnames = {}, _classnames[prefix + 'affix'] = state.style, _classnames[prefix + 'affix-top'] = !state.style && affixMode.top, _classnames[prefix + 'affix-bottom'] = !state.style && affixMode.bottom, _classnames[className] = className, _classnames));\n\n    var combinedStyle = _extends({}, state.containerStyle, style);\n\n    return React.createElement('div', {\n      ref: this._affixNodeRefHandler,\n      style: combinedStyle\n    }, React.createElement('div', {\n      ref: this._affixChildNodeRefHandler,\n      className: classNames,\n      style: state.style\n    }, children));\n  };\n\n  return Affix;\n}(React.Component), _class.propTypes = {\n  prefix: PropTypes.string,\n\n  /**\n   * 设置 Affix 需要监听滚动事件的容器元素\n   * @return {ReactElement} 目标容器元素的实例\n   */\n  container: PropTypes.func,\n\n  /**\n   * 距离窗口顶部达到指定偏移量后触发\n   */\n  offsetTop: PropTypes.number,\n\n  /**\n   * 距离窗口底部达到制定偏移量后触发\n   */\n  offsetBottom: PropTypes.number,\n\n  /**\n   * 当元素的样式发生固钉样式变化时触发的回调函数\n   * @param {Boolean} affixed 元素是否被固钉\n   */\n  onAffix: PropTypes.func,\n\n  /**\n   * 是否启用绝对布局实现 affix\n   * @param {Boolean} 是否启用绝对布局\n   */\n  useAbsolute: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.any\n}, _class.defaultProps = {\n  prefix: 'next-',\n  container: function container() {\n    return window;\n  },\n  onAffix: func.noop\n}, _temp);\nAffix.displayName = 'Affix';\nexport default ConfigProvider.config(polyfill(Affix));","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/affix/index.js"],"names":["_extends","_classCallCheck","_possibleConstructorReturn","_inherits","_class","_temp","React","PropTypes","classnames","findDOMNode","polyfill","obj","events","func","ConfigProvider","getScroll","getRect","getNodeHeight","Affix","_React$Component","_getAffixMode","nextProps","affixMode","top","bottom","offset","offsetTop","offsetBottom","props","context","_this","call","updatePosition","_updateNodePosition","state","_this$props","container","useAbsolute","affixContainer","affixNode","containerScrollTop","affixOffset","_getOffset","containerHeight","affixHeight","offsetHeight","containerRect","affixChildHeight","affixChildNode","affixStyle","width","containerStyle","height","position","_setAffixStyle","_setContainerStyle","_affixNodeRefHandler","ref","_affixChildNodeRefHandler","style","getDerivedStateFromProps","prevState","prototype","componentDidMount","_this2","timeout","setTimeout","_setEventHandlerForContainer","componentDidUpdate","prevProps","snapshot","componentWillUnmount","clearTimeout","_removeEventHandlerForContainer","getContainer","on","off","affixed","arguments","length","undefined","shallowEqual","setState","onAffix","affixRect","getBoundingClientRect","containerScrollLeft","left","render","_classnames","_props","prefix","className","children","classNames","combinedStyle","createElement","Component","propTypes","string","number","bool","object","any","defaultProps","window","noop","displayName","config"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { findDOMNode } from 'react-dom';\nimport { polyfill } from 'react-lifecycles-compat';\n\nimport { obj, events, func } from '../util';\nimport ConfigProvider from '../config-provider';\nimport { getScroll, getRect, getNodeHeight } from './util';\n\n/** Affix */\nvar Affix = (_temp = _class = function (_React$Component) {\n    _inherits(Affix, _React$Component);\n\n    Affix._getAffixMode = function _getAffixMode(nextProps) {\n        var affixMode = {\n            top: false,\n            bottom: false,\n            offset: 0\n        };\n        if (!nextProps) {\n            return affixMode;\n        }\n        var offsetTop = nextProps.offsetTop,\n            offsetBottom = nextProps.offsetBottom;\n\n\n        if (typeof offsetTop !== 'number' && typeof offsetBottom !== 'number') {\n            // set default\n            affixMode.top = true;\n        } else if (typeof offsetTop === 'number') {\n            affixMode.top = true;\n            affixMode.bottom = false;\n            affixMode.offset = offsetTop;\n        } else if (typeof offsetBottom === 'number') {\n            affixMode.bottom = true;\n            affixMode.top = false;\n            affixMode.offset = offsetBottom;\n        }\n\n        return affixMode;\n    };\n\n    function Affix(props, context) {\n        _classCallCheck(this, Affix);\n\n        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n        _this.updatePosition = function () {\n            _this._updateNodePosition();\n        };\n\n        _this._updateNodePosition = function () {\n            var affixMode = _this.state.affixMode;\n            var _this$props = _this.props,\n                container = _this$props.container,\n                useAbsolute = _this$props.useAbsolute;\n\n            var affixContainer = container();\n\n            if (!affixContainer || !_this.affixNode) {\n                return false;\n            }\n            var containerScrollTop = getScroll(affixContainer, true); // 容器在垂直位置上的滚动 offset\n            var affixOffset = _this._getOffset(_this.affixNode, affixContainer); // 目标节点当前相对于容器的 offset\n            var containerHeight = getNodeHeight(affixContainer); // 容器的高度\n            var affixHeight = _this.affixNode.offsetHeight;\n            var containerRect = getRect(affixContainer);\n\n            var affixChildHeight = _this.affixChildNode.offsetHeight;\n\n            var affixStyle = {\n                width: affixOffset.width\n            };\n            var containerStyle = {\n                width: affixOffset.width,\n                height: affixChildHeight\n            };\n            if (affixMode.top && containerScrollTop > affixOffset.top - affixMode.offset) {\n                // affix top\n                if (useAbsolute) {\n                    affixStyle.position = 'absolute';\n                    affixStyle.top = containerScrollTop - (affixOffset.top - affixMode.offset);\n                    containerStyle.position = 'relative';\n                } else {\n                    affixStyle.position = 'fixed';\n                    affixStyle.top = affixMode.offset + containerRect.top;\n                }\n                _this._setAffixStyle(affixStyle, true);\n                _this._setContainerStyle(containerStyle);\n            } else if (affixMode.bottom && containerScrollTop < affixOffset.top + affixHeight + affixMode.offset - containerHeight) {\n                // affix bottom\n                affixStyle.height = affixHeight;\n                if (useAbsolute) {\n                    affixStyle.position = 'absolute';\n                    affixStyle.top = containerScrollTop - (affixOffset.top + affixHeight + affixMode.offset - containerHeight);\n                    containerStyle.position = 'relative';\n                } else {\n                    affixStyle.position = 'fixed';\n                    affixStyle.bottom = affixMode.offset;\n                }\n                _this._setAffixStyle(affixStyle, true);\n                _this._setContainerStyle(containerStyle);\n            } else {\n                _this._setAffixStyle(null);\n                _this._setContainerStyle(null);\n            }\n        };\n\n        _this._affixNodeRefHandler = function (ref) {\n            _this.affixNode = findDOMNode(ref);\n        };\n\n        _this._affixChildNodeRefHandler = function (ref) {\n            _this.affixChildNode = findDOMNode(ref);\n        };\n\n        _this.state = {\n            style: null,\n            containerStyle: null,\n            affixMode: Affix._getAffixMode(props)\n        };\n        return _this;\n    }\n\n    Affix.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n        if ('offsetTop' in nextProps || 'offsetBottom' in nextProps) {\n            return {\n                affixMode: Affix._getAffixMode(nextProps)\n            };\n        }\n        return null;\n    };\n\n    Affix.prototype.componentDidMount = function componentDidMount() {\n        var _this2 = this;\n\n        var container = this.props.container;\n\n        this._updateNodePosition();\n        // wait for parent rendered\n        this.timeout = setTimeout(function () {\n            _this2._setEventHandlerForContainer(container);\n        });\n    };\n\n    Affix.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState, snapshot) {\n        setTimeout(this._updateNodePosition);\n    };\n\n    Affix.prototype.componentWillUnmount = function componentWillUnmount() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n        var container = this.props.container;\n\n        this._removeEventHandlerForContainer(container);\n    };\n\n    Affix.prototype._setEventHandlerForContainer = function _setEventHandlerForContainer(getContainer) {\n        var container = getContainer();\n        if (!container) {\n            return;\n        }\n        events.on(container, 'scroll', this._updateNodePosition, false);\n        events.on(container, 'resize', this._updateNodePosition, false);\n    };\n\n    Affix.prototype._removeEventHandlerForContainer = function _removeEventHandlerForContainer(getContainer) {\n        var container = getContainer();\n        if (container) {\n            events.off(container, 'scroll', this._updateNodePosition);\n            events.off(container, 'resize', this._updateNodePosition);\n        }\n    };\n\n    Affix.prototype._setAffixStyle = function _setAffixStyle(affixStyle) {\n        var affixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (obj.shallowEqual(affixStyle, this.state.style)) {\n            return;\n        }\n\n        this.setState({\n            style: affixStyle\n        });\n\n        var onAffix = this.props.onAffix;\n\n\n        if (affixed) {\n            setTimeout(function () {\n                return onAffix(true);\n            });\n        } else if (!affixStyle) {\n            setTimeout(function () {\n                return onAffix(false);\n            });\n        }\n    };\n\n    Affix.prototype._setContainerStyle = function _setContainerStyle(containerStyle) {\n        if (obj.shallowEqual(containerStyle, this.state.containerStyle)) {\n            return;\n        }\n        this.setState({ containerStyle: containerStyle });\n    };\n\n    Affix.prototype._getOffset = function _getOffset(affixNode, affixContainer) {\n        var affixRect = affixNode.getBoundingClientRect(); // affix 元素 相对浏览器窗口的位置\n        var containerRect = getRect(affixContainer); // affix 容器 相对浏览器窗口的位置\n        var containerScrollTop = getScroll(affixContainer, true);\n        var containerScrollLeft = getScroll(affixContainer, false);\n\n        return {\n            top: affixRect.top - containerRect.top + containerScrollTop,\n            left: affixRect.left - containerRect.left + containerScrollLeft,\n            width: affixRect.width,\n            height: affixRect.height\n        };\n    };\n\n    Affix.prototype.render = function render() {\n        var _classnames;\n\n        var affixMode = this.state.affixMode;\n        var _props = this.props,\n            prefix = _props.prefix,\n            className = _props.className,\n            style = _props.style,\n            children = _props.children;\n\n        var state = this.state;\n        var classNames = classnames((_classnames = {}, _classnames[prefix + 'affix'] = state.style, _classnames[prefix + 'affix-top'] = !state.style && affixMode.top, _classnames[prefix + 'affix-bottom'] = !state.style && affixMode.bottom, _classnames[className] = className, _classnames));\n        var combinedStyle = _extends({}, state.containerStyle, style);\n\n        return React.createElement(\n            'div',\n            { ref: this._affixNodeRefHandler, style: combinedStyle },\n            React.createElement(\n                'div',\n                {\n                    ref: this._affixChildNodeRefHandler,\n                    className: classNames,\n                    style: state.style\n                },\n                children\n            )\n        );\n    };\n\n    return Affix;\n}(React.Component), _class.propTypes = {\n    prefix: PropTypes.string,\n    /**\n     * 设置 Affix 需要监听滚动事件的容器元素\n     * @return {ReactElement} 目标容器元素的实例\n     */\n    container: PropTypes.func,\n    /**\n     * 距离窗口顶部达到指定偏移量后触发\n     */\n    offsetTop: PropTypes.number,\n    /**\n     * 距离窗口底部达到制定偏移量后触发\n     */\n    offsetBottom: PropTypes.number,\n    /**\n     * 当元素的样式发生固钉样式变化时触发的回调函数\n     * @param {Boolean} affixed 元素是否被固钉\n     */\n    onAffix: PropTypes.func,\n    /**\n     * 是否启用绝对布局实现 affix\n     * @param {Boolean} 是否启用绝对布局\n     */\n    useAbsolute: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.any\n}, _class.defaultProps = {\n    prefix: 'next-',\n    container: function container() {\n        return window;\n    },\n    onAffix: func.noop\n}, _temp);\nAffix.displayName = 'Affix';\n\n\nexport default ConfigProvider.config(polyfill(Affix));"]},"metadata":{},"sourceType":"module"}