{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project/lunch-order-backstage/src/pages/Oreder/Order.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport OrderTable from '../../components/OrderTable';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tarProps = {\n  dbName: \"orders\",\n  keys: {\n    name: {\n      type: \"input\",\n      text: \"姓名\"\n    },\n    text: {\n      type: \"input\",\n      text: \"文字\"\n    },\n    money: {\n      type: \"input\",\n      text: \"金額\"\n    } // time: {\n    //     type: \"datePicker\",\n    //     text: \"時間\"\n    // },\n    // remarks: {\n    //     type: \"textArea\",\n    //     text: \"備註\"\n    // }\n\n  }\n};\nconst tarData = [{\n  id: 0,\n  name: \"Chris\",\n  text: \"t1\",\n  money: 100\n}, {\n  id: 1,\n  name: \"Jack\",\n  text: \"t2\",\n  money: 110\n}, {\n  id: 2,\n  name: \"Kent\",\n  text: \"t3\",\n  money: 102\n}];\n\nfunction Order() {\n  _s();\n\n  const [tarProps, setTarProps] = useState({});\n  const [getData, setGetData] = useState(false);\n  const [myListData, setMyListData] = useState([]);\n  const [myListDataAll, setMyListDataAll] = useState([]);\n  useEffect(() => {\n    axios('/ezcon/api/getDynamicMenus', {\n      method: 'GET',\n      headers: {\n        authorization: window.localStorage['feathers-jwt']\n      }\n    }).then(res => {\n      console.log('==getDynamicMenus find success:', res.data);\n      setTarProps(res.data.find(x => x.text === \"歷屆管委會名單\"));\n      setGetData(true);\n    }).catch(error => {\n      console.log('==getDynamicMenus find fail:', error);\n    });\n  }, []);\n  useEffect(() => {\n    const sortedArr = [...myListDataAll].map(e => {\n      let hasIncludes = false;\n      Object.keys(e).forEach(ee => {\n        let val2 = e[ee];\n        if (val2.toString().includes(props.filterStr)) hasIncludes = true;\n      });\n      if (hasIncludes) return e;\n      return false;\n    }).filter(e => e !== false);\n    setMyListData([...sortedArr]);\n  }, [props.filterStr]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: getData == true ? /*#__PURE__*/_jsxDEV(OrderTable, {\n      tarProps: tarProps,\n      listData: myListData,\n      listDataProps: data => setMyListData([...data]),\n      listDataAllProps: data => setMyListDataAll([...data])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(Order, \"kdgV5NT+fyYIGsHsE4WcVKdy7cI=\");\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/src/pages/Oreder/Order.jsx"],"names":["React","useState","useEffect","OrderTable","axios","tarProps","dbName","keys","name","type","text","money","tarData","id","Order","setTarProps","getData","setGetData","myListData","setMyListData","myListDataAll","setMyListDataAll","method","headers","authorization","window","localStorage","then","res","console","log","data","find","x","catch","error","sortedArr","map","e","hasIncludes","Object","forEach","ee","val2","toString","includes","props","filterStr","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport OrderTable from '../../components/OrderTable';\nimport axios from 'axios';\nconst tarProps = {\n    dbName: \"orders\",\n    keys: {\n        name: {\n            type: \"input\",\n            text: \"姓名\"\n        },\n        text: {\n            type: \"input\",\n            text: \"文字\"\n        },\n        money: {\n            type: \"input\",\n            text: \"金額\"\n        },\n\n        // time: {\n        //     type: \"datePicker\",\n        //     text: \"時間\"\n        // },\n        // remarks: {\n        //     type: \"textArea\",\n        //     text: \"備註\"\n        // }\n    }\n};\n\nconst tarData = [\n    {\n        id: 0,\n        name: \"Chris\",\n        text: \"t1\",\n        money: 100,\n\n    },\n    {\n        id: 1,\n        name: \"Jack\",\n        text: \"t2\",\n        money: 110,\n\n    },\n    {\n        id: 2,\n        name: \"Kent\",\n        text: \"t3\",\n        money: 102,\n\n    }\n];\nfunction Order() {\n    const [tarProps, setTarProps] = useState({});\n    const [getData, setGetData] = useState(false);\n    const [myListData, setMyListData] = useState([]);\n    const [myListDataAll, setMyListDataAll] = useState([]);\n\n    useEffect(() => {\n        axios('/ezcon/api/getDynamicMenus', {\n            method: 'GET',\n            headers: { authorization: window.localStorage['feathers-jwt'] },\n\n        }).then((res) => {\n            console.log('==getDynamicMenus find success:', res.data)\n            setTarProps(res.data.find(x => x.text === \"歷屆管委會名單\"))\n            setGetData(true)\n        }).catch(error => {\n            console.log('==getDynamicMenus find fail:', error);\n\n        })\n\n\n    }, [])\n\n    useEffect(() => {\n\n        const sortedArr = [...myListDataAll].map((e) => {\n            let hasIncludes = false;\n            Object.keys(e).forEach((ee) => {\n                let val2 = e[ee];\n                if (val2.toString().includes(props.filterStr)) hasIncludes = true;\n            })\n            if (hasIncludes) return e;\n            return false;\n        }).filter((e) => e !== false);\n        setMyListData([...sortedArr]);\n    }, [props.filterStr]);\n    return (\n        <>\n            {getData == true ?\n                <OrderTable tarProps={tarProps} listData={myListData} listDataProps={data => setMyListData([...data])} listDataAllProps={data => setMyListDataAll([...data])} />\n                :\n                null\n            }\n        </>\n    );\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}