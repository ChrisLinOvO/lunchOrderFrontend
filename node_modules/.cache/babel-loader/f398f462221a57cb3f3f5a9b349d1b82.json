{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Project/lunch-order-backstage/src/pages/Oreder/Order.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport OrderTable from '../../components/OrderTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Order = props => {\n  _s();\n\n  const tarProps = {\n    dbName: \"orders\",\n    keys: {\n      name: {\n        type: \"input\",\n        text: \"姓名\"\n      },\n      text: {\n        type: \"input\",\n        text: \"文字\"\n      },\n      money: {\n        type: \"input\",\n        text: \"金額\"\n      },\n      files: {\n        type: 'uploads',\n        text: '上傳圖片'\n      }\n    }\n  };\n  const [getData, setGetData] = useState(false);\n  const [myListData, setMyListData] = useState([]);\n  const [myListDataAll, setMyListDataAll] = useState([]);\n  useEffect(() => {\n    const sortedArr = [...myListDataAll].map(e => {\n      let hasIncludes = false;\n      Object.keys(e).forEach(ee => {\n        let val2 = e[ee];\n        if (val2.toString().includes(props.filterStr)) hasIncludes = true;\n      });\n      if (hasIncludes) return e;\n      return false;\n    }).filter(e => e !== false);\n    setMyListData([...sortedArr]);\n  }, [props.filterStr]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(OrderTable, {\n      tarProps: tarProps,\n      listData: myListData,\n      listDataProps: data => setMyListData([...data]),\n      listDataAllProps: data => setMyListDataAll([...data])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Order, \"tus9BZnxwOhHjUy7xXPYp5P/lFE=\");\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/src/pages/Oreder/Order.jsx"],"names":["React","useState","useEffect","OrderTable","Order","props","tarProps","dbName","keys","name","type","text","money","files","getData","setGetData","myListData","setMyListData","myListDataAll","setMyListDataAll","sortedArr","map","e","hasIncludes","Object","forEach","ee","val2","toString","includes","filterStr","filter","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;;AAEA,MAAOC,KAAK,GAAGC,KAAD,IAAU;AAAA;;AACpB,QAAMC,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE,QADK;AAEbC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,OADJ;AAEFC,QAAAA,IAAI,EAAE;AAFJ,OADJ;AAKFA,MAAAA,IAAI,EAAE;AACFD,QAAAA,IAAI,EAAE,OADJ;AAEFC,QAAAA,IAAI,EAAE;AAFJ,OALJ;AASFC,MAAAA,KAAK,EAAE;AACHF,QAAAA,IAAI,EAAE,OADH;AAEHC,QAAAA,IAAI,EAAE;AAFH,OATL;AAaFE,MAAAA,KAAK,EAAC;AACFH,QAAAA,IAAI,EAAC,SADH;AAEFC,QAAAA,IAAI,EAAC;AAFH;AAbJ;AAFO,GAAjB;AAsBA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AAIAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMkB,SAAS,GAAG,CAAC,GAAGF,aAAJ,EAAmBG,GAAnB,CAAwBC,CAAD,IAAO;AAC5C,UAAIC,WAAW,GAAG,KAAlB;AACAC,MAAAA,MAAM,CAAChB,IAAP,CAAYc,CAAZ,EAAeG,OAAf,CAAwBC,EAAD,IAAQ;AAC3B,YAAIC,IAAI,GAAGL,CAAC,CAACI,EAAD,CAAZ;AACA,YAAIC,IAAI,CAACC,QAAL,GAAgBC,QAAhB,CAAyBxB,KAAK,CAACyB,SAA/B,CAAJ,EAA+CP,WAAW,GAAG,IAAd;AAClD,OAHD;AAIA,UAAIA,WAAJ,EAAiB,OAAOD,CAAP;AACjB,aAAO,KAAP;AACH,KARiB,EAQfS,MARe,CAQPT,CAAD,IAAOA,CAAC,KAAK,KARL,CAAlB;AASAL,IAAAA,aAAa,CAAC,CAAC,GAAGG,SAAJ,CAAD,CAAb;AACH,GAZQ,EAYN,CAACf,KAAK,CAACyB,SAAP,CAZM,CAAT;AAaA,sBACI;AAAA,2BAEQ,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAExB,QAAtB;AAAgC,MAAA,QAAQ,EAAEU,UAA1C;AAAsD,MAAA,aAAa,EAAEgB,IAAI,IAAIf,aAAa,CAAC,CAAC,GAAGe,IAAJ,CAAD,CAA1F;AAAuG,MAAA,gBAAgB,EAAEA,IAAI,IAAIb,gBAAgB,CAAC,CAAC,GAAGa,IAAJ,CAAD;AAAjJ;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AAOH,CAjDD;;GAAO5B,K;;KAAAA,K;AAmDP,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport OrderTable from '../../components/OrderTable';\n\nconst  Order =(props)=> {\n    const tarProps = {\n        dbName: \"orders\",\n        keys: {\n            name: {\n                type: \"input\",\n                text: \"姓名\"\n            },\n            text: {\n                type: \"input\",\n                text: \"文字\"\n            },\n            money: {\n                type: \"input\",\n                text: \"金額\"\n            },\n            files:{\n                type:'uploads',\n                text:'上傳圖片'\n            },\n    \n        }\n    }\n    const [getData, setGetData] = useState(false);\n    const [myListData, setMyListData] = useState([]);\n    const [myListDataAll, setMyListDataAll] = useState([]);\n\n  \n\n    useEffect(() => {\n\n        const sortedArr = [...myListDataAll].map((e) => {\n            let hasIncludes = false;\n            Object.keys(e).forEach((ee) => {\n                let val2 = e[ee];\n                if (val2.toString().includes(props.filterStr)) hasIncludes = true;\n            })\n            if (hasIncludes) return e;\n            return false;\n        }).filter((e) => e !== false);\n        setMyListData([...sortedArr]);\n    }, [props.filterStr]);\n    return (\n        <>\n        \n                <OrderTable tarProps={tarProps} listData={myListData} listDataProps={data => setMyListData([...data])} listDataAllProps={data => setMyListDataAll([...data])} />\n           \n        </>\n    );\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}