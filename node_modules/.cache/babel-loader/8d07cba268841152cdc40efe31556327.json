{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction length(rule, value, errors, options) {\n  var key = null;\n  var isNum = typeof value === 'number';\n  var isStr = typeof value === 'string';\n  var isArr = Array.isArray(value);\n\n  if (isNum) {\n    key = 'number';\n  } else if (isStr) {\n    key = 'string';\n  } else if (isArr) {\n    key = 'array';\n  }\n\n  if (!key) {\n    return false;\n  }\n\n  var val = value;\n  var length = Number(rule.length);\n  var maxLength = Number(rule.maxLength);\n  var minLength = Number(rule.minLength);\n\n  if (minLength || maxLength || length) {\n    if (isNum) {\n      val = \"\".concat(val);\n    }\n\n    val = val.length;\n\n    if (length && val !== rule.length) {\n      errors.push(util.format(options.messages[key].length, rule.aliasName || rule.field, rule.length));\n    } else if (val < minLength) {\n      errors.push(util.format(options.messages[key].minLength, rule.aliasName || rule.field, rule.minLength));\n    } else if (val > maxLength) {\n      errors.push(util.format(options.messages[key].maxLength, rule.aliasName || rule.field, rule.maxLength));\n    }\n  }\n}\n\nvar _default = length;\nexports.default = _default;","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/validate/lib/rules/length.js"],"names":["_interopRequireWildcard","require","Object","defineProperty","exports","value","default","util","length","rule","errors","options","key","isNum","isStr","isArr","Array","isArray","val","Number","maxLength","minLength","concat","push","format","messages","aliasName","field","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,IAAI,GAAGP,uBAAuB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,MAAT,CAAgBC,IAAhB,EAAsBJ,KAAtB,EAA6BK,MAA7B,EAAqCC,OAArC,EAA8C;AAC5C,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIC,KAAK,GAAG,OAAOR,KAAP,KAAiB,QAA7B;AACA,MAAIS,KAAK,GAAG,OAAOT,KAAP,KAAiB,QAA7B;AACA,MAAIU,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcZ,KAAd,CAAZ;;AAEA,MAAIQ,KAAJ,EAAW;AACTD,IAAAA,GAAG,GAAG,QAAN;AACD,GAFD,MAEO,IAAIE,KAAJ,EAAW;AAChBF,IAAAA,GAAG,GAAG,QAAN;AACD,GAFM,MAEA,IAAIG,KAAJ,EAAW;AAChBH,IAAAA,GAAG,GAAG,OAAN;AACD;;AAED,MAAI,CAACA,GAAL,EAAU;AACR,WAAO,KAAP;AACD;;AAED,MAAIM,GAAG,GAAGb,KAAV;AACA,MAAIG,MAAM,GAAGW,MAAM,CAACV,IAAI,CAACD,MAAN,CAAnB;AACA,MAAIY,SAAS,GAAGD,MAAM,CAACV,IAAI,CAACW,SAAN,CAAtB;AACA,MAAIC,SAAS,GAAGF,MAAM,CAACV,IAAI,CAACY,SAAN,CAAtB;;AAEA,MAAIA,SAAS,IAAID,SAAb,IAA0BZ,MAA9B,EAAsC;AACpC,QAAIK,KAAJ,EAAW;AACTK,MAAAA,GAAG,GAAG,GAAGI,MAAH,CAAUJ,GAAV,CAAN;AACD;;AAEDA,IAAAA,GAAG,GAAGA,GAAG,CAACV,MAAV;;AAEA,QAAIA,MAAM,IAAIU,GAAG,KAAKT,IAAI,CAACD,MAA3B,EAAmC;AACjCE,MAAAA,MAAM,CAACa,IAAP,CAAYhB,IAAI,CAACiB,MAAL,CAAYb,OAAO,CAACc,QAAR,CAAiBb,GAAjB,EAAsBJ,MAAlC,EAA0CC,IAAI,CAACiB,SAAL,IAAkBjB,IAAI,CAACkB,KAAjE,EAAwElB,IAAI,CAACD,MAA7E,CAAZ;AACD,KAFD,MAEO,IAAIU,GAAG,GAAGG,SAAV,EAAqB;AAC1BX,MAAAA,MAAM,CAACa,IAAP,CAAYhB,IAAI,CAACiB,MAAL,CAAYb,OAAO,CAACc,QAAR,CAAiBb,GAAjB,EAAsBS,SAAlC,EAA6CZ,IAAI,CAACiB,SAAL,IAAkBjB,IAAI,CAACkB,KAApE,EAA2ElB,IAAI,CAACY,SAAhF,CAAZ;AACD,KAFM,MAEA,IAAIH,GAAG,GAAGE,SAAV,EAAqB;AAC1BV,MAAAA,MAAM,CAACa,IAAP,CAAYhB,IAAI,CAACiB,MAAL,CAAYb,OAAO,CAACc,QAAR,CAAiBb,GAAjB,EAAsBQ,SAAlC,EAA6CX,IAAI,CAACiB,SAAL,IAAkBjB,IAAI,CAACkB,KAApE,EAA2ElB,IAAI,CAACW,SAAhF,CAAZ;AACD;AACF;AACF;;AAED,IAAIQ,QAAQ,GAAGpB,MAAf;AACAJ,OAAO,CAACE,OAAR,GAAkBsB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction length(rule, value, errors, options) {\n  var key = null;\n  var isNum = typeof value === 'number';\n  var isStr = typeof value === 'string';\n  var isArr = Array.isArray(value);\n\n  if (isNum) {\n    key = 'number';\n  } else if (isStr) {\n    key = 'string';\n  } else if (isArr) {\n    key = 'array';\n  }\n\n  if (!key) {\n    return false;\n  }\n\n  var val = value;\n  var length = Number(rule.length);\n  var maxLength = Number(rule.maxLength);\n  var minLength = Number(rule.minLength);\n\n  if (minLength || maxLength || length) {\n    if (isNum) {\n      val = \"\".concat(val);\n    }\n\n    val = val.length;\n\n    if (length && val !== rule.length) {\n      errors.push(util.format(options.messages[key].length, rule.aliasName || rule.field, rule.length));\n    } else if (val < minLength) {\n      errors.push(util.format(options.messages[key].minLength, rule.aliasName || rule.field, rule.minLength));\n    } else if (val > maxLength) {\n      errors.push(util.format(options.messages[key].maxLength, rule.aliasName || rule.field, rule.maxLength));\n    }\n  }\n}\n\nvar _default = length;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}