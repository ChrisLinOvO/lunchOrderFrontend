{"ast":null,"code":"var styleEqual = require('style-equal');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction type(a) {\n  return Array.isArray(a) ? 'array' : typeof a;\n}\n\nfunction elementEquals(a, b) {\n  var typeOfA = type(a);\n  var typeOfB = type(b);\n  if (typeOfA !== typeOfB) return false;\n\n  switch (typeOfA) {\n    case 'array':\n      if (a.length !== b.length) return false;\n\n      for (var i = 0; i < a.length; i++) {\n        if (!elementEquals(a[i], b[i])) return false;\n      }\n\n      return true;\n\n    case 'object':\n      if (!a || !b) return a === b;\n      if (a.type !== b.type) return false;\n      if (a.key !== b.key) return false;\n      if (a.ref !== b.ref) return false;\n      return shallowElementEquals(a.props, b.props);\n      break;\n\n    default:\n      return a === b;\n  }\n}\n\nfunction shallowElementEquals(a, b) {\n  var aCount = 0;\n  var bCount = 0;\n\n  for (var key in a) {\n    if (hasOwnProperty.call(a, key)) {\n      if (key === 'style') {\n        // NOTE(lmr): kind of risky, but i'm assuming that a `style` prop is a React Native style,\n        // and using the `styleEqual` algorithm here.\n        if (!styleEqual(a[key], b[key])) return false;\n      } else if (key === 'children') {// will compare children later\n      } else {\n        if (a[key] !== b[key]) return false;\n      }\n\n      aCount++;\n    }\n  }\n\n  for (var key in b) {\n    if (hasOwnProperty.call(b, key)) {\n      bCount++;\n    }\n  }\n\n  if (aCount !== bCount) return false; // compare children last...\n\n  return elementEquals(a.children, b.children);\n}\n\nmodule.exports = shallowElementEquals;","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/shallow-element-equals/index.js"],"names":["styleEqual","require","hasOwnProperty","Object","prototype","type","a","Array","isArray","elementEquals","b","typeOfA","typeOfB","length","i","key","ref","shallowElementEquals","props","aCount","bCount","call","children","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAtC;;AAEA,SAASG,IAAT,CAAcC,CAAd,EAAiB;AACf,SAAOC,KAAK,CAACC,OAAN,CAAcF,CAAd,IAAmB,OAAnB,GAA6B,OAAOA,CAA3C;AACD;;AAED,SAASG,aAAT,CAAuBH,CAAvB,EAA0BI,CAA1B,EAA6B;AAC3B,MAAIC,OAAO,GAAGN,IAAI,CAACC,CAAD,CAAlB;AACA,MAAIM,OAAO,GAAGP,IAAI,CAACK,CAAD,CAAlB;AAEA,MAAIC,OAAO,KAAKC,OAAhB,EAAyB,OAAO,KAAP;;AAEzB,UAAQD,OAAR;AACE,SAAK,OAAL;AACE,UAAIL,CAAC,CAACO,MAAF,KAAaH,CAAC,CAACG,MAAnB,EAA2B,OAAO,KAAP;;AAC3B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,CAAC,CAACO,MAAtB,EAA8BC,CAAC,EAA/B,EAAmC;AACjC,YAAI,CAACL,aAAa,CAACH,CAAC,CAACQ,CAAD,CAAF,EAAOJ,CAAC,CAACI,CAAD,CAAR,CAAlB,EAAgC,OAAO,KAAP;AACjC;;AACD,aAAO,IAAP;;AACF,SAAK,QAAL;AACE,UAAI,CAACR,CAAD,IAAM,CAACI,CAAX,EAAc,OAAOJ,CAAC,KAAKI,CAAb;AACd,UAAIJ,CAAC,CAACD,IAAF,KAAWK,CAAC,CAACL,IAAjB,EAAuB,OAAO,KAAP;AACvB,UAAIC,CAAC,CAACS,GAAF,KAAUL,CAAC,CAACK,GAAhB,EAAqB,OAAO,KAAP;AACrB,UAAIT,CAAC,CAACU,GAAF,KAAUN,CAAC,CAACM,GAAhB,EAAqB,OAAO,KAAP;AACrB,aAAOC,oBAAoB,CAACX,CAAC,CAACY,KAAH,EAAUR,CAAC,CAACQ,KAAZ,CAA3B;AACA;;AACF;AACE,aAAOZ,CAAC,KAAKI,CAAb;AAfJ;AAiBD;;AAED,SAASO,oBAAT,CAA8BX,CAA9B,EAAiCI,CAAjC,EAAoC;AAClC,MAAIS,MAAM,GAAG,CAAb;AACA,MAAIC,MAAM,GAAG,CAAb;;AAEA,OAAK,IAAIL,GAAT,IAAgBT,CAAhB,EAAmB;AACjB,QAAIJ,cAAc,CAACmB,IAAf,CAAoBf,CAApB,EAAuBS,GAAvB,CAAJ,EAAiC;AAC/B,UAAIA,GAAG,KAAK,OAAZ,EAAqB;AACnB;AACA;AACA,YAAI,CAACf,UAAU,CAACM,CAAC,CAACS,GAAD,CAAF,EAASL,CAAC,CAACK,GAAD,CAAV,CAAf,EAAiC,OAAO,KAAP;AAClC,OAJD,MAIO,IAAIA,GAAG,KAAK,UAAZ,EAAwB,CAC7B;AACD,OAFM,MAEA;AACL,YAAIT,CAAC,CAACS,GAAD,CAAD,KAAWL,CAAC,CAACK,GAAD,CAAhB,EAAuB,OAAO,KAAP;AACxB;;AACDI,MAAAA,MAAM;AACP;AACF;;AAED,OAAK,IAAIJ,GAAT,IAAgBL,CAAhB,EAAmB;AACjB,QAAIR,cAAc,CAACmB,IAAf,CAAoBX,CAApB,EAAuBK,GAAvB,CAAJ,EAAiC;AAC/BK,MAAAA,MAAM;AACP;AACF;;AAED,MAAID,MAAM,KAAKC,MAAf,EAAuB,OAAO,KAAP,CAzBW,CA2BlC;;AACA,SAAOX,aAAa,CAACH,CAAC,CAACgB,QAAH,EAAaZ,CAAC,CAACY,QAAf,CAApB;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBP,oBAAjB","sourcesContent":["var styleEqual = require('style-equal');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction type(a) {\n  return Array.isArray(a) ? 'array' : typeof a;\n}\n\nfunction elementEquals(a, b) {\n  var typeOfA = type(a);\n  var typeOfB = type(b);\n\n  if (typeOfA !== typeOfB) return false;\n\n  switch (typeOfA) {\n    case 'array':\n      if (a.length !== b.length) return false;\n      for (var i = 0; i < a.length; i++) {\n        if (!elementEquals(a[i], b[i])) return false;\n      }\n      return true;\n    case 'object':\n      if (!a || !b) return a === b;\n      if (a.type !== b.type) return false;\n      if (a.key !== b.key) return false;\n      if (a.ref !== b.ref) return false;\n      return shallowElementEquals(a.props, b.props);\n      break;\n    default:\n      return a === b;\n  }\n}\n\nfunction shallowElementEquals(a, b) {\n  var aCount = 0;\n  var bCount = 0;\n\n  for (var key in a) {\n    if (hasOwnProperty.call(a, key)) {\n      if (key === 'style') {\n        // NOTE(lmr): kind of risky, but i'm assuming that a `style` prop is a React Native style,\n        // and using the `styleEqual` algorithm here.\n        if (!styleEqual(a[key], b[key])) return false;\n      } else if (key === 'children') {\n        // will compare children later\n      } else {\n        if (a[key] !== b[key]) return false;\n      }\n      aCount++;\n    }\n  }\n\n  for (var key in b) {\n    if (hasOwnProperty.call(b, key)) {\n      bCount++;\n    }\n  }\n\n  if (aCount !== bCount) return false;\n\n  // compare children last...\n  return elementEquals(a.children, b.children);\n}\n\nmodule.exports = shallowElementEquals;\n"]},"metadata":{},"sourceType":"script"}