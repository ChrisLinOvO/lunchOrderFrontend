{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component, Children } from 'react';\nimport { findDOMNode, createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { func } from '../util';\nimport findNode from './utils/find-node';\nvar makeChain = func.makeChain;\n\nvar getContainerNode = function getContainerNode(props) {\n  var targetNode = findNode(props.target);\n  return findNode(props.container, targetNode);\n};\n\nvar Gateway = (_temp = _class = function (_Component) {\n  _inherits(Gateway, _Component);\n\n  function Gateway(props) {\n    _classCallCheck(this, Gateway);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.updateContainer = function () {\n      var containerNode = getContainerNode(_this.props);\n\n      if (containerNode !== _this.state.containerNode) {\n        // eslint-disable-next-line\n        _this.setState({\n          containerNode: containerNode\n        });\n      }\n    };\n\n    _this.saveChildRef = function (ref) {\n      _this.child = ref;\n    };\n\n    _this.state = {\n      containerNode: null\n    };\n    return _this;\n  }\n\n  Gateway.prototype.componentDidMount = function componentDidMount() {\n    this.updateContainer();\n  };\n\n  Gateway.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.updateContainer();\n  };\n\n  Gateway.prototype.getChildNode = function getChildNode() {\n    try {\n      return findDOMNode(this.child);\n    } catch (err) {\n      return null;\n    }\n  };\n\n  Gateway.prototype.render = function render() {\n    var containerNode = this.state.containerNode;\n\n    if (!containerNode) {\n      return null;\n    }\n\n    var children = this.props.children;\n    var child = children ? Children.only(children) : null;\n\n    if (!child) {\n      return null;\n    }\n\n    if (typeof child.ref === 'string') {\n      throw new Error('Can not set ref by string in Gateway, use function instead.');\n    }\n\n    child = React.cloneElement(child, {\n      ref: makeChain(this.saveChildRef, child.ref)\n    });\n    return createPortal(child, containerNode);\n  };\n\n  return Gateway;\n}(Component), _class.propTypes = {\n  children: PropTypes.node,\n  container: PropTypes.any,\n  target: PropTypes.any\n}, _class.defaultProps = {\n  container: function container() {\n    return document.body;\n  }\n}, _temp);\nGateway.displayName = 'Gateway';\nexport default polyfill(Gateway);","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/overlay/gateway.js"],"names":["_classCallCheck","_possibleConstructorReturn","_inherits","_class","_temp","React","Component","Children","findDOMNode","createPortal","PropTypes","polyfill","func","findNode","makeChain","getContainerNode","props","targetNode","target","container","Gateway","_Component","_this","call","updateContainer","containerNode","state","setState","saveChildRef","ref","child","prototype","componentDidMount","componentDidUpdate","getChildNode","err","render","children","only","Error","cloneElement","propTypes","node","any","defaultProps","document","body","displayName"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar _class, _temp;\n\nimport React, { Component, Children } from 'react';\nimport { findDOMNode, createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { func } from '../util';\nimport findNode from './utils/find-node';\n\nvar makeChain = func.makeChain;\n\n\nvar getContainerNode = function getContainerNode(props) {\n    var targetNode = findNode(props.target);\n    return findNode(props.container, targetNode);\n};\n\nvar Gateway = (_temp = _class = function (_Component) {\n    _inherits(Gateway, _Component);\n\n    function Gateway(props) {\n        _classCallCheck(this, Gateway);\n\n        var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n        _this.updateContainer = function () {\n            var containerNode = getContainerNode(_this.props);\n\n            if (containerNode !== _this.state.containerNode) {\n                // eslint-disable-next-line\n                _this.setState({\n                    containerNode: containerNode\n                });\n            }\n        };\n\n        _this.saveChildRef = function (ref) {\n            _this.child = ref;\n        };\n\n        _this.state = {\n            containerNode: null\n        };\n        return _this;\n    }\n\n    Gateway.prototype.componentDidMount = function componentDidMount() {\n        this.updateContainer();\n    };\n\n    Gateway.prototype.componentDidUpdate = function componentDidUpdate() {\n        this.updateContainer();\n    };\n\n    Gateway.prototype.getChildNode = function getChildNode() {\n        try {\n            return findDOMNode(this.child);\n        } catch (err) {\n            return null;\n        }\n    };\n\n    Gateway.prototype.render = function render() {\n        var containerNode = this.state.containerNode;\n\n\n        if (!containerNode) {\n            return null;\n        }\n\n        var children = this.props.children;\n\n        var child = children ? Children.only(children) : null;\n        if (!child) {\n            return null;\n        }\n\n        if (typeof child.ref === 'string') {\n            throw new Error('Can not set ref by string in Gateway, use function instead.');\n        }\n        child = React.cloneElement(child, {\n            ref: makeChain(this.saveChildRef, child.ref)\n        });\n\n        return createPortal(child, containerNode);\n    };\n\n    return Gateway;\n}(Component), _class.propTypes = {\n    children: PropTypes.node,\n    container: PropTypes.any,\n    target: PropTypes.any\n}, _class.defaultProps = {\n    container: function container() {\n        return document.body;\n    }\n}, _temp);\nGateway.displayName = 'Gateway';\n\n\nexport default polyfill(Gateway);"]},"metadata":{},"sourceType":"module"}