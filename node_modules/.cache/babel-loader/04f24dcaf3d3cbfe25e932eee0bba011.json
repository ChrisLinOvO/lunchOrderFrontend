{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\n\nvar Cache = function () {\n  function Cache() {\n    _classCallCheck(this, Cache);\n\n    this._root = null;\n    this._store = new Map();\n  }\n\n  Cache.prototype.empty = function empty() {\n    return this._store.size === 0;\n  };\n\n  Cache.prototype.has = function has(key) {\n    return this._store.has(key);\n  };\n\n  Cache.prototype.get = function get(key, defaultValue) {\n    var res = this.has(key) ? this._store.get(key) : this.root();\n    return typeof res === 'undefined' || res === null ? defaultValue : res;\n  };\n\n  Cache.prototype.add = function add(key, value) {\n    if (this.empty()) {\n      this._root = key;\n    }\n\n    this._store.set(key, value);\n  };\n\n  Cache.prototype.update = function update(key, value) {\n    if (this.has(key)) {\n      this._store.set(key, value);\n    }\n  };\n\n  Cache.prototype.remove = function remove(key) {\n    this._store.delete(key);\n\n    if (key === this._root) {\n      var maps = this._store.keys(); // 如果当前销毁的实例刚好是root，那么从map中取下一个加入的节点当作root\n\n\n      var nextkey = maps.next().value;\n      this._root = nextkey;\n    }\n  };\n\n  Cache.prototype.clear = function clear() {\n    this._store.clear();\n  };\n\n  Cache.prototype.root = function root() {\n    return this._store.get(this._root);\n  };\n\n  return Cache;\n}();\n\nexport default Cache;","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/config-provider/cache.js"],"names":["_classCallCheck","Cache","_root","_store","Map","prototype","empty","size","has","key","get","defaultValue","res","root","add","value","set","update","remove","delete","maps","keys","nextkey","next","clear"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,sCAA5B;;AAEA,IAAIC,KAAK,GAAG,YAAY;AACpB,WAASA,KAAT,GAAiB;AACbD,IAAAA,eAAe,CAAC,IAAD,EAAOC,KAAP,CAAf;;AAEA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,MAAL,GAAc,IAAIC,GAAJ,EAAd;AACH;;AAEDH,EAAAA,KAAK,CAACI,SAAN,CAAgBC,KAAhB,GAAwB,SAASA,KAAT,GAAiB;AACrC,WAAO,KAAKH,MAAL,CAAYI,IAAZ,KAAqB,CAA5B;AACH,GAFD;;AAIAN,EAAAA,KAAK,CAACI,SAAN,CAAgBG,GAAhB,GAAsB,SAASA,GAAT,CAAaC,GAAb,EAAkB;AACpC,WAAO,KAAKN,MAAL,CAAYK,GAAZ,CAAgBC,GAAhB,CAAP;AACH,GAFD;;AAIAR,EAAAA,KAAK,CAACI,SAAN,CAAgBK,GAAhB,GAAsB,SAASA,GAAT,CAAaD,GAAb,EAAkBE,YAAlB,EAAgC;AAClD,QAAIC,GAAG,GAAG,KAAKJ,GAAL,CAASC,GAAT,IAAgB,KAAKN,MAAL,CAAYO,GAAZ,CAAgBD,GAAhB,CAAhB,GAAuC,KAAKI,IAAL,EAAjD;AACA,WAAO,OAAOD,GAAP,KAAe,WAAf,IAA8BA,GAAG,KAAK,IAAtC,GAA6CD,YAA7C,GAA4DC,GAAnE;AACH,GAHD;;AAKAX,EAAAA,KAAK,CAACI,SAAN,CAAgBS,GAAhB,GAAsB,SAASA,GAAT,CAAaL,GAAb,EAAkBM,KAAlB,EAAyB;AAC3C,QAAI,KAAKT,KAAL,EAAJ,EAAkB;AACd,WAAKJ,KAAL,GAAaO,GAAb;AACH;;AACD,SAAKN,MAAL,CAAYa,GAAZ,CAAgBP,GAAhB,EAAqBM,KAArB;AACH,GALD;;AAOAd,EAAAA,KAAK,CAACI,SAAN,CAAgBY,MAAhB,GAAyB,SAASA,MAAT,CAAgBR,GAAhB,EAAqBM,KAArB,EAA4B;AACjD,QAAI,KAAKP,GAAL,CAASC,GAAT,CAAJ,EAAmB;AACf,WAAKN,MAAL,CAAYa,GAAZ,CAAgBP,GAAhB,EAAqBM,KAArB;AACH;AACJ,GAJD;;AAMAd,EAAAA,KAAK,CAACI,SAAN,CAAgBa,MAAhB,GAAyB,SAASA,MAAT,CAAgBT,GAAhB,EAAqB;AAC1C,SAAKN,MAAL,CAAYgB,MAAZ,CAAmBV,GAAnB;;AAEA,QAAIA,GAAG,KAAK,KAAKP,KAAjB,EAAwB;AACpB,UAAIkB,IAAI,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,EAAX,CADoB,CAEpB;;;AACA,UAAIC,OAAO,GAAGF,IAAI,CAACG,IAAL,GAAYR,KAA1B;AACA,WAAKb,KAAL,GAAaoB,OAAb;AACH;AACJ,GATD;;AAWArB,EAAAA,KAAK,CAACI,SAAN,CAAgBmB,KAAhB,GAAwB,SAASA,KAAT,GAAiB;AACrC,SAAKrB,MAAL,CAAYqB,KAAZ;AACH,GAFD;;AAIAvB,EAAAA,KAAK,CAACI,SAAN,CAAgBQ,IAAhB,GAAuB,SAASA,IAAT,GAAgB;AACnC,WAAO,KAAKV,MAAL,CAAYO,GAAZ,CAAgB,KAAKR,KAArB,CAAP;AACH,GAFD;;AAIA,SAAOD,KAAP;AACH,CAtDW,EAAZ;;AAwDA,eAAeA,KAAf","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\n\nvar Cache = function () {\n    function Cache() {\n        _classCallCheck(this, Cache);\n\n        this._root = null;\n        this._store = new Map();\n    }\n\n    Cache.prototype.empty = function empty() {\n        return this._store.size === 0;\n    };\n\n    Cache.prototype.has = function has(key) {\n        return this._store.has(key);\n    };\n\n    Cache.prototype.get = function get(key, defaultValue) {\n        var res = this.has(key) ? this._store.get(key) : this.root();\n        return typeof res === 'undefined' || res === null ? defaultValue : res;\n    };\n\n    Cache.prototype.add = function add(key, value) {\n        if (this.empty()) {\n            this._root = key;\n        }\n        this._store.set(key, value);\n    };\n\n    Cache.prototype.update = function update(key, value) {\n        if (this.has(key)) {\n            this._store.set(key, value);\n        }\n    };\n\n    Cache.prototype.remove = function remove(key) {\n        this._store.delete(key);\n\n        if (key === this._root) {\n            var maps = this._store.keys();\n            // 如果当前销毁的实例刚好是root，那么从map中取下一个加入的节点当作root\n            var nextkey = maps.next().value;\n            this._root = nextkey;\n        }\n    };\n\n    Cache.prototype.clear = function clear() {\n        this._store.clear();\n    };\n\n    Cache.prototype.root = function root() {\n        return this._store.get(this._root);\n    };\n\n    return Cache;\n}();\n\nexport default Cache;"]},"metadata":{},"sourceType":"module"}