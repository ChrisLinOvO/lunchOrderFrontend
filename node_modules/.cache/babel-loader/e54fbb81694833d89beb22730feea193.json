{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport zhCN from '../locale/zh-cn.js';\nimport { obj } from '../util';\n/**\n *\n * @param {Object|Boolean} input\n * @returns {Object} typeof obj.open === 'boolean'\n */\n\nvar parseBoundary = function parseBoundary(input) {\n  var obj = void 0;\n\n  if (input === undefined || input === null) {\n    return {};\n  } else if (typeof input === 'boolean') {\n    obj = {\n      open: input\n    };\n  } else {\n    obj = _extends({\n      open: true\n    }, input);\n  }\n\n  return obj;\n};\n\nexport default function getContextProps(props, context, displayName) {\n  var prefix = props.prefix,\n      locale = props.locale,\n      defaultPropsConfig = props.defaultPropsConfig,\n      pure = props.pure,\n      rtl = props.rtl,\n      device = props.device,\n      popupContainer = props.popupContainer,\n      errorBoundary = props.errorBoundary;\n  var nextPrefix = context.nextPrefix,\n      nextLocale = context.nextLocale,\n      nextDefaultPropsConfig = context.nextDefaultPropsConfig,\n      nextPure = context.nextPure,\n      nextWarning = context.nextWarning,\n      nextRtl = context.nextRtl,\n      nextDevice = context.nextDevice,\n      nextPopupContainer = context.nextPopupContainer,\n      nextErrorBoundary = context.nextErrorBoundary;\n  var newPrefix = prefix || nextPrefix;\n  var localeFromContext = void 0;\n  var newDisplayName = displayName;\n\n  switch (displayName) {\n    case 'DatePicker2':\n      newDisplayName = 'DatePicker';\n      break;\n\n    case 'Calendar2':\n      newDisplayName = 'Calendar';\n      break;\n\n    case 'TimePicker2':\n      newDisplayName = 'TimePicker';\n      break;\n\n    default:\n      break;\n  }\n\n  if (nextLocale) {\n    localeFromContext = nextLocale[newDisplayName];\n\n    if (localeFromContext) {\n      localeFromContext.momentLocale = nextLocale.momentLocale;\n    }\n  }\n\n  var newLocale = void 0;\n\n  if (locale) {\n    newLocale = obj.deepMerge({}, zhCN[newDisplayName], localeFromContext, locale);\n  } else if (localeFromContext) {\n    newLocale = obj.deepMerge({}, zhCN[newDisplayName], localeFromContext);\n  }\n\n  var newPure = typeof pure === 'boolean' ? pure : nextPure;\n  var newRtl = typeof rtl === 'boolean' ? rtl : nextRtl; // ProtoType of [nextE|e]rrorBoundary can be one of [boolean, object]\n  // but typeof newErrorBoundary === 'object'\n  // newErrorBoundary should always have the key 'open', which indicates ErrorBoundary on or off\n\n  var newErrorBoundary = _extends({}, parseBoundary(nextErrorBoundary), parseBoundary(errorBoundary));\n\n  if (!('open' in newErrorBoundary)) {\n    newErrorBoundary.open = false;\n  }\n\n  return {\n    prefix: newPrefix,\n    locale: newLocale,\n    pure: newPure,\n    rtl: newRtl,\n    warning: nextWarning,\n    defaultPropsConfig: nextDefaultPropsConfig || {},\n    device: device || nextDevice || undefined,\n    popupContainer: popupContainer || nextPopupContainer,\n    errorBoundary: newErrorBoundary\n  };\n}","map":{"version":3,"sources":["/Users/Chris/Project/lunch-order-backstage/node_modules/@alifd/next/es/config-provider/get-context-props.js"],"names":["_extends","zhCN","obj","parseBoundary","input","undefined","open","getContextProps","props","context","displayName","prefix","locale","defaultPropsConfig","pure","rtl","device","popupContainer","errorBoundary","nextPrefix","nextLocale","nextDefaultPropsConfig","nextPure","nextWarning","nextRtl","nextDevice","nextPopupContainer","nextErrorBoundary","newPrefix","localeFromContext","newDisplayName","momentLocale","newLocale","deepMerge","newPure","newRtl","newErrorBoundary","warning"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport zhCN from '../locale/zh-cn.js';\nimport { obj } from '../util';\n/**\n *\n * @param {Object|Boolean} input\n * @returns {Object} typeof obj.open === 'boolean'\n */\nvar parseBoundary = function parseBoundary(input) {\n    var obj = void 0;\n    if (input === undefined || input === null) {\n        return {};\n    } else if (typeof input === 'boolean') {\n        obj = { open: input };\n    } else {\n        obj = _extends({ open: true }, input);\n    }\n\n    return obj;\n};\n\nexport default function getContextProps(props, context, displayName) {\n    var prefix = props.prefix,\n        locale = props.locale,\n        defaultPropsConfig = props.defaultPropsConfig,\n        pure = props.pure,\n        rtl = props.rtl,\n        device = props.device,\n        popupContainer = props.popupContainer,\n        errorBoundary = props.errorBoundary;\n    var nextPrefix = context.nextPrefix,\n        nextLocale = context.nextLocale,\n        nextDefaultPropsConfig = context.nextDefaultPropsConfig,\n        nextPure = context.nextPure,\n        nextWarning = context.nextWarning,\n        nextRtl = context.nextRtl,\n        nextDevice = context.nextDevice,\n        nextPopupContainer = context.nextPopupContainer,\n        nextErrorBoundary = context.nextErrorBoundary;\n\n\n    var newPrefix = prefix || nextPrefix;\n\n    var localeFromContext = void 0;\n    var newDisplayName = displayName;\n\n    switch (displayName) {\n        case 'DatePicker2':\n            newDisplayName = 'DatePicker';\n            break;\n        case 'Calendar2':\n            newDisplayName = 'Calendar';\n            break;\n        case 'TimePicker2':\n            newDisplayName = 'TimePicker';\n            break;\n        default:\n            break;\n    }\n\n    if (nextLocale) {\n        localeFromContext = nextLocale[newDisplayName];\n        if (localeFromContext) {\n            localeFromContext.momentLocale = nextLocale.momentLocale;\n        }\n    }\n\n    var newLocale = void 0;\n    if (locale) {\n        newLocale = obj.deepMerge({}, zhCN[newDisplayName], localeFromContext, locale);\n    } else if (localeFromContext) {\n        newLocale = obj.deepMerge({}, zhCN[newDisplayName], localeFromContext);\n    }\n\n    var newPure = typeof pure === 'boolean' ? pure : nextPure;\n    var newRtl = typeof rtl === 'boolean' ? rtl : nextRtl;\n\n    // ProtoType of [nextE|e]rrorBoundary can be one of [boolean, object]\n    // but typeof newErrorBoundary === 'object'\n    // newErrorBoundary should always have the key 'open', which indicates ErrorBoundary on or off\n    var newErrorBoundary = _extends({}, parseBoundary(nextErrorBoundary), parseBoundary(errorBoundary));\n\n    if (!('open' in newErrorBoundary)) {\n        newErrorBoundary.open = false;\n    }\n\n    return {\n        prefix: newPrefix,\n        locale: newLocale,\n        pure: newPure,\n        rtl: newRtl,\n        warning: nextWarning,\n        defaultPropsConfig: nextDefaultPropsConfig || {},\n        device: device || nextDevice || undefined,\n        popupContainer: popupContainer || nextPopupContainer,\n        errorBoundary: newErrorBoundary\n    };\n}"]},"metadata":{},"sourceType":"module"}