[{"/Users/Chris/Project/lunch-order-backstage/src/index.js":"1","/Users/Chris/Project/lunch-order-backstage/src/reportWebVitals.js":"2","/Users/Chris/Project/lunch-order-backstage/src/App.js":"3","/Users/Chris/Project/lunch-order-backstage/src/components/OrderTable/index.jsx":"4","/Users/Chris/Project/lunch-order-backstage/src/components/OrderTable/OrderTable.jsx":"5","/Users/Chris/Project/lunch-order-backstage/src/lib/feathers.js":"6","/Users/Chris/Project/lunch-order-backstage/src/pages/Lunch/index.jsx":"7","/Users/Chris/Project/lunch-order-backstage/src/pages/Lunch/Lunch.jsx":"8","/Users/Chris/Project/lunch-order-backstage/src/components/menu/index.jsx":"9","/Users/Chris/Project/lunch-order-backstage/src/components/menu/Menu.jsx":"10","/Users/Chris/Project/lunch-order-backstage/src/components/Menu/index.jsx":"11","/Users/Chris/Project/lunch-order-backstage/src/components/Menu/Menu.jsx":"12"},{"size":500,"mtime":1633418199382,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1633418199387,"results":"15","hashOfConfig":"14"},{"size":1249,"mtime":1634006827177,"results":"16","hashOfConfig":"14"},{"size":65,"mtime":1633421059748,"results":"17","hashOfConfig":"14"},{"size":19858,"mtime":1633683965332,"results":"18","hashOfConfig":"14"},{"size":396,"mtime":1634093456522,"results":"19","hashOfConfig":"14"},{"size":50,"mtime":1633662805552,"results":"20","hashOfConfig":"14"},{"size":3404,"mtime":1633682511319,"results":"21","hashOfConfig":"14"},{"size":47,"mtime":1633662743438,"results":"22","hashOfConfig":"14"},{"size":17400,"mtime":1634001790865,"results":"23","hashOfConfig":"14"},{"size":47,"mtime":1633662743438,"results":"24","hashOfConfig":"14"},{"size":17404,"mtime":1634093233136,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8t5qug",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/Chris/Project/lunch-order-backstage/src/index.js",[],["55","56"],"/Users/Chris/Project/lunch-order-backstage/src/reportWebVitals.js",[],"/Users/Chris/Project/lunch-order-backstage/src/App.js",["57"],"import React, { useState } from 'react';\nimport { Input } from '@alifd/next';\nimport './App.css';\nimport Lunch from './pages/Lunch';\n\nconst App = () => {\n  const [tFilterStr, setTFilterStr] = useState('');\n  const [payAllTotal, setPayAllTotal] = useState(0);\n  const [payOkTotal, setPayOkTotal] = useState(0);\n  const [payNoArr, setPayNoArr] = useState([]);\n  const [payYes, setPayYes] = useState(0);\n \n\n  function searchRender(value) {//input search filter\n\n    setTFilterStr(value);\n  }\n  return (\n    <div className=\"app\">\n      <div  className=\"title\">EZCON點餐系統後台</div>\n      <div className=\"box\">\n        <Input\n          \n          size=\"large\"\n          placeholder=\"輸入搜尋文字\"\n          onChange={searchRender}\n          aria-label=\"this is input\"\n        />\n        <div className=\"payText\">總金額:{payAllTotal}元</div>\n        <div  className=\"payText\">已收:{payYes}元</div>\n        <div  className=\"payText\">未付錢:{payNoArr&&payNoArr.length>0?payNoArr.join():\"都付錢了\"}</div>\n\n        </div>\n     <br/><br/>\n      <Lunch filterStr={tFilterStr} setPayAllTotal={setPayAllTotal} setPayOkTotal={setPayOkTotal} setPayNoArr={setPayNoArr} setPayYes={setPayYes}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","/Users/Chris/Project/lunch-order-backstage/src/components/OrderTable/index.jsx",[],"/Users/Chris/Project/lunch-order-backstage/src/components/OrderTable/OrderTable.jsx",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport {\n  Button,\n  Dialog,\n  Input,\n  Form,\n  Select,\n  DatePicker,\n  Message,\n  Card,\n  Table,\n  Pagination\n} from \"@alifd/next\";\nimport Swal from 'sweetalert2';\nimport client from '../../lib/feathers';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './OrderTable.css';\nconst Option = Select.Option;\nconst { Item } = Form;\nconst OrderTable = (props) => {\n  const { dbName, keys, text } = props.tarProps;\n  const dbService = client.service(`${dbName}`);\n  // const [listData, setListData] = useState([]);\n  // const [listDataAll, setListDataAll] = useState([]);\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\");\n  //uploads files\n  const [parsed, setParsed] = useState([]);\n  const [parsed64, setParsed64] = useState([]); //Base64\n  const [file, setFile] = useState(\"\");\n  const uploadFile = useRef(null);\n  const uploadExcelFile = useRef(null);\n  // sort\n  const [curdataIndex, setcurDataIndex] = useState('money');\n  const [curorder, setcurOrder] = useState('asc');\n  // change page\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.listData.slice(indexOfFirstPost, indexOfLastPost);\n  // dbService\n  async function funFind(para) {\n    const result = await dbService.find({ query: para });\n    // console.log(result);\n    return result && result.data ? result.data : [];\n  }\n\n  async function funCreate(obj) {\n    return (await dbService.create(obj))\n  }\n  async function funUpdate(id, obj) {\n    return (await dbService.patch(id, obj))\n  }\n  async function funRemove(id) {\n    return (await dbService.remove(id))\n  }\n  const serverDataUpdate = (dataIndex, order) => {\n    const rdataIndex = dataIndex || curdataIndex;\n    const rorder = order || curorder;\n\n    funFind({}).then((result) => {\n      const sortedArr = result.sort((a, b) => {\n        const result = (typeof a[rdataIndex] === 'number'\n          ? a[rdataIndex].toString()\n          : a[rdataIndex]\n        ).localeCompare(\n          typeof b[rdataIndex] === 'number'\n            ? b[rdataIndex].toString()\n            : b[rdataIndex]\n        );\n        return rorder === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1;\n      })\n      props.listDataProps(sortedArr);\n      props.listDataAllProps(sortedArr);\n      props.payAllTotalProps(sortedArr);\n    });\n\n\n  };\n  const onTableSort = (dataIndex, order) => {\n    console.log('==dataIndex:', dataIndex, 'order:', order);\n    setcurDataIndex(dataIndex);\n    setcurOrder(order);\n    serverDataUpdate(dataIndex, order);\n  };\n\n  useEffect(() => {\n    serverDataUpdate();\n  }, []);\n\n\n\n  function beforeUpload() {\n    return new Promise(async (resolve, reject) => {\n      if (uploadFile.current.files.length > 0) {\n        const isLt20M =\n          (await uploadFile.current.files[0].size) / 1024 / 1024 < 20;\n\n        if (!isLt20M) {\n          Message.error('Image must smaller than 20MB!');\n          return reject();\n        }\n        resolve(isLt20M);\n      } else {\n        setParsed64('')\n      }\n    });\n  }\n\n  const handleFiles = async () => {\n    try {\n      await beforeUpload();\n      const files = [...parsed];\n      const data = await uploadFile.current.files[0];\n      // console.log(data)\n      files.push(data);\n      setParsed(files);\n\n      //轉Base64 上傳檔案後呈現沒有寫到DB\n      const reader = new FileReader();\n      reader.onload = function () {\n        let dataURL = reader.result;\n        setParsed64(dataURL);\n      };\n      reader.readAsDataURL(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n    let obj = {};\n    obj[key] = value;\n\n    setWriteData({ ...writeData, ...obj });\n  };\n  const createSend = () => {\n    //-------Create Data 送出\n    if (editKey == true) { //Check is edit state\n\n\n      Swal.fire({\n        title: `確定修改此資料?`,\n        text: '請確認修改資料!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消',\n      }).then((result) => {\n        if (result.isConfirmed) {\n\n          const data = currentPosts[editIndex];\n\n          let newObj = { ...data, ...writeData }\n\n          patchOrders(newObj)\n\n\n        }\n      });\n    } else {\n\n      Swal.fire({\n        title: `確定新增此資料?`,\n        text: '請確認資料填寫完整!!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#BEBEBE',\n        confirmButtonText: '確定',\n        cancelButtonText: '取消',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          createOrders();\n\n        }\n      });\n\n    }\n  };\n\n\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n    switch (type) {\n      case \"input\":\n        element = (\n          <Input\n            value={writeData[e]}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n            placeholder={e}\n          />\n        );\n        break;\n      case \"datePicker\":\n        element = (\n          <DatePicker\n            value={writeData[e]}\n            placeholder={e}\n            onChange={(value) => {\n              addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n            }}\n          />\n        );\n        break;\n      case \"textArea\":\n        element = (\n          <Input.TextArea\n            value={writeData[e]}\n            placeholder={e}\n            maxLength={500}\n            rows={6}\n            hasLimitHint\n            aria-label=\"input max length 500\"\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"select\":\n        element = (\n          <Select\n            value={writeData[e]}\n            hasClear\n            style={{ width: '100%' }}\n            placeholder={e}\n            dataSource={props.categoryProps}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"uploads\":\n        element = (\n          <>\n            <input\n              accept=\"image/png, image/jpeg, image/jpg\"\n              ref={uploadFile}\n              onChange={handleFiles}\n              type=\"file\"\n              id=\"file\"\n              name=\"files\"\n            // multiple\n            />\n            {editKey == true ?\n              <img\n                style={{ width: '50px', height: '50px' }}\n                src={`${parsed64.length > 0 ? parsed64 : currentPosts[editIndex].files}`}\n                alt=\"圖片\"\n              />\n\n              : null\n\n            }\n\n            {/* <img  src={`${parsed64.length > 0 ? parsed64 : ezconImg}`} alt=\"圖片\"></img> */}\n          </>);\n        break;\n      case \"multiSelect\":\n        element = (\n          <>\n            <Select\n              mode=\"multiple\"\n              value={writeData[e]}\n              showSearch\n              onChange={(value) => {\n                addCreateData(e, value);\n              }}\n              dataSource={props.venderNameProps}\n              style={{ width: '100%' }}\n            />\n\n          </>);\n        break;\n    }\n    return element;\n  };\n\n\n\n\n\n  function createOrders() {//Use orders create\n    funCreate({ ...writeData, stage: \"完成\" }).then((res) => {\n      Swal.fire('成功!', `此資料已新增`, 'success');\n      console.log('==create success:', res);\n      serverDataUpdate();\n      setWriteData({});\n      setParsed64('');\n      setEditKey(false);\n      setPopupState(false);\n    }).catch((error) => {\n      console.log('==create fail:', error);\n      // Message.error(`${err}`);\n    })\n\n  }\n\n  function patchPayOrders(data) {//Use pay money patch\n\n    Swal.fire({\n      title: `確定午餐錢繳交?`,\n      text: '麻煩再次確認金額哦～～',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#BEBEBE',\n      confirmButtonText: '確定',\n      cancelButtonText: '取消',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        funUpdate(data._id, { pay: true }).then((res) => {\n          console.log('==update success:', res);\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: '付錢成功',\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          // console.log(\"data.money\",data.money)\n          // props.setPayOkProps(data.money)\n          serverDataUpdate();\n          setWriteData({});\n          setParsed64('');\n          setEditKey(false);\n          setPopupState(false);\n        })\n          .catch((error) => {\n            console.log('==update fail:', error);\n            Message.success('付錢失敗');\n          });\n      }\n    });\n\n\n  }\n\n  function deleteAllData() {// delete all data\n\n    Swal.fire({\n      title: `確設刪除全部訂單?`,\n      text: '刪除後將無法復原哦～～',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#BEBEBE',\n      confirmButtonText: '確定',\n      cancelButtonText: '取消',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dbService.remove(null,{query:{}}).then((res) => {\n\n          console.log('==delete success:', res);\n \n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: '刪除成功',\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          serverDataUpdate();\n       \n        })\n          .catch((error) => {\n            console.log('==delete fail:', error);\n            Message.success('刪除失敗');\n          });\n      }\n    });\n\n\n  }\n\n  function patchOrders(data) {//Use orders patch\n    funUpdate(data._id, { ...data }).then((res) => {\n      console.log('==update success:', res);\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: '編輯成功',\n        showConfirmButton: false,\n        timer: 1500,\n      });\n      serverDataUpdate();\n      setWriteData({});\n      setParsed64('');\n      setEditKey(false);\n      setPopupState(false);\n    })\n      .catch((error) => {\n        console.log('==update fail:', error);\n        Message.success('更新失敗');\n      });\n\n  }\n\n\n  function createUploads() {//Use uploads create\n    return new Promise(async (resolve, reject) => {\n      try {\n\n        const formData = new FormData();\n        Object.keys(writeData).forEach((eKey) => {\n\n          if (eKey == \"vendorName\") {\n            formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n          } else {\n            formData.append(eKey, writeData[eKey]);\n          }\n        });\n        // formData.append('createdTime', new Date().toLocaleString());\n        // formData.append('updatedTime', new Date().toLocaleString());\n\n        if (uploadFile.current !== null && uploadFile.current.files && uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        const Res = await axios(`/uploads`, {\n          method: 'POST',\n          headers: { authorization: window.localStorage['feathers-jwt'] },\n          data: formData\n        });\n\n        resolve(Res);\n      } catch (error) {\n        reject(error);\n      }\n    })\n\n  }\n\n  function patchUploads(data) {//Use uploads patch\n    return new Promise(async (resolve, reject) => {\n      try {\n        let patchUrl = `/uploads?type=${dbName}&id=${data._id}`\n        const formData = new FormData();\n\n        const passKeys = ['files', '_id'];//禁止FormData Patch add Key\n\n        Object.keys(data).forEach((eKey) => {\n\n          if (!passKeys.includes(eKey)) {\n            if (eKey == \"vendorName\") {\n              formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n            } else {\n              formData.append(eKey, writeData[eKey]);\n            }\n          }\n        });\n\n        if (uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n        if (!uploadFile.current.files.length) {\n          patchUrl = `/uploads?type=${dbName}&id=${data._id}&img=keep`\n        }\n        console.log('rdy to PP:', formData);\n        const Res = await axios(patchUrl, {\n          method: 'PATCH',\n          headers: { authorization: window.localStorage['feathers-jwt'] },\n          data: formData\n        });\n\n        resolve(Res);\n      } catch (error) {\n        console.log('PP err:', error);\n        reject();\n      }\n    })\n  }\n\n\n\n\n\n\n  return (\n    <>\n      <Dialog\n\n        hasMask={false}\n        visible={popupState}\n        onOk={() => {\n          createSend();\n        }}\n        onCancel={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n        onClose={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n      >\n        {[...Object.keys(keys)].map((e, nb) => {\n          //-------Render Create Element\n          const type = keys[e].type;\n          if (keys[e].text == \"建立時間\" || keys[e].text == \"修改時間\" || keys[e].text == \"證照\") return \"\";\n          return <Fragment key={keys[e].text}>\n            <Form>\n\n              <Item label={keys[e].text} >\n                {typeComponents(e, type)}\n              </Item>\n\n            </Form>\n          </Fragment>;\n        })}\n      </Dialog>\n\n      <div className=\"addBtnBox\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setPopupState(true);\n          }}\n        >\n          新增訂單\n                </Button>\n        <Button\n        className=\"delBtn\"\n          type=\"secondary\"\n          onClick={() => {\n            deleteAllData();\n          }}\n        >\n          刪除訂單\n                </Button>\n\n\n      </div>\n\n      {currentPosts && currentPosts.length > 0 ?\n\n        <Table dataSource={currentPosts} onSort={onTableSort}>\n          {[...Object.keys(keys)].map((list) => {\n            //  -------Render Table Data\n\n            if (list == \"files\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].files.length > 0 ?\n                    <img className=\"file\" alt=\"No Data\" src={currentPosts[index].files} /> : null}\n\n                </>)\n              }\n              } />\n            } else if (list == \"createTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].createTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"updateTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].updateTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorName\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorName.length > 0 ?\n                    currentPosts[index].vendorName.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorLicense\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorLicense.length > 0 ?\n                    currentPosts[index].vendorLicense.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list.name}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else {\n              return <Table.Column sortable key={keys[list].text} title={keys[list].text} dataIndex={list} width={200} />\n            }\n\n          })}\n          <Table.Column\n            width={200}\n            title=\"操作\"\n            cell={(value, index, record) => {\n              // console.log(value, index, record)\n              return (\n                <div className=\"btnBox\">\n                  <Button\n                    type=\"secondary\"\n                    onClick={() => {\n\n                      patchPayOrders(record)\n                    }}\n                  >\n                    {currentPosts[index].pay === true ? \"已付錢\" : \"付錢\"}\n                  </Button>\n                  <Button\n                    type=\"normal\"\n                    onClick={() => {\n                      setPopupState(true);\n                      setEditKey(true);\n                      setEditIndex(index);\n                      setWriteData({ ...currentPosts[index] });\n                    }}\n                  >\n                    編輯\n                                            </Button>\n\n                  <Button\n                    type=\"primary\"\n                    warning\n                    onClick={() => {\n                      const item = currentPosts[index];\n                      Swal.fire({\n                        title: `確定刪除此資料?`,\n                        text: '刪除後將無法復原!!',\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#3085d6',\n                        cancelButtonColor: '#BEBEBE',\n                        confirmButtonText: '確定',\n                        cancelButtonText: '取消',\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          Swal.fire('刪除!', `此資料已刪除`, 'success');\n                          funRemove(item._id).then(() => {\n                            const prePages =\n                              currentPage - 1 >= 0 ? currentPage - 1 : 0;\n                            if (\n                              props.listData.length - 1 <=\n                              prePages * postsPerPage\n                            ) {\n                              setCurrentPage(\n                                currentPage - 1 < 1 ? 1 : currentPage - 1\n                              );\n                            }\n\n                            serverDataUpdate();\n                          });\n                        }\n                      });\n                    }}\n                  >\n                    刪除\n                                     </Button>\n                </div>\n              );\n            }}\n          />\n        </Table>\n        : null}\n\n\n\n\n      <Pagination\n\n        total={props.listData.length}\n        pageSize={postsPerPage}\n        totalRender={(total) => `Total: ${total}`}\n        onChange={(pageNumber) => {\n          setCurrentPage(pageNumber);\n        }}\n      />\n\n\n    </>\n  );\n}\n\nexport default OrderTable;\n","/Users/Chris/Project/lunch-order-backstage/src/lib/feathers.js",[],"/Users/Chris/Project/lunch-order-backstage/src/pages/Lunch/index.jsx",[],"/Users/Chris/Project/lunch-order-backstage/src/pages/Lunch/Lunch.jsx",["80","81","82","83","84"],"import React, { useState, useEffect } from 'react';\nimport OrderTable from '../../components/OrderTable';\nimport Menu from '../../components/Menu';\n\nconst  Lunch =(props)=> {\n    const tarProps = { //訂單\n        dbName: \"orders\",\n        keys: {\n            name: {\n                type: \"input\",\n                text: \"姓名\"\n            },\n            text: {\n                type: \"input\",\n                text: \"文字\"\n            },\n            money: {\n                type: \"input\",\n                text: \"金額\"\n            },\n          \n    \n        }\n    }\n\n    const menuProps = { //菜單\n        dbName: \"uploads\",\n        keys: {\n            createAt:{\n                type:'none',\n                text:'建立時間'\n            },\n            files: {\n                type: \"uploads\",\n                text: \"菜單\"\n            },\n          \n          \n    \n        }\n    }\n\n    const [myListData, setMyListData] = useState([]);//訂單\n    const [myMenuData, setMyMenuData] = useState([]);//菜單\n    const [myListDataAll, setMyListDataAll] = useState([]);\n    const [totalAllProps, seTotalAllProps] = useState([]);//總金額\n    const [payOk, setPayOk] = useState([]);//付錢\n    useEffect(() => {\n\n         \n        const idNo = [false]\n        const payNo =  [...myListData].filter( i => idNo.includes( i.pay ) ).map(x=>x.name);\n        const idYes = [true]\n        const payYes =  [...myListData].filter( i => idYes.includes( i.pay ) ).map(x=>x.money).reduce(function(a, b) {\n            return parseInt(a) + parseInt(b);\n        }, 0);\n\n\n       console.log(\"payNo\",payNo)\n       console.log(\"payYes\",payYes)\n       props.setPayNoArr(payNo)\n       props.setPayYes(payYes)\n           \n\n     \n    }, [myListData]);\n\n    useEffect(() => {\n\n        const sortedArr = [...myListDataAll].map((e) => {\n            let hasIncludes = false;\n            Object.keys(e).forEach((ee) => {\n                let val2 = e[ee];\n                if (val2.toString().includes(props.filterStr)) hasIncludes = true;\n            })\n            if (hasIncludes) return e;\n            return false;\n        }).filter((e) => e !== false);\n        setMyListData([...sortedArr]);\n    }, [props.filterStr]);\n\n\n    useEffect(() => {\n\n         \n\n        const pay =  [...totalAllProps].map(x=>parseInt(x.money)).reduce(function(a, b) {\n            return a + b;\n        }, 0);\n\n       console.log(\"pay\",pay)\n           \n       props.setPayAllTotal(pay)\n     \n    }, [totalAllProps]);\n\n    // useEffect(() => {\n\n         \n\n    //     const payOkRes =  [...payOk].reduce(function(a, b) {\n    //         return parseInt(a) + parseInt(b);\n    //     }, 0);\n\n    //    console.log(\"payOk\",payOkRes)\n    //    props.setPayOkTotal(payOkRes)  \n\n     \n    // }, [payOk]);\n    return (\n        <>\n                 \n                <OrderTable \n                tarProps={tarProps} \n                listData={myListData} \n                listDataProps={data => setMyListData([...data])} \n                listDataAllProps={data => setMyListDataAll([...data])}  \n                payAllTotalProps={data => seTotalAllProps([...data])} \n                // setPayOkProps={data =>setPayOk([...payOk,...[data]])}\n\n                />\n                <br /><br />\n                <Menu menuProps={menuProps} menuData={myMenuData} menuDataProps={data => setMyMenuData([...data])}  />\n        </>\n    );\n}\n\nexport default Lunch;\n","/Users/Chris/Project/lunch-order-backstage/src/components/menu/index.jsx",[],"/Users/Chris/Project/lunch-order-backstage/src/components/menu/Menu.jsx",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"/Users/Chris/Project/lunch-order-backstage/src/components/Menu/index.jsx",[],"/Users/Chris/Project/lunch-order-backstage/src/components/Menu/Menu.jsx",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport {\n  Button,\n  Dialog,\n  Input,\n  Form,\n  Select,\n  DatePicker,\n  Message,\n  Card,\n  Table,\n  Pagination\n} from \"@alifd/next\";\nimport Swal from 'sweetalert2';\nimport client from '../../lib/feathers';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './Menu.css';\nimport ModalImage from \"react-modal-image\";\nconst Option = Select.Option;\nconst { Item } = Form;\nconst Menu = (props) => {\n  const { dbName, keys, text } = props.menuProps;\n  const dbService = client.service(`${dbName}`);\n\n  const [writeData, setWriteData] = useState({});\n  const [popupState, setPopupState] = useState(false);\n  const [editKey, setEditKey] = useState(false);\n  const [editIndex, setEditIndex] = useState(\"\");\n  //uploads files\n  const [parsed, setParsed] = useState([]);\n  const [parsed64, setParsed64] = useState([]); //Base64\n  const [file, setFile] = useState(\"\");\n  const uploadFile = useRef(null);\n  const uploadExcelFile = useRef(null);\n  // sort\n  const [curdataIndex, setcurDataIndex] = useState('createAt');\n  const [curorder, setcurOrder] = useState('asc');\n  // change page\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = props.menuData.slice(indexOfFirstPost, indexOfLastPost);\n  // dbService\n  async function funFind(para) {\n    const result = await dbService.find({ query: para });\n    // console.log(result);\n    return result && result.data ? result.data : [];\n  }\n\n  async function funCreate(obj) {\n    return (await dbService.create(obj))\n  }\n  async function funUpdate(id, obj) {\n    return (await dbService.patch(id, obj))\n  }\n  async function funRemove(id) {\n    return (await dbService.remove(id))\n  }\n  const serverDataUpdate = (dataIndex, order) => {\n    const rdataIndex = dataIndex || curdataIndex;\n    const rorder = order || curorder;\n\n    funFind({}).then((result) => {\n      const sortedArr = result.sort((a, b) => {\n        const result = (typeof a[rdataIndex] === 'number'\n          ? a[rdataIndex].toString()\n          : a[rdataIndex]\n        ).localeCompare(\n          typeof b[rdataIndex] === 'number'\n            ? b[rdataIndex].toString()\n            : b[rdataIndex]\n        );\n        return rorder === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1;\n      })\n      props.menuDataProps(sortedArr);\n      // props.listDataAllProps(sortedArr)\n    });\n\n\n  };\n  const onTableSort = (dataIndex, order) => {\n    console.log('==dataIndex:', dataIndex, 'order:', order);\n    setcurDataIndex(dataIndex);\n    setcurOrder(order);\n    serverDataUpdate(dataIndex, order);\n  };\n\n  useEffect(() => {\n    serverDataUpdate();\n  }, []);\n\n\n\n  function beforeUpload() {\n    return new Promise(async (resolve, reject) => {\n      if (uploadFile.current.files.length > 0) {\n        const isLt20M =\n          (await uploadFile.current.files[0].size) / 1024 / 1024 < 20;\n\n        if (!isLt20M) {\n          Message.error('Image must smaller than 20MB!');\n          return reject();\n        }\n        resolve(isLt20M);\n      } else {\n        setParsed64('')\n      }\n    });\n  }\n\n  const handleFiles = async () => {\n    try {\n      await beforeUpload();\n      const files = [...parsed];\n      const data = await uploadFile.current.files[0];\n      // console.log(data)\n      files.push(data);\n      setParsed(files);\n\n      //轉Base64 上傳檔案後呈現沒有寫到DB\n      const reader = new FileReader();\n      reader.onload = function () {\n        let dataURL = reader.result;\n        setParsed64(dataURL);\n      };\n      reader.readAsDataURL(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addCreateData = (key, value) => {\n    //-------Input OnChange Event\n    let obj = {};\n    obj[key] = value;\n\n    setWriteData({ ...writeData, ...obj });\n  };\n  const createSend = () => {\n    //-------Create Data 送出\n    Swal.fire({\n      title: `確定新增此資料?`,\n      text: '請確認資料填寫完整!!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#BEBEBE',\n      confirmButtonText: '確定',\n      cancelButtonText: '取消',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        createUploads().then((res) => {\n          Swal.fire('成功!', `此資料已新增`, 'success');\n          console.log('==create success:', res);\n          serverDataUpdate();\n          setWriteData({});\n          setParsed64('');\n          setEditKey(false);\n          setPopupState(false);\n        }).catch((error) => {\n          console.log('==create fail:', error);\n          // Message.error(`${err}`);\n        })\n\n      }\n    });\n\n\n  };\n\n\n\n  const typeComponents = (e, type) => {\n    // Render Type Components\n    let element;\n    switch (type) {\n      case \"input\":\n        element = (\n          <Input\n            value={writeData[e]}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n            placeholder={e}\n          />\n        );\n        break;\n      case \"datePicker\":\n        element = (\n          <DatePicker\n            value={writeData[e]}\n            placeholder={e}\n            onChange={(value) => {\n              addCreateData(e, moment(value).format(\"YYYY-MM-DD\"));\n            }}\n          />\n        );\n        break;\n      case \"textArea\":\n        element = (\n          <Input.TextArea\n            value={writeData[e]}\n            placeholder={e}\n            maxLength={500}\n            rows={6}\n            hasLimitHint\n            aria-label=\"input max length 500\"\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"select\":\n        element = (\n          <Select\n            value={writeData[e]}\n            hasClear\n            style={{ width: '100%' }}\n            placeholder={e}\n            dataSource={props.categoryProps}\n            onChange={(value) => {\n              addCreateData(e, value);\n            }}\n          />\n        );\n        break;\n      case \"uploads\":\n        element = (\n          <>\n            <input\n              accept=\"image/png, image/jpeg ,image/jpg\"\n              ref={uploadFile}\n              onChange={handleFiles}\n              type=\"file\"\n              id=\"file\"\n              name=\"files\"\n            // multiple\n            />\n            {editKey == true ?\n              <img\n                style={{ width: '50px', height: '50px' }}\n                src={`${parsed64.length > 0 ? parsed64 : currentPosts[editIndex].files}`}\n                alt=\"圖片\"\n              />\n\n              : null\n\n            }\n\n            <img className=\"file\" src={`${parsed64.length > 0 ? parsed64 : null}`} alt=\"圖片\"></img>\n          </>);\n        break;\n      case \"multiSelect\":\n        element = (\n          <>\n            <Select\n              mode=\"multiple\"\n              value={writeData[e]}\n              showSearch\n              onChange={(value) => {\n                addCreateData(e, value);\n              }}\n              dataSource={props.venderNameProps}\n              style={{ width: '100%' }}\n            />\n\n          </>);\n        break;\n    }\n    return element;\n  };\n\n  function patchUploads(data) {//edit uploads patch\n    // console.log(\"data\",data)\n\n    Swal.fire({\n      title: `確設定此菜單為本日菜單?`,\n      text: '麻煩再次確認哦～～',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#BEBEBE',\n      confirmButtonText: '確定',\n      cancelButtonText: '取消',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        funUpdate(data._id, { isMenu: \"good\" }).then((res) => {\n          console.log('==update success:', res);\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: '設定成功',\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          serverDataUpdate();\n          setWriteData({});\n          setParsed64('');\n          setEditKey(false);\n          setPopupState(false);\n        })\n          .catch((error) => {\n            console.log('==update fail:', error);\n            Message.success('設定失敗');\n          });\n\n      }\n    });\n\n\n\n  }\n\n\n  function createUploads() {//Use uploads create\n    return new Promise(async (resolve, reject) => {\n      try {\n\n        const formData = new FormData();\n        Object.keys(writeData).forEach((eKey) => {\n\n          if (eKey == \"vendorName\") {\n            formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n          } else {\n            formData.append(eKey, writeData[eKey]);\n          }\n        });\n\n        if (uploadFile.current !== null && uploadFile.current.files && uploadFile.current.files.length > 0) {\n          formData.append('files', uploadFile.current.files[0]);\n        }\n\n        const Res = await axios(`/uploads`, {\n          method: 'POST',\n          headers: { authorization: window.localStorage['feathers-jwt'] },\n          data: formData\n        });\n\n        resolve(Res);\n      } catch (error) {\n        reject(error);\n      }\n    })\n\n  }\n\n  // function patchUploads(data) {//Use uploads patch\n  //   return new Promise(async (resolve, reject) => {\n  //     try {\n  //       let patchUrl = `/uploads?type=${dbName}&id=${data._id}`\n  //       const formData = new FormData();\n\n  //       const passKeys = ['files', '_id'];//禁止FormData Patch add Key\n\n  //       Object.keys(data).forEach((eKey) => {\n\n  //         if (!passKeys.includes(eKey)) {\n  //           if (eKey == \"vendorName\") {\n  //             formData.append(\"vendorName\", JSON.stringify(writeData[eKey]));\n  //           } else {\n  //             formData.append(eKey, writeData[eKey]);\n  //           }\n  //         }\n  //       });\n\n  //       if (uploadFile.current.files.length > 0) {\n  //         formData.append('files', uploadFile.current.files[0]);\n  //       }\n  //       if (!uploadFile.current.files.length) {\n  //         patchUrl = `/uploads?type=${dbName}&id=${data._id}&img=keep`\n  //       }\n  //       console.log('rdy to PP:', formData);\n  //       const Res = await axios(patchUrl, {\n  //         method: 'PATCH',\n  //         headers: { authorization: window.localStorage['feathers-jwt'] },\n  //         data: formData\n  //       });\n\n  //       resolve(Res);\n  //     } catch (error) {\n  //       console.log('PP err:', error);\n  //       reject();\n  //     }\n  //   })\n  // }\n\n\n\n\n\n\n  return (\n    <>\n      <Dialog\n\n        hasMask={false}\n        visible={popupState}\n        onOk={() => {\n          createSend();\n        }}\n        onCancel={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n        onClose={() => {\n          setPopupState(false);\n          setEditKey(false);\n          setWriteData({});\n        }}\n      >\n        {[...Object.keys(keys)].map((e, nb) => {\n          //-------Render Create Element\n          const type = keys[e].type;\n          if (keys[e].text == \"建立時間\" || keys[e].text == \"修改時間\" || keys[e].text == \"證照\") return \"\";\n          return <Fragment key={keys[e].text}>\n            <Form>\n\n              <Item label={keys[e].text} >\n                {typeComponents(e, type)}\n              </Item>\n\n            </Form>\n          </Fragment>;\n        })}\n      </Dialog>\n\n      <div className=\"addBox\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setPopupState(true);\n          }}\n        >\n          新增菜單\n                </Button>\n\n\n      </div>\n      {currentPosts && currentPosts.length > 0 ?\n\n        <Table dataSource={currentPosts} onSort={onTableSort}>\n          {[...Object.keys(keys)].map((list) => {\n            //  -------Render Table Data\n\n            if (list == \"files\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {/* {currentPosts[index].files.length > 0 ?\n                    <img alt=\"No Data\" src={currentPosts[index].files} /> : null} */}\n                  <ModalImage\n                    className=\"file\"\n                    small={currentPosts[index].showPath}\n                    large={currentPosts[index].showPath}\n                    alt=\"Hello World!\"\n                  />;\n\n\n                </>)\n              }\n              } />\n            } else if (list == \"createAt\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].createAt).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"createTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].createTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"updateTime\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} dataIndex={list} cell={(record, index) => {\n\n                return (<>\n                  {new Date(currentPosts[index].updateTime).toLocaleString()}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorName\") {\n              return <Table.Column width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorName.length > 0 ?\n                    currentPosts[index].vendorName.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else if (list == \"vendorLicense\") {\n              return <Table.Column sortable width={200} key={keys[list].text} title={keys[list].text} cell={(record, index) => {\n\n                return (<>\n                  {currentPosts[index].vendorLicense.length > 0 ?\n                    currentPosts[index].vendorLicense.map((list, index) => {\n\n                      return (\n                        <p key={index}>{list.name}</p>\n                      )\n\n                    })\n\n                    : null}\n\n                </>)\n              }\n              } />\n            } else {\n              return <Table.Column sortable key={keys[list].text} title={keys[list].text} dataIndex={list} width={200} />\n            }\n\n          })}\n          <Table.Column\n            width={200}\n            title=\"操作\"\n            cell={(record, index, value) => {\n              // console.log(\"=====hi~~\",record, index, value)\n              return (\n                <div className=\"btnBox\">\n                  <Button\n                    type=\"normal\"\n                    onClick={() => {\n                      patchUploads(value)\n                    }}\n                  >\n                    設為今日菜單\n                    </Button>\n\n                  <Button\n                    type=\"primary\"\n                    warning\n                    onClick={() => {\n                      const item = currentPosts[index];\n                      Swal.fire({\n                        title: `確定刪除此資料?`,\n                        text: '刪除後將無法復原!!',\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#3085d6',\n                        cancelButtonColor: '#BEBEBE',\n                        confirmButtonText: '確定',\n                        cancelButtonText: '取消',\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          Swal.fire('刪除!', `此資料已刪除`, 'success');\n                          funRemove(item._id).then(() => {\n                            const prePages =\n                              currentPage - 1 >= 0 ? currentPage - 1 : 0;\n                            if (\n                              props.menuData.length - 1 <=\n                              prePages * postsPerPage\n                            ) {\n                              setCurrentPage(\n                                currentPage - 1 < 1 ? 1 : currentPage - 1\n                              );\n                            }\n\n                            serverDataUpdate();\n                          });\n                        }\n                      });\n                    }}\n                  >\n                    刪除\n                             </Button>\n                </div>\n              );\n            }}\n          />\n        </Table>\n        : null}\n\n\n\n\n      <Pagination\n\n        total={props.menuData.length}\n        pageSize={postsPerPage}\n        totalRender={(total) => `Total: ${total}`}\n        onChange={(pageNumber) => {\n          setCurrentPage(pageNumber);\n        }}\n      />\n\n\n\n\n\n    </>\n  );\n}\n\nexport default Menu;\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":20},{"ruleId":"132","severity":1,"message":"136","line":10,"column":3,"nodeType":"134","messageId":"135","endLine":10,"endColumn":7},{"ruleId":"132","severity":1,"message":"137","line":19,"column":7,"nodeType":"134","messageId":"135","endLine":19,"endColumn":13},{"ruleId":"132","severity":1,"message":"138","line":22,"column":25,"nodeType":"134","messageId":"135","endLine":22,"endColumn":29},{"ruleId":"132","severity":1,"message":"139","line":33,"column":10,"nodeType":"134","messageId":"135","endLine":33,"endColumn":14},{"ruleId":"132","severity":1,"message":"140","line":33,"column":16,"nodeType":"134","messageId":"135","endLine":33,"endColumn":23},{"ruleId":"132","severity":1,"message":"141","line":35,"column":9,"nodeType":"134","messageId":"135","endLine":35,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":93,"column":6,"nodeType":"144","endLine":93,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":144,"column":17,"nodeType":"148","messageId":"149","endLine":144,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":194,"column":5,"nodeType":"152","messageId":"153","endLine":288,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":258,"column":22,"nodeType":"148","messageId":"149","endLine":258,"endColumn":24},{"ruleId":"132","severity":1,"message":"154","line":413,"column":12,"nodeType":"134","messageId":"135","endLine":413,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":420,"column":20,"nodeType":"148","messageId":"149","endLine":420,"endColumn":22},{"ruleId":"132","severity":1,"message":"155","line":447,"column":12,"nodeType":"134","messageId":"135","endLine":447,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":458,"column":22,"nodeType":"148","messageId":"149","endLine":458,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":515,"column":28,"nodeType":"148","messageId":"149","endLine":515,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":515,"column":54,"nodeType":"148","messageId":"149","endLine":515,"endColumn":56},{"ruleId":"146","severity":1,"message":"147","line":515,"column":80,"nodeType":"148","messageId":"149","endLine":515,"endColumn":82},{"ruleId":"146","severity":1,"message":"147","line":556,"column":22,"nodeType":"148","messageId":"149","endLine":556,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":566,"column":29,"nodeType":"148","messageId":"149","endLine":566,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":575,"column":29,"nodeType":"148","messageId":"149","endLine":575,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":584,"column":29,"nodeType":"148","messageId":"149","endLine":584,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":602,"column":29,"nodeType":"148","messageId":"149","endLine":602,"endColumn":31},{"ruleId":"132","severity":1,"message":"156","line":47,"column":12,"nodeType":"134","messageId":"135","endLine":47,"endColumn":17},{"ruleId":"132","severity":1,"message":"157","line":47,"column":19,"nodeType":"134","messageId":"135","endLine":47,"endColumn":27},{"ruleId":"142","severity":1,"message":"158","line":66,"column":8,"nodeType":"144","endLine":66,"endColumn":20,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"160","line":80,"column":8,"nodeType":"144","endLine":80,"endColumn":25,"suggestions":"161"},{"ruleId":"142","severity":1,"message":"158","line":95,"column":8,"nodeType":"144","endLine":95,"endColumn":23,"suggestions":"162"},{"ruleId":"132","severity":1,"message":"136","line":10,"column":3,"nodeType":"134","messageId":"135","endLine":10,"endColumn":7},{"ruleId":"132","severity":1,"message":"137","line":18,"column":7,"nodeType":"134","messageId":"135","endLine":18,"endColumn":13},{"ruleId":"132","severity":1,"message":"138","line":21,"column":25,"nodeType":"134","messageId":"135","endLine":21,"endColumn":29},{"ruleId":"132","severity":1,"message":"139","line":32,"column":10,"nodeType":"134","messageId":"135","endLine":32,"endColumn":14},{"ruleId":"132","severity":1,"message":"140","line":32,"column":16,"nodeType":"134","messageId":"135","endLine":32,"endColumn":23},{"ruleId":"132","severity":1,"message":"141","line":34,"column":9,"nodeType":"134","messageId":"135","endLine":34,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":91,"column":6,"nodeType":"144","endLine":91,"endColumn":8,"suggestions":"163"},{"ruleId":"146","severity":1,"message":"147","line":142,"column":17,"nodeType":"148","messageId":"149","endLine":142,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":192,"column":5,"nodeType":"152","messageId":"153","endLine":286,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":256,"column":22,"nodeType":"148","messageId":"149","endLine":256,"endColumn":24},{"ruleId":"132","severity":1,"message":"154","line":334,"column":12,"nodeType":"134","messageId":"135","endLine":334,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":341,"column":20,"nodeType":"148","messageId":"149","endLine":341,"endColumn":22},{"ruleId":"132","severity":1,"message":"155","line":368,"column":12,"nodeType":"134","messageId":"135","endLine":368,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":379,"column":22,"nodeType":"148","messageId":"149","endLine":379,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":436,"column":28,"nodeType":"148","messageId":"149","endLine":436,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":436,"column":54,"nodeType":"148","messageId":"149","endLine":436,"endColumn":56},{"ruleId":"146","severity":1,"message":"147","line":436,"column":80,"nodeType":"148","messageId":"149","endLine":436,"endColumn":82},{"ruleId":"146","severity":1,"message":"147","line":468,"column":22,"nodeType":"148","messageId":"149","endLine":468,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":478,"column":29,"nodeType":"148","messageId":"149","endLine":478,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":487,"column":29,"nodeType":"148","messageId":"149","endLine":487,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":496,"column":29,"nodeType":"148","messageId":"149","endLine":496,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":514,"column":29,"nodeType":"148","messageId":"149","endLine":514,"endColumn":31},{"ruleId":"132","severity":1,"message":"136","line":10,"column":3,"nodeType":"134","messageId":"135","endLine":10,"endColumn":7},{"ruleId":"132","severity":1,"message":"137","line":20,"column":7,"nodeType":"134","messageId":"135","endLine":20,"endColumn":13},{"ruleId":"132","severity":1,"message":"138","line":23,"column":25,"nodeType":"134","messageId":"135","endLine":23,"endColumn":29},{"ruleId":"132","severity":1,"message":"164","line":29,"column":21,"nodeType":"134","messageId":"135","endLine":29,"endColumn":33},{"ruleId":"132","severity":1,"message":"139","line":33,"column":10,"nodeType":"134","messageId":"135","endLine":33,"endColumn":14},{"ruleId":"132","severity":1,"message":"140","line":33,"column":16,"nodeType":"134","messageId":"135","endLine":33,"endColumn":23},{"ruleId":"132","severity":1,"message":"141","line":35,"column":9,"nodeType":"134","messageId":"135","endLine":35,"endColumn":24},{"ruleId":"132","severity":1,"message":"165","line":52,"column":18,"nodeType":"134","messageId":"135","endLine":52,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":92,"column":6,"nodeType":"144","endLine":92,"endColumn":8,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"151","line":178,"column":5,"nodeType":"152","messageId":"153","endLine":272,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":242,"column":22,"nodeType":"148","messageId":"149","endLine":242,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":325,"column":20,"nodeType":"148","messageId":"149","endLine":325,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":418,"column":28,"nodeType":"148","messageId":"149","endLine":418,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":418,"column":54,"nodeType":"148","messageId":"149","endLine":418,"endColumn":56},{"ruleId":"146","severity":1,"message":"147","line":418,"column":80,"nodeType":"148","messageId":"149","endLine":418,"endColumn":82},{"ruleId":"146","severity":1,"message":"147","line":449,"column":22,"nodeType":"148","messageId":"149","endLine":449,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":466,"column":29,"nodeType":"148","messageId":"149","endLine":466,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":475,"column":29,"nodeType":"148","messageId":"149","endLine":475,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":484,"column":29,"nodeType":"148","messageId":"149","endLine":484,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":493,"column":29,"nodeType":"148","messageId":"149","endLine":493,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":511,"column":29,"nodeType":"148","messageId":"149","endLine":511,"endColumn":31},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'payOkTotal' is assigned a value but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Option' is assigned a value but never used.","'text' is assigned a value but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'uploadExcelFile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'serverDataUpdate'. Either include it or remove the dependency array.","ArrayExpression",["169"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'createUploads' is defined but never used.","'patchUploads' is defined but never used.","'payOk' is assigned a value but never used.","'setPayOk' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["170"],"React Hook useEffect has a missing dependency: 'myListDataAll'. Either include it or remove the dependency array.",["171"],["172"],["173"],"'setEditIndex' is assigned a value but never used.","'funCreate' is defined but never used.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"175","fix":"183"},{"desc":"175","fix":"184"},"Update the dependencies array to be: [serverDataUpdate]",{"range":"185","text":"186"},"Update the dependencies array to be: [myListData, props]",{"range":"187","text":"188"},"Update the dependencies array to be: [myListDataAll, props.filterStr]",{"range":"189","text":"190"},"Update the dependencies array to be: [props, totalAllProps]",{"range":"191","text":"192"},{"range":"193","text":"186"},{"range":"194","text":"186"},[2918,2920],"[serverDataUpdate]",[1678,1690],"[myListData, props]",[2139,2156],"[myListDataAll, props.filterStr]",[2415,2430],"[props, totalAllProps]",[2849,2851],[2808,2810]]